{"config":{"lang":["en"],"separator":"[\\s\\u200b\\-_,:!=\\[\\]()\"`/]+|\\.(?!\\d)|&[lg]t;|(?!\\b)(?=[A-Z][a-z])","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Getting Started with alitiq APIs \ud83c\udf1f","text":"<p>Welcome to alitiq\u2019s Forecasting Services, where innovation meets precision in solar PV and load forecasting (wind is coming soon ;). This guide provides an overview of alitiq\u2019s APIs and a step-by-step approach to get started. Whether you're managing solar installations or planning for energy demand, alitiq offers robust solutions tailored to your needs.</p>"},{"location":"#overview-of-alitiq-apis","title":"Overview of alitiq APIs \ud83d\udee0\ufe0f","text":"<p>alitiq offers different services via <code>api.alitiq.com</code>:  </p>"},{"location":"#1-solar-pv-forecasting-api","title":"1. Solar PV Forecasting API \ud83c\udf1e","text":"<p>Designed for managing and forecasting solar power plants, this API provides:  </p> <ul> <li>Portfolio Management: Add, update, or remove PV systems.  </li> <li>Power Forecasting: Retrieve accurate solar power forecasts for individual locations or entire portfolios.  </li> <li>Measurement Management: Push real-time or historical data for more precise forecasting.  </li> </ul> <p>The endpoint for this service is <code>api.alitiq.com/solar</code></p>"},{"location":"#2-load-forecasting-api","title":"2. Load Forecasting API \ud83d\udd0b","text":"<p>Optimized for heat, gas, and electricity forecasting, this API enables: </p> <ul> <li>Energy Load Predictions: Obtain detailed forecasts for individual locations.  </li> <li>Measurement Inspection: Retrieve historical data for analysis.  </li> <li>Custom Models: Leverage alitiq\u2019s optimized forecasting models for enhanced accuracy.  </li> </ul> <p>The endpoint for this service is <code>api.alitiq.com/load</code></p>"},{"location":"#3-weather-forecasting-api","title":"3. Weather Forecasting API \ud83c\udf24\ufe0f","text":"<p>Weather is our profession but not our business. Eitherways weather data is a basis for our enhanced forecasts. So we make available any kind of weather information via out Weather API. </p> <ul> <li>Weather Forecast: Obtain weather forecasts for individual locations from several leading national weather services.  </li> <li>Weather Observations: Access a global network of weather observations ranging from remote sesnsing (radar, satellite) to point observations </li> </ul> <p>The endpoint for this service is <code>api.alitiq.com/weather</code></p>"},{"location":"#how-to-get-access","title":"How to Get Access \ud83d\udd11","text":"<p>Currently alitiq offers a web interface to the solar power forecast service. After you have logged in, you can view the <code>x-api-key</code> </p>"},{"location":"#solar-pv-forecasting-api","title":"Solar PV Forecasting API \ud83c\udf1e","text":"<ul> <li>Step 1: Register your account at Solar-APP.  </li> <li>Step 2: Once registered, you\u2019ll receive your API key and relevant details.  </li> <li>Step 3: Use the SDK or directly interact with the API to manage your solar portfolio.  </li> </ul>"},{"location":"#load-wind-weather-forecasting-api","title":"Load | Wind | Weather Forecasting API \ud83d\udd0b","text":"<ul> <li>Step 1: Contact sales@alitiq.com for API access and pricing information.  </li> <li>Step 2: Once approved, you\u2019ll receive your API key and documentation tailored to your energy needs.  </li> <li>Step 3: Use the SDK or API to push measurements, retrieve forecasts, and manage demand analytics.  </li> </ul>"},{"location":"#security-with-x-api-key","title":"Security with <code>x-api-key</code> \ud83d\udd12","text":"<p>The alitiq Solar API uses the <code>x-api-key</code> for authentication and portfolio mapping. This key is unique to each user and is required to access the API. It ensures that:  </p> <ol> <li>Portfolio Mapping: The <code>x-api-key</code> links your requests to the correct portfolio, ensuring you access only your Solar PV systems and associated data.  </li> <li>Restricted Access: Only users with the correct <code>x-api-key</code> can access your portfolio.  </li> </ol>"},{"location":"#keep-your-x-api-key-safe","title":"Keep Your <code>x-api-key</code> Safe","text":"<p>To maintain the security and confidentiality of your portfolio: - Do not share your API key with unauthorized individuals. - Store it securely, such as in environment variables or a secure credentials manager. - Regenerate your API key immediately if you suspect it has been compromised.  </p> <p>Your <code>x-api-key</code> is the gateway to your portfolio\u2014keep it protected to ensure your data stays safe.  </p>"},{"location":"#whats-next","title":"What\u2019s Next? \ud83d\ude80","text":"<p>Once you have your API key: 1. Install the <code>alitiq-py</code> SDK: <pre><code>pip install alitiq\n</code></pre> 2. Follow the Quickstart Guide to set up your first integration. 3. Explore the API Documentation (coming soon) for advanced use cases.  </p>"},{"location":"#need-help","title":"Need Help? \ud83e\udd14","text":"<p>For further assistance: - Contact us at support@alitiq.com for technical queries. - Reach out to sales@alitiq.com for load forecast-related inquiries.  </p> <p>\ud83c\udf1f Start forecasting smarter with alitiq today! \ud83c\udf1f</p>"},{"location":"knowledge/","title":"alitiq Knowledge Base","text":"<p>Welcome to alitiq's Blog about all topics about Energy Forecasting. From AI architecture to Servers and eXchange. </p>"},{"location":"knowledge/2024/08/16/your-first-steps-in-the-alitiq-solar-application-/","title":"Your first steps in the alitiq solar application \u2600\ufe0f","text":"<p>Welcome to the alitiq-solar Application! Nice that you have found your way to us. Here we give you a tiny and quick introduction into our solar web application and guide you through the first steps you need to setup your portfolio.</p>"},{"location":"knowledge/2024/08/16/your-first-steps-in-the-alitiq-solar-application-/#promise","title":"Promise \ud83d\ude4f","text":"<p>You should feel comfortable with us and it should be as easy as possible for you to obtain forecasts for your solar assets. You can rely on that! And if this is not the case, then get in touch with us directly at: solar@alitiq.com</p>"},{"location":"knowledge/2024/08/16/your-first-steps-in-the-alitiq-solar-application-/#dig-in","title":"Dig in \ud83d\udea7","text":"<p>Now let's start with your first steps in the alitiq solar-app. </p>"},{"location":"knowledge/2024/08/16/your-first-steps-in-the-alitiq-solar-application-/#1-setup-your-pv-systems","title":"1. Setup your PV systems","text":"<p>To receive first forecast, you need to setup your PV-systems. Move on to the menue bar on the left hand side and select the <code>Portfolio</code> tab. You will see two tabs, one for the overview of your <code>Portfolio</code> and one to <code>Add new PV-system</code>. Take the last one to move on. </p> <p>For this step we have a dedicated page to explain how to setup a system in our portal here</p>"},{"location":"knowledge/2024/08/16/your-first-steps-in-the-alitiq-solar-application-/#2-wait","title":"2. Wait \u23f3","text":"<p>We are very sorry, but now we have to wait until the next cycle of forecasts are running. It takes a maximum of 6 hours to see forecasts from all available models. </p>"},{"location":"knowledge/2024/08/16/your-first-steps-in-the-alitiq-solar-application-/#3-view-your-forecasts","title":"3. View your forecasts \ud83d\udcc8","text":"<p>Now we are ready that you can view your forecasts. Navigate to the <code>Forecast</code> tab in menue. Select a system and you will see the most recent forecast: </p> <p></p>"},{"location":"knowledge/2024/08/16/your-first-steps-in-the-alitiq-solar-application-/#4-plugin-the-api-to-your-system","title":"4. Plugin the API to your system \ud83d\udd0c","text":"<p>In the <code>Forecast</code>view you will see a tiny API endpoint creator. It will help you to setup the right API calls. For further details on how to receive data from the API take a look into our API Doc</p>"},{"location":"knowledge/2024/08/16/your-first-steps-in-the-alitiq-solar-application-/#5-optimized-forecast","title":"5. Optimized Forecast \ud83e\udde0","text":"<p>To receive our AI-optimized forecasts, you simply need to push measurements/production data back at least 90 days from now via API. If you do not provide measurements/production data of you PV-systems, a default will be selected for the <code>optimized</code> model. </p>"},{"location":"knowledge/2024/08/16/your-first-steps-in-the-alitiq-solar-application-/#6-intraday-updates","title":"6. Intraday Updates","text":"<p>In case you update the measurements/production data every 15 minutes, with a delay of max 1 hour, you will receive updates every 15 minutes based on the most recent production of your system. </p>"},{"location":"knowledge/2024/11/22/how-to-evaluate-forecasts-for-the-energy-sector-in-2025-/","title":"How to Evaluate Forecasts for the Energy Sector in 2025 \u26a1\ud83d\udcca","text":"<p>Forecasting is a cornerstone of the energy sector, enabling decision-making for operations, investments, and policy development. However, the real value of a forecast lies in its evaluation and cross-validation. How well did it predict reality?  Here\u2019s a step-by-step guide to evaluating forecasts, focusing on understanding the process, selecting the right forecasts, and comparing them against observations.</p>"},{"location":"knowledge/2024/11/22/how-to-evaluate-forecasts-for-the-energy-sector-in-2025-/#1-understand-the-process-decision-making-context","title":"1. Understand the Process: Decision-Making Context \ud83d\udcc5\ud83e\udde0","text":"<p>Before diving into evaluation, it\u2019s crucial to understand why the forecast was made and what kind of forecast horizon we need to target this. This context is key to interpreting the results correctly. In general you can differ between three different kind of forecast in the energy industry overall: </p> <ul> <li>Operational Forecasts: Short-term, used for managing daily grid operations or scheduling energy dispatch.</li> <li>Market Forecasts: Medium-term, help with bidding strategies or setting tariffs.</li> <li>Strategic Forecasts: Long-term, guide investment decisions like building renewable plants or expanding infrastructure.</li> </ul> <p>By clarifying the decision-making context and forecast horizon upfront, you can set the right expectations for evaluation. </p>"},{"location":"knowledge/2024/11/22/how-to-evaluate-forecasts-for-the-energy-sector-in-2025-/#2-select-forecasts-for-evaluation-what-and-when","title":"2. Select Forecasts for Evaluation: What and When? \ud83d\udcc2","text":"<p>Energy systems generate forecasts at multiple time steps and for various variables (e.g., demand, generation, prices). Evaluating them all can be overwhelming, so filter relevant forecasts based on:</p> <ol> <li>Variable of Interest: E.g., electricity demand, wind power, spot prices.</li> <li>Horizon &amp; Timing: Only forecasts relevant to your decision-making window should be considered.</li> <li>Availability of Observations: You need actual data (ground truth) to evaluate forecasts.</li> </ol>"},{"location":"knowledge/2024/11/22/how-to-evaluate-forecasts-for-the-energy-sector-in-2025-/#example-selecting-forecasts-to-evaluate","title":"Example: Selecting Forecasts to Evaluate","text":"<pre><code># Filter forecasts for evaluation\nforecasts = pd.DataFrame({\n    \"calculation_timestamp\": [\"2024-11-17\", \"2024-11-17\", \"2024-11-17\"],\n    \"timestamp\": [\"2024-11-17\", \"2024-11-18\", \"2024-11-19\"],\n    \"forecasted_demand\": [1000, 1050, 1100],\n    \"observed_demand\": [1020, 1040, 1095]\n})\n\n# Focus on dates within the day-ahead horizon, according to the given calculation timestamp at 17th of novembre: \nstart_date = \"2024-11-18\"\nend_date = \"2024-11-19\"\n\nfiltered_forecasts = forecasts[\n    (forecasts[\"timestamp\"] &gt;= start_date) &amp; (forecasts[\"timestamp\"] &lt;= end_date)\n]\n\nprint(filtered_forecasts)\n</code></pre> <p>This step ensures you\u2019re only working with forecasts that are meaningful and can be tested against real data.</p>"},{"location":"knowledge/2024/11/22/how-to-evaluate-forecasts-for-the-energy-sector-in-2025-/#3-evaluate-forecasts-against-observations-metrics-tools","title":"3. Evaluate Forecasts Against Observations: Metrics &amp; Tools \ud83d\udcc8\ud83d\udcc9 \ud83d\udcca","text":"<p>With the relevant forecasts in hand, the next step is to calculate forecast accuracy or error metrics by comparing predictions to actual observations. Common metrics include:</p> <ul> <li>Mean Absolute Error (MAE): Average absolute difference between forecasts and observations. Should be used with a normalization only, otherwise it will overweight low valued errors. </li> <li>Root Mean Square Error (RMSE): Emphasizes larger errors, useful for operational reliability. This is the most powerful metric</li> <li>Bias: Average over- or under-prediction. Really helpful to understand e.g. optimisation potential, as systematic errors are much easier to vanish. Your forecast should be bias free in any case.  </li> </ul>"},{"location":"knowledge/2024/11/22/how-to-evaluate-forecasts-for-the-energy-sector-in-2025-/#example-calculating-error-metrics","title":"Example: Calculating Error Metrics","text":"<pre><code>import numpy as np\n\n# Calculate error metrics\nfiltered_forecasts[\"error\"] = (\n    filtered_forecasts[\"forecasted_demand\"] - filtered_forecasts[\"observed_demand\"]\n)\n\n# Metrics\nmae = np.mean(abs(filtered_forecasts[\"error\"]))\nrmse = np.sqrt(np.mean(filtered_forecasts[\"error\"]**2))\nmape = np.mean(abs(filtered_forecasts[\"error\"] / filtered_forecasts[\"observed_demand\"])) * 100\n\nprint(f\"MAE: {mae:.2f}, RMSE: {rmse:.2f}, MAPE: {mape:.2f}%\")\n</code></pre> <p>Output: <pre><code>MAE: 10.00, RMSE: 10.44, MAPE: 0.94%\n</code></pre></p> <p>These metrics quantify how close the forecasts were to the observed values and highlight areas for improvement.</p>"},{"location":"knowledge/2024/11/22/how-to-evaluate-forecasts-for-the-energy-sector-in-2025-/#4-iterative-refinement-learn-improve","title":"4. Iterative Refinement: Learn &amp; Improve \ud83d\udd01\ud83d\ude80","text":"<p>Forecast evaluation is not a one-and-done task. Use insights from evaluation to refine your models or forecasting processes:</p> <ol> <li>Investigate Bias: If forecasts are consistently over- or under-predicting, revisit assumptions or inputs.</li> <li>Tailor Horizons: Maybe different horizons need distinct models.</li> <li>Collaborate: Feedback loops between forecasters and decision-makers can ensure alignment.</li> </ol>"},{"location":"knowledge/2024/11/22/how-to-evaluate-forecasts-for-the-energy-sector-in-2025-/#tools-for-forecast-evaluation","title":"Tools for Forecast Evaluation \ud83d\udee0","text":"<p>Python libraries like pandas, numpy, and scikit-learn are great for quick evaluations. For advanced needs, explore:</p> <ul> <li><code>statsmodels</code>: Time series analysis and evaluation. Test stationarity and seasonality. </li> <li><code>forecast-tools</code>: Pre-built utilities for energy forecasting.</li> <li><code>matplotlib</code> or <code>seaborn</code>: Visualization to uncover patterns or anomalies.</li> </ul>"},{"location":"knowledge/2024/11/22/how-to-evaluate-forecasts-for-the-energy-sector-in-2025-/#conclusion","title":"\ud83c\udfc1 Conclusion \ud83c\udfc1","text":"<p>Evaluating energy sector forecasts isn\u2019t just about crunching numbers\u2014it\u2019s about understanding the decision context, selecting relevant forecasts, and applying the right metrics. By following a structured approach, you can ensure forecasts serve their ultimate purpose: empowering smart decisions. \ud83c\udfaf\u2728</p> <p>Got any tips or favorite metrics? Share them in the comments below! \ud83d\udc47</p>"},{"location":"knowledge/2025/07/23/why-understanding-curtailments-and-unavailabilities-matters-for-power-forecasting-/","title":"Why Understanding Curtailments and Unavailabilities Matters for Power Forecasting \u26a1\ud83c\udf2c\ufe0f","text":"<p>In the quest for accurate wind power forecasting, there's one reality that often gets in the way: real-world power output does not always reflect the full capacity of your wind turbines or pv systems. This discrepancy is frequently caused by curtailments and unavailabilities.</p> <p>At alitiq, we prioritize forecasting based on true system potential, not reduced or distorted generation. Here's why it matters \u2014 and what we do to ensure our forecasts are always a true representation of full operational availability.</p>"},{"location":"knowledge/2025/07/23/why-understanding-curtailments-and-unavailabilities-matters-for-power-forecasting-/#what-are-curtailments-and-unavailabilities","title":"What Are Curtailments and Unavailabilities?","text":""},{"location":"knowledge/2025/07/23/why-understanding-curtailments-and-unavailabilities-matters-for-power-forecasting-/#curtailments","title":"Curtailments","text":"<p>Curtailments refer to intentional reductions in wind power output. This can be due to: - Grid constraints - Market signals - Maintenance needs - Safety or compliance regulations</p> <p>Even though the wind is blowing and the turbines could produce energy, they\u2019re instructed not to.</p>"},{"location":"knowledge/2025/07/23/why-understanding-curtailments-and-unavailabilities-matters-for-power-forecasting-/#unavailabilities","title":"Unavailabilities","text":"<p>Unavailabilities are unplanned or planned outages in renewable energy generation: - Turbine failures - Inverter failures - Scheduled maintenance - Communication breakdowns - Sensor issues or data gaps - Damage due to severe weather</p> <p>These events result in zero or reduced output, but not because of environmental or performance limitations.</p>"},{"location":"knowledge/2025/07/23/why-understanding-curtailments-and-unavailabilities-matters-for-power-forecasting-/#why-forecasting-needs-clean-training-data","title":"Why Forecasting Needs Clean Training Data","text":"<p>If we trained our forecasting models on raw generation data that includes curtailments or unavailabilities, the results would be: - Underestimated forecasts, because the model \"learns\" that the site often produces less than potential. - Erroneous correlations, where the model mistakenly attributes reductions to weather or other valid features. - Poor generalization, especially when turbines or pv system return to full service.</p>"},{"location":"knowledge/2025/07/23/why-understanding-curtailments-and-unavailabilities-matters-for-power-forecasting-/#alitiqs-approach-always-forecasting-100-availability","title":"alitiq\u2019s Approach: Always Forecasting 100% Availability","text":"<p>At alitiq, we mask curtailed or unavailable data in our training pipeline. This ensures that: - Our models only learn from valid, fully available system behavior. - Forecasts reflect what the system could produce, not what it did produce under constraints. - You get a forecast for ideal availability, giving operators a baseline to measure performance, efficiency, or lost revenue.</p> <p>This approach allows for: - More reliable capacity planning - Better grid interaction and reserve allocation - Accurate performance benchmarking </p>"},{"location":"knowledge/2025/07/23/why-understanding-curtailments-and-unavailabilities-matters-for-power-forecasting-/#how-you-can-help-improve-forecast-accuracy","title":"How You Can Help Improve Forecast Accuracy","text":"<p>To get the best from your forecasts, we recommend: 1. Reporting curtailments: Use our <code>/curtailments/add/</code> endpoint to provide structured curtailment data. It exists both for wind and solar. 2. Marking unavailabilities: Let us know when turbines or the pv system are out of service. 3. Pushing complete measurement data: Even historical values can improve learning.</p> <p>By integrating curtailments and unavailabilities into your data pipeline, you're actively contributing to cleaner, smarter forecasts.</p>"},{"location":"knowledge/2025/07/23/why-understanding-curtailments-and-unavailabilities-matters-for-power-forecasting-/#conclusion","title":"Conclusion","text":"<p>Forecasting isn\u2019t just about knowing the solar irradiance or the wind \u2014 it\u2019s about understanding when your system isn\u2019t playing at full strength.</p> <p>At alitiq, we\u2019re committed to providing 100% availability forecasts that you can rely on. Masking curtailments and unavailabilities is just one of the many ways we make our predictions smarter, fairer, and more actionable.</p> <p>For any questions or integration support, reach out at support@alitiq.com \u2014 we\u2019re here to help! \ud83d\udcac</p>"},{"location":"knowledge/2024/10/16/pitfalls-using-mape-as-forecast-accuracy-metric/","title":"Pitfalls using MAPE as forecast accuracy metric","text":""},{"location":"knowledge/2024/10/16/pitfalls-using-mape-as-forecast-accuracy-metric/#introduction","title":"Introduction","text":"<p>Despite being a very popular metric for measuring forecast accuracy in forecasting, MAPE certainly has its strengths and limitations that anyone using it should take into consideration. This deep review of the efficacy of MAPE for measuring forecast accuracy in any kind of forecasting task like heat demand, solar- or wind power and inspect the metric\u2019s behavior in different scenarios. For scenarios where MAPE is not suitable, alternative metrics are discussed.</p> <p></p> <p>The equation shows how the MAPE is calculated. <code>E_t</code> is the extimated/predicted value at specific time and <code>A_t</code> is the Actual or Observed/Measured value at specific time. <code>N</code> is the number of timesteps (or length of dataset) to derive MAPE for.  </p>"},{"location":"knowledge/2024/10/16/pitfalls-using-mape-as-forecast-accuracy-metric/#mape-mean-absolute-percentage-error","title":"MAPE (Mean Absolute Percentage Error)","text":""},{"location":"knowledge/2024/10/16/pitfalls-using-mape-as-forecast-accuracy-metric/#strengths","title":"Strengths","text":"<ul> <li>Easy to Interpret: MAPE is easy to understand. For example, if MAPE for monthly demand forecasts of a product is 10% over the last 12 months, it means that forecasts were wrong by 10% on average over this time period.</li> <li>Scale Independent: MAPE is suitable for comparisons across different data sets as it is scale independent.</li> </ul>"},{"location":"knowledge/2024/10/16/pitfalls-using-mape-as-forecast-accuracy-metric/#limitations","title":"Limitations","text":"<ol> <li> <p>Bias for Very Low Values and Outliers:</p> <ul> <li>MAPE can get significantly inflated due to low values or outliers. </li> <li>Example: A drop in observed values to 20 units can result in an absolute percentage error (APE) of 6000%, affecting the overall MAPE.</li> </ul> </li> <li> <p>Intermittent Values:</p> <ul> <li>MAPE becomes infinite or undefined for data with zero values periods, making it unsuitable for assessing forecast accuracy in such cases.</li> </ul> </li> <li> <p>Asymmetry:</p> <ul> <li>MAPE can appear asymmetric because over-predictions can result in a higher MAPE compared to under-predictions.</li> </ul> </li> <li> <p>Directionless:</p> <ul> <li>MAPE does not reflect the direction of errors (over-predictions vs. under-predictions), which can be crucial in supply chain demand planning.</li> </ul> </li> </ol>"},{"location":"knowledge/2024/10/16/pitfalls-using-mape-as-forecast-accuracy-metric/#alternatives-to-mape","title":"Alternatives to MAPE","text":""},{"location":"knowledge/2024/10/16/pitfalls-using-mape-as-forecast-accuracy-metric/#rmse-root-mean-squared-error","title":"RMSE (Root Mean Squared Error)","text":"<ul> <li>The root mean square error (RMSE) measures the average difference between a statistical model\u2019s predicted values and the actual values. </li> <li>Mathematically, it is the standard deviation of the residuals. Residuals represent the distance between the regression line and the data points.</li> </ul>"},{"location":"knowledge/2024/10/16/pitfalls-using-mape-as-forecast-accuracy-metric/#wape-weighted-absolute-percentage-error","title":"WAPE (Weighted Absolute Percentage Error)","text":"<ul> <li>Defined as the sum of absolute errors divided by the sum of actual values.</li> <li>Like MAPE, it is scale-free but does not get inflated by small values.</li> </ul>"},{"location":"knowledge/2024/10/16/pitfalls-using-mape-as-forecast-accuracy-metric/#mdape-median-absolute-percentage-error","title":"MdAPE (Median Absolute Percentage Error)","text":"<ul> <li>More resistant to outliers compared to MAPE.</li> </ul>"},{"location":"knowledge/2024/10/16/pitfalls-using-mape-as-forecast-accuracy-metric/#mase-mean-absolute-scaled-error","title":"MASE (Mean Absolute Scaled Error)","text":"<ul> <li>Scales forecast errors by the in-sample, one-step-ahead MAE of the Na\u00efve method.</li> <li>Suitable for intermittent values but less intuitive to interpret.</li> </ul>"},{"location":"knowledge/2024/10/16/pitfalls-using-mape-as-forecast-accuracy-metric/#smae-scaled-mae","title":"sMAE (Scaled MAE)","text":"<ul> <li>Uses the in-sample actual values mean as the scaling factor.</li> <li>More intuitive than MASE but problematic for non-stationary data.</li> </ul>"},{"location":"knowledge/2024/10/16/pitfalls-using-mape-as-forecast-accuracy-metric/#practical-implications","title":"Practical Implications","text":"<ul> <li>Blindly optimizing for MAPE can result in sub-optimal forecasts. </li> <li>WAPE can be a better alternative in scenarios where MAPE\u2019s limitations are pronounced.</li> </ul>"},{"location":"knowledge/2024/10/16/pitfalls-using-mape-as-forecast-accuracy-metric/#summary","title":"Summary","text":"<ol> <li>Intuitive and Suitable for Comparisons: MAPE is easy to understand and compare.</li> <li>Handling Trade-offs: For trade-offs between over-prediction and under-prediction, MAPE can be split into components.</li> <li>Skewed Distribution: MAPE is not suitable for data with periods of low values or intermittent values.</li> <li>Asymmetry in Predictions: MAPE is unbounded for over-predictions and can lead to conservative forecasts.</li> <li>Alternative Metrics: WAPE is a scale-free metric that addresses many concerns of MAPE while retaining similar strengths.</li> </ol>"},{"location":"knowledge/2024/10/16/pitfalls-using-mape-as-forecast-accuracy-metric/#references","title":"References","text":"<ol> <li>Armstrong, J. Scott, and Fred Collopy. 1992. \u201cError Measures for Generalizing about Forecasting Methods: Empirical Comparisons.\u201d International Journal of Forecasting 8(1). doi: 10.1016/0169-2070(92)90008-W.</li> <li>Goodwin, Paul, and Richard Lawton. 1999. \u201cOn the Asymmetry of the Symmetric MAPE.\u201d International Journal of Forecasting 15(4):405\u20138. doi: 10.1016/S0169-2070(99)00007-2.</li> </ol>"},{"location":"knowledge/2024/10/02/push-and-retrieve-data-from-sftp-pandas-python/","title":"Push and retrieve data from sftp pandas python","text":"<p>Let's assume you are having your observation/measurement data in in a <code>pd.DataFrame</code> or in any kind of a file-like object ready to push to an external sFTP. Here we show you how to push the data to the alitiq sFTP. </p> <p>The user will be authenticated by its SSH-Key.</p>"},{"location":"knowledge/2024/10/02/push-and-retrieve-data-from-sftp-pandas-python/#push-data-from-pddataframe","title":"Push data from pd.DataFrame","text":"<pre><code>import paramiko\nfrom io import StringIO\nimport pandas as pd\n\n\ndef push_dataframe_to_sftp(\n        host: str,\n        port: int,\n        username: str,\n        path_to_private_key: str,\n        dataframe: pd.DataFrame,\n        destination_file_path: str\n) -&gt; None:\n    \"\"\" push a dataframe as csv to the sftp server  \"\"\"\n    with open(path_to_private_key, 'r') as key_file:\n        keyfile = StringIO(key_file.read())\n\n    ssh = paramiko.SSHClient()\n    ssh.set_missing_host_key_policy(paramiko.AutoAddPolicy())\n    ssh.connect(host, port=port, username=username, pkey=paramiko.RSAKey.from_private_key(keyfile))\n    sftp_client = ssh.open_sftp()\n    with sftp_client.open(destination_file_path, \"w\") as f:\n        f.write(dataframe.to_csv(index=False))\n\n\npush_dataframe_to_sftp(\n    \"sftp.alitiq.com\",\n    2022,\n    \"your-username\",\n    \"path/to/your/private_key_file\",\n    pd.DataFrame(),\n    \"measurement_engine/data_test.csv\"\n)\n</code></pre>"},{"location":"knowledge/2024/10/02/push-and-retrieve-data-from-sftp-pandas-python/#push-from-local-file","title":"Push from local file","text":"<p>Now you want to retrieve the forecast data from our sFTP, into your python script? </p> <pre><code>def push_local_file_to_sftp(\n        host: str,\n        port: int,\n        username: str,\n        path_to_private_key: str,\n        path_to_local_file: str,\n        destination_file_path: str\n) -&gt; None:\n    \"\"\" push a local file to the sftp server  \"\"\"\n    with open(path_to_private_key, 'r') as key_file:\n        keyfile = StringIO(key_file.read())\n\n    ssh = paramiko.SSHClient()\n    ssh.set_missing_host_key_policy(paramiko.AutoAddPolicy())\n    ssh.connect(host, port=port, username=username, pkey=paramiko.RSAKey.from_private_key(keyfile))\n    sftp_client = ssh.open_sftp()\n    sftp_client.put(path_to_local_file, destination_file_path)\n\n\npush_local_file_to_sftp(\n    \"sftp.alitiq.com\",\n    2022,\n    \"your-username\",\n    \"path/to/your/private_key_file\",\n    \"path/to/your/local/upload/file\",\n    \"measurement_engine/data_test.csv\"\n)\n</code></pre>"},{"location":"knowledge/2024/10/02/push-and-retrieve-data-from-sftp-pandas-python/#retrieve-data","title":"Retrieve data","text":"<p>The following script shows you how to download a specific file from an external sFTP instance. </p> <pre><code>def download_latest_file_from_sftp(\n        host: str,\n        port: int,\n        username: str,\n        path_to_private_key: str,\n        path_to_local_file: str,\n        remote_directory: str = 'forecast/'\n) -&gt; None:\n    \"\"\" downloads the most recent file from a given directory on sftp  \"\"\"\n    with open(path_to_private_key, 'r') as key_file:\n        keyfile = StringIO(key_file.read())\n\n    ssh = paramiko.SSHClient()\n    ssh.set_missing_host_key_policy(paramiko.AutoAddPolicy())\n    ssh.connect(host, port=port, username=username, pkey=paramiko.RSAKey.from_private_key(keyfile))\n    sftp_client = ssh.open_sftp()\n    latest = 0\n    sftp_client.chdir(remote_directory)\n    for fileattr in sftp_client.listdir_attr():\n        if fileattr.filename.startswith(datetime.utcnow().strftime('%Y')) and fileattr.st_mtime &gt; latest:\n            latest = fileattr.st_mtime\n            latestfile = fileattr.filename\n\n    if latestfile is not None:\n        sftp_client.get(latestfile, path_to_local_file)\n\n\ndownload_latest_file_from_sftp(\n    \"sftp.alitiq.com\",\n    2022,\n    \"your-username\",\n    \"path/to/your/private_key_file\",\n    \"forecast_engine/latest_forecast_file.csv\",\n)\n</code></pre>"},{"location":"knowledge/2024/10/02/push-and-retrieve-data-from-sftp-pandas-python/#notes","title":"Notes","text":"<p>At alitiq we use port 2022 for our sFTP. By default we provide ssh Authentication with all common encryption protocols. We recommend to use <code>ed25519</code>.  On alitiq's sFTP server we have created by default the following:</p> <ul> <li>measurement_engine</li> <li>measurement_solar</li> <li>measurement_wind</li> <li>forecast_engine</li> <li>forecast_solar</li> <li>forecast_wind</li> </ul> <p>The directories are named after the different forecast services that alitiq provides. </p>"},{"location":"knowledge/2025/02/17/retrieve-weather-forecasts-from-alitiq-api-with-python-and-pandas-/","title":"Retrieve Weather Forecasts from alitiq-API with python and pandas \ud83c\udf24\ufe0f","text":"<p>Parsing weather forecasts from our Weather API is easy and just needs some lines of code. You need to know which weather forecasting model and the location you want to get forecasts for. </p> <pre><code>import pandas as pd\nimport requests\nfrom io import StringIO\n\n#  configure the request # \nweather_model= 'icon_eu'  # without weather_model you will receive mos_mix forecast for the closest location\nresponse_format= 'json'  # alternative: csv or html\napi_token= '' # add your token here \nlatitude, longitude = 49.23247790, 6.98900836\n# zip_code = 86424\n# city_name = 'Munich'\n\n# query api # \nresponse = requests.get(\n    f\"https://api.alitiq.com/weather_forecast/?\"\n    f\"latitude={latitude}&amp;\"\n    f\"longitude={longitude}&amp;\"\n    f\"weather_model={weather_model}&amp;\"  # comment this line to retrieve mos_mix forecast as default \n    f\"response_format={response_format}\",\n    headers={'x-api-key': api_token},\n    verify=True\n)\ndata = pd.read_json(StringIO(response.text), orient='split')\n</code></pre> <p>Further information can be found here: </p>"},{"location":"knowledge/2025/08/19/setup-new-load-forecast-location/","title":"Setup new load forecast location","text":""},{"location":"knowledge/2025/08/19/setup-new-load-forecast-location/#how-to-define-load-locations-in-the-alitiq-load-forecasting-api","title":"How to Define Load Locations in the alitiq Load Forecasting API","text":"<p>** Ready to start forecasting load efficiently?** Setting up accurate load locations is the first step toward unlocking smarter demand insights\u2014whether it's electricity, gas, or district heating.</p>"},{"location":"knowledge/2025/08/19/setup-new-load-forecast-location/#why-defining-load-locations-matters","title":"Why defining load locations matters","text":"<p>Every load forecast begins with a proper location setup. By defining a load location, you're telling the API where (geographically) and what type of energy demand you wish to forecast. Each location requires:</p> <ul> <li>A <code>site_name</code> for easy reference</li> <li>Coordinates (<code>latitude</code>, <code>longitude</code>)</li> <li>An optional <code>location_id</code> (your external identifier)</li> </ul> <p>Once configured, you can submit measurements, retrieve forecasts, and seamlessly integrate data into your systems.</p>"},{"location":"knowledge/2025/08/19/setup-new-load-forecast-location/#step-by-step-add-a-load-location","title":"Step-by-step: Add a Load Location","text":"<p>Here's how you set up a new location using the API.</p>"},{"location":"knowledge/2025/08/19/setup-new-load-forecast-location/#using-python-with-requests","title":"Using Python (with <code>requests</code>):","text":"<pre><code>import requests\n\nurl = \"https://api.alitiq.com/load/location/add/\"\nheaders = {\n    \"Content-Type\": \"application/json\",\n    \"x-api-key\": \"{your-api-key}\",\n}\n\npayload = {\n    \"site_name\": \"Facility A\",\n    \"location_id\": \"FAC-A\",       # optional external ID\n    \"latitude\": 48.1351,\n    \"longitude\": 11.5820,\n    # other fields like service, reference_weather_station are optional\n}\n\nresp = requests.post(url, json=payload, headers=headers)\nprint(resp.status_code, resp.json())\n</code></pre>"},{"location":"knowledge/2025/08/19/setup-new-load-forecast-location/#expected-response","title":"Expected response:","text":"<pre><code>{\n  \"location_id\": \"FAC-A\",\n  \"site_name\": \"Facility A\"\n}\n</code></pre> <p>This confirms your load location is set up and mapped to your identifier.</p>"},{"location":"knowledge/2025/08/19/setup-new-load-forecast-location/#using-the-alitiq-sdk-python","title":"Using the alitiq SDK (Python)","text":"<p>If you're using the SDK, here's how to do it:</p> <pre><code>from alitiq import alitiqLoadAPI, LoadLocationForm\n\n# Initialize client\nload_api = alitiqLoadAPI(api_key=\"your-api-key\")\n\n# Define location using Pydantic model\nlocation = LoadLocationForm(\n    site_name=\"Facility A\",\n    location_id=\"FAC-A\",\n    latitude=48.1351,\n    longitude=11.5820,\n    service=\"electricity-load\"  # Optional; defaults to \"electricity-load\"\n)\n\n# Create the location\nresponse = load_api.create_location(location)\nprint(\"Created load location:\", response)\n</code></pre> <p>The SDK ensures your data is validated before sending\u2014latitude/longitude ranges, empty names, and incorrect enums will be caught early.</p>"},{"location":"knowledge/2025/08/19/setup-new-load-forecast-location/#inspect-your-portfolio","title":"Inspect your portfolio","text":"<p>List all defined load locations via API:</p> <pre><code>resp = requests.get(\n    \"https://api.alitiq.com/load/location/list/\",\n    headers={\"x-api-key\": \"your-api-key\"},\n    params={\"response_format\": \"json\"}\n)\nprint(resp.json())\n</code></pre> <p>Or, using the SDK:</p> <pre><code>df = load_api.list_locations()\nprint(df)\n</code></pre> <p>You'll get a structured table of all your locations, complete with <code>site_name</code>, <code>location_id</code>, coordinates, and timestamps.</p>"},{"location":"knowledge/2025/08/19/setup-new-load-forecast-location/#takeaways","title":"Takeaways","text":"Action Benefit Define site_name and coordinates Precisely geolocate your forecast target Use optional external ID (<code>location_id</code>) Maintain consistent references in your records Use SDK's <code>LoadLocationForm</code> Leverage built-in validation and cleaner code List locations Quickly audit and manage your portfolio <p>Defining load locations correctly ensures reliable integrations with measurements and forecasts\u2014and sets the stage for smarter energy management.</p> <p>Need help or feedback? Reach out to support@alitiq.com</p> <p>Let me know if you'd like tweaks to tone, length, or code examples!</p>"},{"location":"knowledge/2025/02/02/-setup-your-pv-system-for-solar-power-forecast--alitiq/","title":"\u26a1 Setup your PV-System for Solar Power Forecast @ alitiq","text":"<p>In our general Documentation about the API here, we described the way to setup / configure your PV-System in a high-level way. To give you a more detailed view into the way we think about PV-Systems and how you can boost the performance by just following this guide, keep reading. </p>"},{"location":"knowledge/2025/02/02/-setup-your-pv-system-for-solar-power-forecast--alitiq/#locations-and-subsystems","title":"Locations and Subsystems","text":"<p>Each PV-System is defined by it's location and 1 or more subsystems. A PV-System is divided into subsystems by unique combinations of the azimuth (or module orientation) and tilt (or slope) of the modules. Maybe, this will differ from the inverter and string setup. </p> <p></p> <p>Please note, that we ask for measurements for a System and not for a Subsystem, which means we only interest in the outcome of the whole PV-System in case you are interested in receiving optimized forecast. </p> <p>So just find out your different azimuth and tilt combinations and split up the inverter and module power according to the share of the installed power of the whole system. </p> <p>The <code>location</code> has to defined once for each subsystem in the upper section of the configuration panel. </p> <p></p>"},{"location":"knowledge/2025/02/02/-setup-your-pv-system-for-solar-power-forecast--alitiq/#azimuth","title":"Azimuth","text":"<p>We have defined that a southern azimuth equals 180 \u00b0. A northern azimuth equals 0 \u00b0or 360 \u00b0. An azimuth to the west is 270 \u00b0 and to the east 90 \u00b0. There is noe difference between Northern or Southern hemisphere. So PV-Systems in Australia facing to the north have the azimuth 0 \u00b0. </p> <p></p>"},{"location":"knowledge/2025/02/02/-setup-your-pv-system-for-solar-power-forecast--alitiq/#example","title":"Example","text":"<p>We assume the system, you can see in the image above, has an installed module capacity of 100 kWp and an installed inverter capacity of 80 kWp. 70 % belongs to the left roof and 30 % to the right roof. From the specifications we know the tilt of the pv modules is 10 \u00b0. This means that this PV-System splits up into 4 Subsystems and here is how:</p> <ol> <li>Left-Roof: Module azimuth of 93 \u00b0 and tilt 10 \u00b0 , with 35 % of 100 kWp installed capacity is 35 kWP and 28 kWp inverter capacity </li> <li>Left-Roof: Module azimuth of 273 \u00b0 and tilt 10 \u00b0 , with 35 % of 100 kWp installed capacity is 35 kWP and 28 kWp inverter capacity </li> <li>Right-Roof: Module azimuth of 96 \u00b0 and tilt 10 \u00b0 , with 15 % of 100 kWp installed capacity is 15 kWP and 12 kWp inverter capacity</li> <li>Right-Roof: Module azimuth of 276 \u00b0 and tilt 10 \u00b0 , with 15 % of 100 kWp installed capacity is 15 kWP and 12 kWp inverter capacity</li> </ol>"},{"location":"knowledge/2025/02/02/-setup-your-pv-system-for-solar-power-forecast--alitiq/#tracking","title":"Tracking","text":"<p> Setting up a system with a tracking is a bit more complex compared to the other. First of all you have to know the type of the tracking. We differ between:</p> <ol> <li>No Tracking</li> <li>Vertical Axis Tracking</li> <li>Horizontal Axis Tracking</li> <li>Dual Axis Tracking</li> </ol> <p>In case your system runs with a backtracking algorithm to reduce shading in the morning and evening hours, turn on the radio button.  The other parameters (table length, height and row distance are important for the backtracking algorithm). </p>"},{"location":"knowledge/2025/02/02/-setup-your-pv-system-for-solar-power-forecast--alitiq/#boosting-your-pv-forecast-performance","title":"Boosting your PV forecast performance?","text":"<p>In case you are unable to share near realtime data from your pv system with us, your forecast will derived by default according to the configuration you have made in our portal. As much more accurate the setup is, the more accurate the forecast will be. And even when you provide measurements from your pv systems, the initial guess or baseline forecast will help our machine learning and artifical intelligence algorithms to derive more accurate forecasts for your. </p>"},{"location":"knowledge/2024/12/16/-uncertainty-quantification-in-renewable-energy-forecasting-a-guide-to-smarter-predictions-in-2025/","title":"\ud83c\udf1e Uncertainty Quantification in Renewable Energy Forecasting: A Guide to Smarter Predictions in 2025","text":"<p>Renewable energy forecasting plays a crucial role in the sustainable energy ecosystem. However, the inherently variable nature of renewable sources like solar and wind presents a unique challenge: uncertainty. Tackling this uncertainty effectively can help improve energy grid stability, reduce costs, and foster efficient resource allocation. In this article, we'll dive into uncertainty quantification (UQ) in renewable energy forecasting, exploring its sources, methods, and benefits. Let\u2019s navigate this exciting landscape! \ud83d\ude80</p>"},{"location":"knowledge/2024/12/16/-uncertainty-quantification-in-renewable-energy-forecasting-a-guide-to-smarter-predictions-in-2025/#the-sources-of-uncertainty-in-renewable-energy-forecasting","title":"\ud83c\udf2a\ufe0f The Sources of Uncertainty in Renewable Energy Forecasting","text":"<p>Uncertainty in renewable energy forecasting stems from a mix of intrinsic variability and predictive limitations:</p> <ol> <li>Weather Conditions: Solar irradiance, wind speed, and cloud coverage can fluctuate unpredictably.</li> <li>Model Limitations: No forecasting model is perfect; errors in data, assumptions, or algorithms can introduce bias.</li> <li>External Factors: Equipment inefficiencies, environmental obstructions, or unexpected downtime can add complexity.</li> </ol> <p>Understanding these uncertainties enables us to develop robust methods for quantifying and managing them.</p>"},{"location":"knowledge/2024/12/16/-uncertainty-quantification-in-renewable-energy-forecasting-a-guide-to-smarter-predictions-in-2025/#methods-of-uncertainty-quantification-a-comprehensive-overview","title":"\ud83d\udcca Methods of Uncertainty Quantification: A Comprehensive Overview","text":"<p>UQ involves estimating the range of possible outcomes for renewable energy generation. This can be achieved through various approaches, each tailored to specific scenarios. Here\u2019s a breakdown:</p>"},{"location":"knowledge/2024/12/16/-uncertainty-quantification-in-renewable-energy-forecasting-a-guide-to-smarter-predictions-in-2025/#1-model-agnostic-uncertainty-quantification","title":"1\ufe0f\u20e3 Model-Agnostic Uncertainty Quantification","text":"<p>This approach focuses on historic forecast errors rather than the underlying model itself. By analyzing past prediction accuracy, one can estimate the likely bounds of future predictions.</p> <ul> <li>How It Works: </li> <li>Collect historic forecast data and compare it to actual outcomes.</li> <li>Use statistical models (e.g., Gaussian distributions, quantile regression) to estimate the uncertainty range.</li> <li>Pros:</li> <li>Simple and easily implemented across different forecasting models.</li> <li>Requires no knowledge of the internal workings of predictive models.</li> <li>Cons:</li> <li>Relies heavily on the quality and availability of historic data.</li> <li>May not adapt well to new trends or changing conditions.</li> </ul> <p>\ud83d\udd0d Example: If historical errors show a consistent \u00b110% deviation from predicted wind energy output, future forecasts can factor in this range for better planning.</p>"},{"location":"knowledge/2024/12/16/-uncertainty-quantification-in-renewable-energy-forecasting-a-guide-to-smarter-predictions-in-2025/#2-ensemble-generation-via-weather-forecasts","title":"2\ufe0f\u20e3 Ensemble Generation via Weather Forecasts","text":"<p>Weather forecasts are often the primary input for renewable energy predictions. Using ensembles\u2014multiple forecasts from slightly varied initial conditions\u2014helps capture the variability in weather predictions.</p> <ul> <li>How It Works:</li> <li>Generate multiple weather forecasts (ensembles) using variations in initial atmospheric conditions.</li> <li>Feed these forecasts into renewable energy models to create a range of possible energy outputs.</li> <li>Pros:</li> <li>Provides a dynamic and scenario-based approach to uncertainty.</li> <li>Captures non-linear relationships between weather inputs and energy output.</li> <li>Cons:</li> <li>Computationally expensive due to the need for multiple simulations.</li> <li>Dependent on the accuracy of underlying weather models.</li> </ul> <p>\ud83c\udf26\ufe0f Example: An ensemble weather forecast might predict wind speeds ranging from 5 to 15 m/s, leading to energy outputs varying from 100 MW to 300 MW. Planners can prepare for all scenarios.</p>"},{"location":"knowledge/2024/12/16/-uncertainty-quantification-in-renewable-energy-forecasting-a-guide-to-smarter-predictions-in-2025/#3-historic-data-and-machine-learning-hybrid-approach","title":"3\ufe0f\u20e3 Historic Data and Machine Learning (Hybrid Approach)","text":"<p>Combining historic error patterns with advanced machine learning models can create adaptive uncertainty bounds.</p> <ul> <li>How It Works:</li> <li>Train ML models on historic forecast data to predict error ranges.</li> <li>Incorporate new data (e.g., updated weather forecasts) to refine predictions.</li> <li>Pros:</li> <li>Highly adaptive to evolving patterns.</li> <li>Can uncover complex relationships that traditional methods might miss.</li> <li>Cons:</li> <li>Requires large, high-quality datasets.</li> <li>Model training can be resource-intensive.</li> </ul> <p>\ud83e\udd16 Example: A neural network could learn that cloudy weather combined with low wind speeds tends to lead to higher forecast errors for solar farms. It could then predict uncertainty dynamically.</p>"},{"location":"knowledge/2024/12/16/-uncertainty-quantification-in-renewable-energy-forecasting-a-guide-to-smarter-predictions-in-2025/#benefits-of-uncertainty-quantification-in-renewable-energy","title":"\ud83c\udf1f Benefits of Uncertainty Quantification in Renewable Energy","text":"<p>Quantifying uncertainty isn't just about mitigating risks; it also unlocks a range of opportunities:</p> <ul> <li>Improved Grid Management: Operators can prepare for variability and maintain stability. \u26a1</li> <li>Enhanced Financial Planning: Accurate risk estimates help in pricing energy and managing contracts. \ud83d\udcb0</li> <li>Optimized Storage Solutions: Battery usage can be planned more efficiently with knowledge of possible fluctuations. \ud83d\udd0b</li> <li>Policy Support: Decision-makers can create better-informed policies to support renewable integration. \ud83d\udcdc</li> </ul>"},{"location":"knowledge/2024/12/16/-uncertainty-quantification-in-renewable-energy-forecasting-a-guide-to-smarter-predictions-in-2025/#the-future-of-uq-in-renewable-energy","title":"\ud83d\ude80 The Future of UQ in Renewable Energy","text":"<p>As renewable energy adoption accelerates, UQ methods will become more sophisticated. Innovations like AI-driven prediction models, integration with IoT devices, and real-time ensemble generation will further enhance accuracy. \ud83c\udf10 </p> <p>Investing in robust UQ systems today ensures a more resilient, efficient, and sustainable energy future. \ud83c\udf0d\ud83d\udca1</p>"},{"location":"knowledge/2024/12/16/-uncertainty-quantification-in-renewable-energy-forecasting-a-guide-to-smarter-predictions-in-2025/#key-takeaways","title":"\ud83c\udfaf Key Takeaways","text":"<ol> <li>Uncertainty in renewable energy forecasting arises from weather variability, model errors, and external factors.</li> <li>Model-agnostic methods, weather-ensemble approaches, and hybrid ML techniques are powerful tools for UQ.</li> <li>Proper UQ leads to better grid management, financial planning, and policy-making.</li> </ol>"},{"location":"load_forecast/inspect_load_measurement/","title":"How to Inspect Measurement Data with the alitiq Load API \ud83d\udd0d","text":"<p>The load forecasting API provides powerful tools to inspect and analyze the historical measurement data for your assets/portfolios. This feature allows you to validate submitted data, track system performance, and gain insights into your load characteristics.  </p>"},{"location":"load_forecast/inspect_load_measurement/#overview","title":"Overview","text":"<p>Inspecting data involves retrieving historical measurement records stored in the alitiq system for a specific load timeseries. You can define a time range, customize the output format, and perform detailed analysis on the retrieved data.</p>"},{"location":"load_forecast/inspect_load_measurement/#key-features","title":"Key Features \u2728","text":"<ul> <li>Flexible Time Ranges: Retrieve data for any specified date range.  </li> <li>Detailed Records: Includes power output, timestamps, and optional irradiance values.  </li> <li>Analysis Ready: Data is returned in a format suitable for direct analysis using tools like pandas.  </li> </ul>"},{"location":"load_forecast/inspect_load_measurement/#required-parameters","title":"Required Parameters","text":"<p>To inspect data, provide the following information:  </p> Parameter Type Description Default <code>location_id</code> <code>str</code> Unique identifier of the location whose data you want to inspect. None <code>start_date</code> <code>datetime</code> (Optional) Start date for the inspection range. 2 days before today <code>end_date</code> <code>datetime</code> (Optional) End date for the inspection range. Today"},{"location":"load_forecast/inspect_load_measurement/#example-inspect-data","title":"Example: Inspect Data","text":"<p>Below is an example of how to use the <code>measurement/inspect/</code> endpoint to inspect data and the method <code>get_measurements</code>:  </p> python requestsalitiq-pycURL <pre><code>import requests\n\nurl = \"https://api.alitiq.com/load/measurement/inspect/\"\n\nquerystring = {\"location_id\":\"123\",\"response_format\":\"json\"}\n\npayload = \"\"\nheaders = {\"x-api-key\": \"api-key\"}\n\nresponse = requests.request(\"GET\", url, data=payload, headers=headers, params=querystring)\n\nprint(response.text)\n</code></pre> <pre><code>from datetime import datetime, timedelta\nfrom alitiq import alitiqLoadAPI\n\n# Initialize the API client\nload_api = alitiqLoadAPI(api_key=\"your-api-key\")\n\n# Define the location and date range\nlocation_id = \"99\"  # defined by alitiq\nstart_date = datetime.now() - timedelta(days=7)  # 7 days ago\nend_date = datetime.now()  # Today\n\n# Inspect measurement data\ndata = load_api.get_measurements(\n    location_id=location_id, \n    start_date=start_date, \n    end_date=end_date\n)\n\n# Print the retrieved data\nprint(data)\n</code></pre> <pre><code>curl --request GET \\\n  --url 'https://api.alitiq.com/load/measurement/inspect/?location_id=123&amp;response_format=json' \\\n  --header 'x-api-key: api-key'\n</code></pre>"},{"location":"load_forecast/inspect_load_measurement/#api-response","title":"API Response","text":"<p>The API returns the measurement data in a pandas-compatible format (e.g., JSON), which can be directly loaded into a DataFrame for further analysis:  </p> <pre><code>|       dt        |   power   |  timezone | interval_in_minutes | window_boundary |  \n|-----------------|-----------|-----------|---------------------|------------------|  \n| 2024-06-10 10:00|  120.5    |   UTC     | 15                  | end              |  \n| 2024-06-10 10:15|  90.8     |   UTC     | 15                  | end              |  \n| 2024-06-10 10:30|  150.0    |   UTC     | 15                  | end              |  \n</code></pre>"},{"location":"load_forecast/inspect_load_measurement/#best-practices","title":"Best Practices","text":"<ul> <li>Validate Data: Regularly inspect your measurement data to ensure it is accurate and complete.  </li> <li>Batch Analysis: Retrieve data in chunks for longer periods to avoid API response size limitations.  </li> <li>Timezone Awareness: Ensure the <code>timezone</code> is consistent across measurements for accurate analysis.  </li> </ul>"},{"location":"load_forecast/inspect_load_measurement/#advanced-use-case-data-visualization","title":"Advanced Use Case: Data Visualization","text":"<p>You can use tools like <code>matplotlib</code> or <code>seaborn</code> to visualize the data for insights:  </p> <pre><code>import matplotlib.pyplot as plt\n\n# Visualize power output over time\ndata.plot(x='dt', y='power', title=\"Power Output Over Time\", figsize=(10, 6))\nplt.show()\n</code></pre>"},{"location":"load_forecast/inspect_load_measurement/#notes","title":"Notes","text":"<ul> <li>Performance: For large datasets, limit the date range to improve response time.  </li> <li>Missing Data: If any data points are missing, double-check your measurement submissions.  </li> <li>Data Validation: The SDK validates data upon submission to minimize errors during inspection.  </li> </ul> <p>For further questions or issues, contact support@alitiq.com. \ud83c\udf1f  </p>"},{"location":"load_forecast/load_power_forecast/","title":"Accessing Forecasts with the alitiq Load API","text":"<p>The alitiq Load API provides robust and flexible forecasting capabilities for individual timeseries and entire portfolios. This guide walks you through retrieving forecasts and explains the parameters that allow you to tailor the output to your specific needs.</p>"},{"location":"load_forecast/load_power_forecast/#features","title":"Features \ud83c\udf1f","text":"<ul> <li>Flexibility in Forecasting: Customize forecasts using parameters such as time zone, interval, and power measurement.  </li> <li>Asset-Level Forecasting: Retrieve precise forecasts for individual Load timeseries.  </li> <li>Time-Specific Forecasts: Fetch forecasts calculated at specific times (<code>dt_calc</code>) for advanced planning.  </li> <li>Easy Access &amp; Integration: By using your own location identifier it is easy to access the right forecasts and  integrate it into your system</li> </ul>"},{"location":"load_forecast/load_power_forecast/#forecasting-for-a-single-load-timeseries","title":"Forecasting for a Single Load timeseries","text":"<p>To access a forecast for a specific Solar PV system, use the <code>forecast/</code> endpoint from the API or the <code>get_forecast</code> method from the SDK.</p>"},{"location":"load_forecast/load_power_forecast/#example","title":"Example","text":"python requestsalitiq-pycURL <pre><code>import requests\n\nurl = \"https://api.alitiq.com/load/forecast/\"\n\nquerystring = {\"location_id\":\"123\",\"response_format\":\"html\", \"timezone\":\"UTC\",\"power_measure\":\"kW\",\"interval_in_minutes\":\"15\"}\n\npayload = \"\"\nheaders = {\"x-api-key\": \"your-api-key\"}\n\nresponse = requests.request(\"GET\", url, data=payload, headers=headers, params=querystring)\n\nprint(response.text)\n</code></pre> <pre><code>from datetime import datetime\nfrom alitiq import alitiqLoadAPI\n\n# Initialize the Solar API client\nload_api = alitiqLoadAPI(api_key=\"your-api-key\")\n\n# Retrieve forecast for a specific Solar PV system\nforecast = load_api.get_forecast(\n    location_id=\"99\",  # Replace with your system's location ID\n    dt_calc=datetime(2024, 6, 15, 12),  # Optional: specify the calculation timestamp\n    power_measure=\"kW\",  # Specify the power measurement unit\n    timezone=\"UTC\",  # Set the timezone\n    interval_in_minutes=15,  # Set the forecast interval\n    window_boundary=\"end\"  # Define how intervals are calculated\n)\n\n# Display the forecast\nprint(forecast)\n</code></pre> <pre><code>curl --request GET \\\n  --url 'https://api.alitiq.com/load/forecast/?location_id=99&amp;response_format=json&amp;timezone=UTC&amp;power_measure=kW&amp;interval_in_minutes=15' \\\n  --header 'x-api-key: your-api-key'\n</code></pre>"},{"location":"load_forecast/load_power_forecast/#understanding-forecast-parameters","title":"Understanding Forecast Parameters","text":"<p>The following parameters offer you flexibility when generating forecasts:  </p> Parameter Description Default Value <code>location_id</code> Unique identifier for the Solar PV system. Required for system-level forecasts. This is your defined identifer. None <code>dt_calc</code> Timestamp for forecast calculation. Useful for time-specific forecasts, and access historic ones. Latest available <code>power_measure</code> Unit of power measurement (<code>kW</code>, <code>MW</code>, etc.). <code>\"kW\"</code> <code>timezone</code> Timezone for the forecast timestamnps. Available timezones can be found here <code>\"UTC\"</code> <code>interval_in_minutes</code> Forecast interval (e.g., <code>15</code> for 15-minute intervals). Important for retieving Energy instead of Power <code>15</code> <code>window_boundary</code> Defines interval boundaries (<code>begin</code>, <code>center</code>, or <code>end</code>). <code>\"end\"</code>"},{"location":"load_forecast/load_power_forecast/#flexibility-as-a-feature","title":"Flexibility as a Feature","text":"<p>The flexibility to define parameters ensures that the API adapts to various use cases, whether you need:  </p> <ul> <li>Forecasts for specific systems.  </li> <li>Customized intervals and time zones.  </li> <li>Tailored outputs based on specific power measurement units.  </li> </ul> <p>This adaptability makes the alitiq Solar API a powerful tool for energy planning and decision-making.  </p>"},{"location":"load_forecast/load_power_forecast/#support","title":"Support","text":"<p>For further assistance, contact support@alitiq.com. \ud83c\udf1e  </p>"},{"location":"load_forecast/push_load_measurement/","title":"Pushing Measurements to the alitiq Load API \ud83d\udcca","text":"<p>This guide explains how to push measurements from a Solar PV power plant to the alitiq Solar API. Measurements are critical for enhancing forecast accuracy and for monitoring performance.  </p>"},{"location":"load_forecast/push_load_measurement/#overview","title":"Overview","text":"<p>The alitiq Load API allows you to submit real-time or historical measurement data from your load timeseries. Each measurement includes details about the time of recording, power/load, and additional optional information like irradiance.  </p>"},{"location":"load_forecast/push_load_measurement/#key-features","title":"Key Features \u2728","text":"<ul> <li>Real-time Measurements: Submit live data for improved forecast accuracy.  </li> <li>Historical Measurements: Push past data for performance analysis and enhanced forecasting.  </li> <li>Flexible Time Intervals: Define custom intervals for measurements (e.g., 15 minutes).  </li> </ul>"},{"location":"load_forecast/push_load_measurement/#required-measurement-data","title":"Required Measurement Data","text":"<p>When pushing measurements, you need to include the following information:  </p> Field Type Description Default <code>location_id</code> <code>str</code> Unique ID of the location where the measurement was recorded. None <code>dt</code> <code>datetime</code> Timestamp of the measurement (ISO 8601 format). None <code>power</code> <code>float</code> Power output recorded (in specified unit). None <code>power_measure</code> <code>str</code> Unit of power measurement (<code>kW</code>, <code>W</code>, etc.). <code>kW</code> <code>timezone</code> <code>str</code> Timezone of the measurement timestamp. Available timezones can be found here <code>UTC</code> <code>interval_in_minutes</code> <code>int</code> Interval between measurement timestamps (in minutes). Important to derive your data into MW which is the default in our database <code>15</code> <code>window_boundary</code> <code>str</code> Defines the interval's alignment (<code>begin</code>, <code>center</code>, or <code>end</code>). <code>end</code>"},{"location":"load_forecast/push_load_measurement/#detailed-explanation","title":"Detailed explanation:","text":"<ul> <li><code>timezone</code>: Specify the timezone of your data. Common options include:</li> <li>Europe/Berlin (includes daylight saving time)</li> <li>Etc/GMT-1 (standard time, no daylight saving)</li> <li>UTC (default)</li> <li><code>window_boundary</code>: Define where the timestamp is located within the time window. Options are:</li> <li>begin</li> <li>center</li> <li>end (default)</li> <li><code>power_measure</code>: Specify the SI unit of your data. Available options are:</li> <li>W</li> <li>kW</li> <li>MW (default)</li> <li>MWh</li> <li>kWh</li> <li>Wh</li> <li><code>interval_in_minutes</code>: Define the time interval between measurements. This is especially important if your data is in energy units rather than power.</li> </ul>"},{"location":"load_forecast/push_load_measurement/#note-on-historical-measurements","title":"Note on Historical Measurements","text":"<p>To provide highly optimized forecasts, the API requires at least 90 days of historical measurement data for a given load timeseries. This data enables the system to fine-tune forecasts to match the unique characteristics of your setup.  This data needs to updated once per day for the last 24 hours. In case of diurnal updates, alitiq will adapt the forecast tot the latest observations every 15 minutes. </p>"},{"location":"load_forecast/push_load_measurement/#example-code-to-push-measurements","title":"Example Code to Push Measurements","text":"<p>Here\u2019s an example demonstrating how to submit measurement data using the <code>measurement/add/</code> endpoint and the python-SDK method <code>post_measurements</code>:</p> python requestsalitiq-pycURL <pre><code>import requests\n\nurl = \"https://api.alitiq.com/load/measurement/add/\"\n\npayload = [\n    {\n        \"location_id\": 2,\n        \"dt\": \"2022-03-06T09:45:00.000\",\n        \"power\": 201,\n        \"interval_in_minutes\": 15,\n        \"timezone\": \"UTC\",\n        \"window_boundary\": \"end\",\n        \"power_measure\": \"kW\"\n    },\n    {\n        \"location_id\": 2,\n        \"dt\": \"2022-03-06T10:00:00.000\",\n        \"power\": 213,\n        \"interval_in_minutes\": 15,\n        \"timezone\": \"UTC\",\n        \"window_boundary\": \"end\",\n        \"power_measure\": \"kW\"\n    },\n    {\n        \"location_id\": 2,\n        \"dt\": \"2022-03-06T10:15:00.000\",\n        \"power\": 242,\n        \"interval_in_minutes\": 15,\n        \"timezone\": \"UTC\",\n        \"window_boundary\": \"end\",\n        \"power_measure\": \"kW\"\n    },\n    {\n        \"location_id\": 2,\n        \"dt\": \"2022-03-06T10:30:00.000\",\n        \"power\": 270,\n        \"interval_in_minutes\": 15,\n        \"timezone\": \"UTC\",\n        \"window_boundary\": \"end\",\n        \"power_measure\": \"kW\"\n    },\n    {\n        \"location_id\": 2,\n        \"dt\": \"2022-03-06T10:45:00.000\",\n        \"power\": 320,\n        \"interval_in_minutes\": 15,\n        \"timezone\": \"UTC\",\n        \"window_boundary\": \"end\",\n        \"power_measure\": \"kW\"\n    },\n    {\n        \"location_id\": 2,\n        \"dt\": \"2022-03-06T11:00:00.000\",\n        \"power\": 397,\n        \"interval_in_minutes\": 15,\n        \"timezone\": \"UTC\",\n        \"window_boundary\": \"end\",\n        \"power_measure\": \"kW\"\n    }\n]\nheaders = {\"Content-Type\": \"application/json\", \"x-api-key\": {api-key}}\n\nresponse = requests.request(\"POST\", url, json=payload, headers=headers)\n\nprint(response.text)\n</code></pre> <pre><code>from datetime import datetime\nfrom alitiq import alitiqLoadAPI, EngineMeasurementForm\n\n# Initialize the API client\nload_api = alitiqLoadAPI(api_key=\"your-api-key\")\n\n# Create measurement data\nload_measurements = [\n    EngineMeasurementForm(\n        location_id=\"SP123\",\n        dt=datetime(2024, 6, 10, 10).isoformat(),\n        power=120.5,\n        power_measure=\"kW\",\n        timezone=\"UTC\",\n        interval_in_minutes=15,\n        window_boundary=\"end\",\n    ),\n    EngineMeasurementForm(\n        location_id=\"SP123\",\n        dt=datetime(2024, 6, 10, 10, 15).isoformat(),\n        power=90.8,\n        power_measure=\"kW\",\n        timezone=\"UTC\",\n        interval_in_minutes=15,\n        window_boundary=\"end\",\n    ),\n    EngineMeasurementForm(\n        location_id=\"SP123\",\n        dt=datetime(2024, 6, 10, 10, 30).isoformat(),\n        power=150.0,\n        power_measure=\"kW\",\n        timezone=\"UTC\",\n        interval_in_minutes=15,\n        window_boundary=\"end\",\n    ),\n]\n\n# Push measurements to the API\nresponse = load_api.post_measurements(load_measurements)\n\n# Print the API response\nprint(\"API Response:\", response)\n</code></pre> <pre><code>curl --request POST \\\n  --url https://api.alitiq.com/load/measurement/add/ \\\n  --header 'Content-Type: application/json' \\\n  --header 'x-api-key: {api-key}' \\\n  --data '[\n    {\n        \"location_id\": 2,\n        \"dt\": \"2022-03-06T09:45:00.000\",\n        \"power\": 201.0,\n        \"interval_in_minutes\": 15,\n        \"timezone\": \"UTC\",\n        \"window_boundary\": \"end\",\n        \"power_measure\": \"kW\"\n    },\n    {\n        \"location_id\": 2,\n        \"dt\": \"2022-03-06T10:00:00.000\",\n        \"power\": 213.0,\n        \"interval_in_minutes\": 15,\n        \"timezone\": \"UTC\",\n        \"window_boundary\": \"end\",\n        \"power_measure\": \"kW\"\n    },\n    {\n        \"location_id\": 2,\n        \"dt\": \"2022-03-06T10:15:00.000\",\n        \"power\": 242.0,\n        \"interval_in_minutes\": 15,\n        \"timezone\": \"UTC\",\n        \"window_boundary\": \"end\",\n        \"power_measure\": \"kW\"\n    },\n    {\n        \"location_id\": 2,\n        \"dt\": \"2022-03-06T10:30:00.000\",\n        \"power\": 270.0,\n        \"interval_in_minutes\": 15,\n        \"timezone\": \"UTC\",\n        \"window_boundary\": \"end\",\n        \"power_measure\": \"kW\"\n    },\n    {\n        \"location_id\": 2,\n        \"dt\": \"2022-03-06T10:45:00.000\",\n        \"power\": 320,\n        \"interval_in_minutes\": 15,\n        \"timezone\": \"UTC\",\n        \"window_boundary\": \"end\",\n        \"power_measure\": \"kW\"\n    },\n    {\n        \"location_id\": 2,\n        \"dt\": \"2022-03-06T11:00:00.000\",\n        \"power\": 397,\n        \"interval_in_minutes\": 15,\n        \"timezone\": \"UTC\",\n        \"window_boundary\": \"end\",\n        \"power_measure\": \"kW\"\n    }\n]'\n</code></pre>"},{"location":"load_forecast/push_load_measurement/#api-response","title":"API Response","text":"<ul> <li>A successful request will return a confirmation message indicating the data was received and processed.  </li> <li>If there are validation errors (e.g., missing fields, incorrect formats), the API will return an error message with details.  </li> </ul>"},{"location":"load_forecast/push_load_measurement/#notes","title":"Notes","text":""},{"location":"load_forecast/push_load_measurement/#best-practices","title":"Best Practices","text":"<ul> <li>Batch Submissions: Push multiple measurements in a single API call for efficiency.  </li> <li>Time Synchronization: Ensure timestamps (<code>dt</code>) are accurate and in the correct timezone. By defining <code>timezone</code>, <code>interval_in_minutes</code> and <code>window_boundary</code> we ask you to deal with it. </li> <li>Validation: Use the SDK's <code>LoadMeasurementForm</code> for automatic data validation.</li> </ul>"},{"location":"load_forecast/push_load_measurement/#interval-in-minutes","title":"Interval in minutes","text":"<p>The interval is important for measure transform into power (MW is default in alitiq's internal databases). Please take care that your data is aligned with the interval that you configure. </p>"},{"location":"load_forecast/push_load_measurement/#window-boundary","title":"Window - boundary","text":"<p>It is important that you know where your timestamp is bounded. It can make a huge difference and will lead to timeshifts in the forecast.  You maybe more familiar with pandas timestamp labels, so here we have mapping and a further explaination. In the future we will maybe allow for both. The examples refer to a quarter-hourly time interval:</p> <ul> <li><code>begin</code> : <code>left</code> -&gt; Timestamp 16:00 represents data from 16:00 to 16:15</li> <li><code>center</code> : <code>center</code> -&gt; Timestamp 16:07:30 represents data from 16:00 to 16:15</li> <li><code>end</code> : <code>right</code> -&gt; Timestamp 16:15 represents data from 16:00 to 16:15 (default in alitiq's databases)</li> </ul> <p>For further assistance, please reach out to support@alitiq.com. \ud83c\udf1f  </p>"},{"location":"load_forecast/setup_load_forecast_location/","title":"Load power forecasting locations","text":"<p>Welcome to the alitiq Load Forecasting API! This guide explains how to create and list load locations (e.g., sites, meters, buildings) that receive electricity load forecasts.</p>"},{"location":"load_forecast/setup_load_forecast_location/#key-concepts","title":"Key concepts \ud83d\udcda","text":"<p>In the alitiq Load API, a load location represents a place for which you want forecasts (e.g., a single meter, a campus, or a substation). Each location has a user-friendly external ID (what you use) and an internal ID (what we store). The API maps internal IDs back to your external IDs for every response.</p> <p>Location fields</p> Field Type Required Notes <code>site_name</code> string \u2705 Display name of the location. <code>service</code> enum \u2b55 Which kind of timeseries/service. If omitted: set to electricity-load <code>location_id</code> string \u2b55 Your external identifier. If omitted, the API assigns one automatically. <code>latitude</code> float \u2705 Decimal degrees. <code>longitude</code> float \u2705 Decimal degrees. <p>Note: \u2705: Required, \u2b55: Optional</p>"},{"location":"load_forecast/setup_load_forecast_location/#services","title":"Services \u26a1\ud83d\udd25\ud83d\udca8","text":"<p>Each location must belong to one service type. This defines which forecasting engine is applied.</p> Service Enum value Description Electricity Load <code>electricity-load</code> Forecast electricity consumption (default if not specified). District Heating <code>district-heating</code> Forecast thermal load for heating networks. Gas Load <code>gas-load</code> Forecast natural gas demand. Grid Loss <code>grid-loss</code> Forecast electrical grid losses. Regional Wind <code>regional-wind</code> Forecast aggregated wind generation for a region. Regional Solar <code>regional-solar</code> Forecast aggregated solar generation for a region. Regional Load <code>regional-load</code> Forecast aggregated electricity demand for a region. <p>If omitted, the API sets <code>service = electricity-load</code>.</p>"},{"location":"load_forecast/setup_load_forecast_location/#add-a-new-load-location","title":"Add a new load location \ud83d\ude80","text":"<p>Use <code>load/location/add/</code> to create a single load location.</p> python requestsalitiq-pycURL <pre><code>import requests\n\nurl = \"https://api.alitiq.com/load/location/add/\"\nheaders = {\n    \"Content-Type\": \"application/json\",\n    \"x-api-key\": \"{api-key}\",\n}\n\npayload = {\n    \"site_name\": \"HQ Campus\",\n    \"location_id\": \"HQ-001\",   # optional; omit to auto-assign\n    \"latitude\": 52.520008,\n    \"longitude\": 13.404954,\n    # \"service\": \"gas-load\",  # optional; omit default is electricity-load\n}\n\nresp = requests.post(url, json=payload, headers=headers)\nprint(resp.status_code)  # 201 on success\nprint(resp.json())       # {\"location_id\": \"HQ-001\", \"site_name\": \"HQ Campus\"}\n</code></pre> <pre><code>from alitiq import alitiqLoadAPI, LoadLocationForm\n\n# Example\napi = alitiqLoadAPI(api_key=\"your-key\")\n\nlocation = LoadLocationForm(\n    site_name=\"HQ Campus\",\n    location_id=\"HQ-001\",\n    latitude=52.52,\n    longitude=13.405,\n    service=\"gas-load\",  # default electricity-load\n)\n\nresp = api.create_location(location)\nprint(resp)\n</code></pre> <pre><code>curl --request POST \\\n--url https://api.alitiq.com/load/location/add/ \\\n--header 'Content-Type: application/json' \\\n--header 'x-api-key: {api-key}' \\\n--data '{\n    \"site_name\": \"HQ Campus\",\n    \"location_id\": \"HQ-001\",\n    \"latitude\": 52.520008,\n    \"longitude\": 13.404954\n}'\n</code></pre> <p>Successful response</p> <pre><code>{\n  \"location_id\": \"HQ-001\",\n  \"site_name\": \"HQ Campus\"\n}\n</code></pre> <p>If you omit <code>location_id</code>, the API assigns one and returns it in the response.</p>"},{"location":"load_forecast/setup_load_forecast_location/#inspect-your-portfolio","title":"Inspect your portfolio \ud83d\udccb","text":"<p>Use <code>load/location/list/</code> to retrieve all your load locations. Choose your preferred response format via <code>?response_format=...</code>:</p> <ul> <li><code>json</code></li> <li><code>html</code></li> <li><code>csv</code></li> </ul> python requestsalitiq-pycURL (CSV) <pre><code>import requests\n\nurl = \"https://api.alitiq.com/load/location/list/\"\nparams = {\"response_format\": \"json\"}\nheaders = {\"x-api-key\": \"{api-key}\"}\n\nresp = requests.get(url, params=params, headers=headers)\nprint(resp.json())\n</code></pre> <pre><code>from alitiq import alitiqLoadAPI\n\n# Example\nload_api = alitiqLoadAPI(api_key=\"your-key\")\n\nresponse = solar_api.list_locations()\nprint(\"Locations:\", response)\n</code></pre> <pre><code>curl --request GET \\\n--url 'https://api.alitiq.com/load/location/list/?response_format=csv' \\\n--header 'x-api-key: {api-key}'\n</code></pre> <p>Example JSON response</p> <pre><code>{\n  \"columns\": [\n    \"location_id\",\n    \"site_name\",\n    \"latitude\",\n    \"longitude\",\n    \"reference_weather_station\",\n    \"service\",\n    \"created_at\"\n  ],\n  \"index\": [0, 1],\n  \"data\": [\n    [\"HQ-001\", \"HQ Campus\", 52.520008, 13.404954, 9999, \"ELECTRICITY_LOAD\", \"2025-08-19T09:31:12+00:00\"],\n    [\"PLANT-A\", \"Manufacturing Plant A\", 48.1351, 11.5820, 9999, \"ELECTRICITY_LOAD\", \"2025-08-18T15:07:45+00:00\"]\n  ]\n}\n</code></pre> <p>The <code>location_id</code> shown here is always your external ID. The API performs the internal\u2194external mapping automatically.</p> <p>HTML view</p> <p>When <code>response_format=html</code>, the endpoint returns a styled <code>&lt;table&gt;</code> suitable for dashboards and documentation.</p>"},{"location":"load_forecast/setup_load_forecast_location/#behavior-validations","title":"Behavior &amp; validations \u2699\ufe0f","text":"<ul> <li>Reference weather station: Any value provided on create is overwritten by the server (<code>9999</code>). You can omit it.</li> <li>Timestamps: <code>created_at</code> is set server-side using UTC.</li> <li>Notifications: A backoffice notification is triggered when a new location is created (no action needed from you).</li> <li>Services: Defaults to <code>electricity-load</code> and typically doesn\u2019t need to be set.</li> </ul>"},{"location":"load_forecast/setup_load_forecast_location/#errors","title":"Errors \u2757","text":"Scenario Status Body (example) Unsupported <code>response_format</code> 401 <code>{ \"detail\": { \"error\": \"INVALID_RESPONSE_FORMAT\", ... } }</code> Invalid configuration (creation) 401 <code>{ \"detail\": { \"error\": \"INVALID_SYSTEM_CONFIG\", \"error_message\": \"...\" } }</code>"},{"location":"load_forecast/setup_load_forecast_location/#faqs","title":"FAQs \u2753","text":""},{"location":"load_forecast/setup_load_forecast_location/#do-i-have-to-provide-a-location_id","title":"Do I have to provide a <code>location_id</code>?","text":"<p>No. If you omit it, the API assigns one and returns it. You\u2019ll also see it in <code>list/</code>.</p>"},{"location":"load_forecast/setup_load_forecast_location/#can-i-update-or-delete-a-load-location","title":"Can I update or delete a load location?","text":"<p>Updates are not yet available. A delete endpoint is planned but currently disabled.</p>"},{"location":"load_forecast/setup_load_forecast_location/#why-is-reference_weather_station-always-9999","title":"Why is <code>reference_weather_station</code> always 9999?","text":"<p>It\u2019s managed by alitiq and currently fixed to ensure consistent model input. You can ignore this field when creating locations.</p>"},{"location":"load_forecast/setup_load_forecast_location/#endpoint-reference","title":"Endpoint reference \ud83d\udcd1","text":"<ul> <li> <p>Create: <code>POST https://api.alitiq.com/load/location/add/</code> Body: <code>{ \"site_name\": str, \"location_id\": str?, \"latitude\": float, \"longitude\": float }</code> Returns: <code>201 Created</code> with <code>{\"location_id\": str, \"site_name\": str}</code></p> </li> <li> <p>List: <code>GET https://api.alitiq.com/load/location/list/?response_format={json|html|csv}</code> Returns: Table of locations (format as requested)</p> </li> </ul>"},{"location":"load_forecast/setup_load_forecast_location/#support-feedback","title":"Support &amp; feedback \ud83d\udcac","text":"<ul> <li>Contact: support@alitiq.com</li> </ul> <p>\ud83c\udf1f Start forecasting smarter with alitiq today! \ud83c\udf1f</p>"},{"location":"solar_power_forecast/","title":"Welcome to alitiq's AI pwd Solar Power Forecasting service","text":"<ol> <li>Setup your portfolio</li> <li>Send historical measurement data</li> <li>Receive optimized forecasts</li> </ol>"},{"location":"solar_power_forecast/#navigation","title":"Navigation","text":"<ul> <li> Setup PV \u2013 Blog post about how to setup a PV System</li> <li> Manage Portfolio \u2013 Manage your PV system portfolio via API</li> <li> Forecast \u2013 Gain access to the most accurate forecast on the market</li> <li> Measurement \u2013 Provide measurement data from your PV-system to boost forecast performance</li> </ul>"},{"location":"solar_power_forecast/check_available_runs/","title":"How to Check Available Runs with the alitiq Solar API \ud83c\udf24\ufe0f","text":"<p>The alitiq Solar API allows you to check available forecast runs for your Solar PV systems. This endpoint provides flexibility in choosing a weather model and forecast data, ensuring your needs are met while emphasizing the OPTIMIZED weather model for the most accurate predictions.  </p>"},{"location":"solar_power_forecast/check_available_runs/#overview","title":"Overview","text":"<p>Forecast runs represent the calculations of solar energy production based on various weather models. You can query which runs are available for a specific Solar PV system and select the model that best suits your application.  </p>"},{"location":"solar_power_forecast/check_available_runs/#why-multiple-weather-models","title":"Why Multiple Weather Models? \ud83e\udd14","text":"<p>alitiq offers several weather models to provide users with options tailored to their specific use cases. These models are sourced from leading global meteorological agencies, each with unique strengths for different geographical regions and forecast requirements.  </p>"},{"location":"solar_power_forecast/check_available_runs/#supported-weather-models","title":"Supported Weather Models","text":"Weather Model Provider Description ncep_gfs_025 NCEP (USA) Global Forecast System (GFS), providing global coverage with reliable accuracy. arpege MeteoFrance (FR) ARPEGE, a regional weather model from France with a focus on European regions. harmonie_dini DMI (Denmark) HARMONIE-AROME, a high-resolution weather model tailored for Europe. metoffice_um_global Met Office (UK) Unified Model (UM) Global, offering accurate forecasts with broad coverage. icon_d2 DWD (Germany) ICON-D2, a high-resolution short-term forecast model for central Europe. icon_eu DWD (Germany) ICON-EU, a regional weather model offering enhanced resolution for Europe. icon_global DWD (Germany) ICON Global, the global version of the ICON model offering comprehensive coverage. optimized alitiq (Default) Proprietary model combining strengths of various weather sources with historical performance."},{"location":"solar_power_forecast/check_available_runs/#why-use-the-optimized-weather-model","title":"Why Use the OPTIMIZED Weather Model?","text":"<p>The OPTIMIZED weather model combines the strengths of various sources and integrates localized performance data, making it our recommended option. It represents our best estimate for accurate and reliable solar energy forecasting.  </p>"},{"location":"solar_power_forecast/check_available_runs/#required-parameters","title":"Required Parameters","text":"<p>To check available forecast runs, provide the following:  </p> Parameter Type Description Default <code>location_id</code> <code>str</code> Unique identifier of the location. None <code>weather_model</code> <code>str</code> (Optional) Name of the weather model (e.g., <code>optimized</code>, <code>icon_eu</code>, <code>ncep_gfs_025</code>). OPTIMIZED"},{"location":"solar_power_forecast/check_available_runs/#example-check-available-runs","title":"Example: Check Available Runs","text":"<p>Here\u2019s how to check available forecast runs using the <code>forecast/check/</code> endpoint or the <code>check_available_runs</code> method of the python SDK:</p> python requestsalitiq-pycURL <pre><code>import requests\n\nurl = \"https://api.alitiq.com/solar/forecast/check/\"\n\nquerystring = {\"weather_model\":\"icon_eu\", \"location_id\": \"1\", \"number_of_runs\": 10}\n\npayload = \"\"\nheaders = {\"x-api-key\": \"api-key\"}\n\nresponse = requests.request(\"GET\", url, data=payload, headers=headers, params=querystring)\n\nprint(response.text)\n</code></pre> <pre><code>from alitiq import alitiqSolarAPI\n\n# Initialize the API client\nsolar_api = alitiqSolarAPI(api_key=\"your-api-key\")\n\n# Define the location ID and optional weather model\nlocation_id = \"SP123\"\n\n# Check available forecast runs\navailable_runs = solar_api.check_available_runs(location_id=location_id, weather_model=\"optimized\")\n\n# Print the available runs\nprint(\"Available forecast runs:\")\nprint(available_runs)\n</code></pre> <pre><code>curl --request GET \\\n  --url 'https://api.alitiq.com/solar/forecast/check/?weather_model=icon_eu&amp;location_id=1&amp;number_of_runs=10' \\\n  --header 'x-api-key: api-key'\n</code></pre>"},{"location":"solar_power_forecast/check_available_runs/#api-response","title":"API Response","text":"<p>The response includes the list of available forecast runs:  </p> <pre><code>{\n    \"weather_model\": \"icon_eu\",\n    \"time\": \"2025-02-18T05:47:24.347131\",\n    \"dt_calcs\": [\n        \"2024-12-02T06:00:00\",\n        \"2024-12-02T00:00:00\",\n        \"2024-12-01T18:00:00\",\n        \"2024-12-01T12:00:00\",\n        \"2024-12-01T06:00:00\",\n        \"2024-12-01T00:00:00\",\n        \"2024-11-30T18:00:00\",\n        \"2024-11-30T12:00:00\",\n        \"2024-11-30T06:00:00\",\n        \"2024-11-30T00:00:00\"\n    ],\n    \"location_id\": [\n        \"EP_Serbitz\",\n        \"EP_Serbitz\",\n        \"EP_Serbitz\",\n        \"EP_Serbitz\",\n        \"EP_Serbitz\",\n        \"EP_Serbitz\",\n        \"EP_Serbitz\",\n        \"EP_Serbitz\",\n        \"EP_Serbitz\",\n        \"EP_Serbitz\"\n    ]\n}\n</code></pre>"},{"location":"solar_power_forecast/check_available_runs/#best-practices","title":"Best Practices","text":"<ul> <li>Choose the OPTIMIZED Model: While other models may suit specific needs, we strongly recommend the OPTIMIZED model for its superior accuracy.  </li> <li>Verify Run Availability: Always check the available runs before attempting to retrieve forecast data to ensure data freshness.  </li> <li>Use Recent Runs: For better accuracy, use the most recent run available.  </li> </ul>"},{"location":"solar_power_forecast/check_available_runs/#notes","title":"Notes","text":"<ul> <li>Custom Weather Models: Specify other models like <code>arpege</code> or <code>icon_global</code> if needed for specific comparisons or analyses.  </li> <li>Data Freshness: New runs are typically generated at regular intervals; check often for updates.  </li> <li>Optimized Performance: The API is designed to handle large portfolios, ensuring that checking runs for multiple locations is efficient.  </li> </ul> <p>For further assistance, reach out to support@alitiq.com. \ud83c\udf1f  </p>"},{"location":"solar_power_forecast/inspect_pv_measurement/","title":"How to Inspect Measurement Data with the alitiq Solar API \ud83d\udd0d","text":"<p>The alitiq Solar API provides powerful tools to inspect and analyze the historical measurement data for your Solar PV systems. This feature allows you to validate submitted data, track system performance, and gain insights into your solar installation.  </p>"},{"location":"solar_power_forecast/inspect_pv_measurement/#overview","title":"Overview","text":"<p>Inspecting data involves retrieving historical measurement records stored in the alitiq system for a specific Solar PV system. You can define a time range, customize the output format, and perform detailed analysis on the retrieved data.</p>"},{"location":"solar_power_forecast/inspect_pv_measurement/#key-features","title":"Key Features \u2728","text":"<ul> <li>Flexible Time Ranges: Retrieve data for any specified date range.  </li> <li>Detailed Records: Includes power output, timestamps, and optional irradiance values.  </li> <li>Analysis Ready: Data is returned in a format suitable for direct analysis using tools like pandas.  </li> </ul> <p>Data displayed as it is in alitiq's database</p> <p>The data in our database is in timezone UTC, with end timestamp in kW power. </p>"},{"location":"solar_power_forecast/inspect_pv_measurement/#required-parameters","title":"Required Parameters","text":"<p>To inspect data, provide the following information:  </p> Parameter Type Description Default <code>location_id</code> <code>str</code> Unique identifier of the location whose data you want to inspect. None <code>start_date</code> <code>datetime</code> (Optional) Start date for the inspection range. 2 days before today <code>end_date</code> <code>datetime</code> (Optional) End date for the inspection range. Today"},{"location":"solar_power_forecast/inspect_pv_measurement/#example-inspect-data","title":"Example: Inspect Data","text":"<p>Below is an example of how to use the <code>measurement/inspect/</code> endpoint to inspect data and the method <code>get_measurements</code>:  </p> python requestsalitiq-pycURL <pre><code>import requests\n\nurl = \"https://api.alitiq.com/solar/measurement/inspect/\"\n\nquerystring = {\"location_id\":\"123\",\"response_format\":\"json\"}\n\npayload = \"\"\nheaders = {\"x-api-key\": \"api-key\"}\n\nresponse = requests.request(\"GET\", url, data=payload, headers=headers, params=querystring)\n\nprint(response.text)\n</code></pre> <pre><code>from datetime import datetime, timedelta\nfrom alitiq import alitiqSolarAPI\n\n# Initialize the API client\nsolar_api = alitiqSolarAPI(api_key=\"your-api-key\")\n\n# Define the location and date range\nlocation_id = \"SP123\"\nstart_date = datetime.now() - timedelta(days=7)  # 7 days ago\nend_date = datetime.now()  # Today\n\n# Inspect measurement data\ndata = solar_api.get_measurements(\n    location_id=location_id, \n    start_date=start_date, \n    end_date=end_date\n)\n\n# Print the retrieved data\nprint(data)\n</code></pre> <pre><code>curl --request GET \\\n  --url 'https://api.alitiq.com/solar/measurement/inspect/?location_id=123&amp;response_format=json' \\\n  --header 'x-api-key: api-key'\n</code></pre>"},{"location":"solar_power_forecast/inspect_pv_measurement/#api-response","title":"API Response","text":"<p>The API returns the measurement data in a pandas-compatible format (e.g., JSON), which can be directly loaded into a DataFrame for further analysis:  </p> <pre><code>|       dt        |   power   |  \n|-----------------|-----------|\n| 2024-06-10 10:00|  120.5    | \n| 2024-06-10 10:15|  90.8     | \n| 2024-06-10 10:30|  150.0    |\n</code></pre>"},{"location":"solar_power_forecast/inspect_pv_measurement/#best-practices","title":"Best Practices","text":"<ul> <li>Validate Data: Regularly inspect your measurement data to ensure it is accurate and complete.  </li> <li>Batch Analysis: Retrieve data in chunks for longer periods to avoid API response size limitations.  </li> <li>Timezone Awareness: Ensure the <code>timezone</code> is consistent across measurements for accurate analysis.  </li> </ul>"},{"location":"solar_power_forecast/inspect_pv_measurement/#advanced-use-case-data-visualization","title":"Advanced Use Case: Data Visualization","text":"<p>You can use tools like <code>matplotlib</code> or <code>seaborn</code> to visualize the data for insights:  </p> <pre><code>import matplotlib.pyplot as plt\n\n# Visualize power output over time\ndata.plot(x='dt', y='power', title=\"Power Output Over Time\", figsize=(10, 6))\nplt.show()\n</code></pre>"},{"location":"solar_power_forecast/inspect_pv_measurement/#notes","title":"Notes","text":"<ul> <li>Performance: For large datasets, limit the date range to improve response time.  </li> <li>Missing Data: If any data points are missing, double-check your measurement submissions.  </li> <li>Data Validation: The SDK validates data upon submission to minimize errors during inspection.  </li> </ul> <p>For further questions or issues, contact support@alitiq.com. \ud83c\udf1f  </p>"},{"location":"solar_power_forecast/push_pv_curtailments/","title":"Managing Unavailability via the alitiq Solarpower API \u26a1","text":"<p>This guide explains how to push curtailments to the alitiq Solar PV API for PV Systems. Curtailments represent reduced power production due to grid constraints, maintenance, or market-driven limitations.</p>"},{"location":"solar_power_forecast/push_pv_curtailments/#overview","title":"Overview","text":"<p>The alitiq Solar API allows you to submit and inspect curtailment/unavailability data from your PV-Systems. This data is crucial for evaluating lost production potential and improving forecasting accuracy.</p>"},{"location":"solar_power_forecast/push_pv_curtailments/#key-features","title":"Key Features \u2728","text":"<ul> <li>Real-time Curtailments/unavailability: Push live curtailment events.  </li> <li>Historical Curtailments/unavailability: Submit past curtailment records for analysis.  </li> <li>Forecast Refinement: Curtailment/unavailability awareness improves forecast realism.  </li> <li>Flexible Time Windows: Define how time intervals align to your curtailment records. </li> </ul>"},{"location":"solar_power_forecast/push_pv_curtailments/#required-curtailment-data","title":"Required Curtailment Data","text":"<p>When submitting curtailment data, include the following fields:</p> Field Type Description Default <code>location_id</code> <code>str</code> Unique ID of the PV systems where the curtailment occurred. None <code>dt</code> <code>datetime</code> or <code>pandas.Timestamp</code> Timestamp representing the curtailment's time window. None <code>level</code> <code>float</code> Magnitude of curtailment (values between 0 and 1 ). None <code>timezone</code> <code>str</code> Timezone of the timestamp. Available timezones can be found here <code>UTC</code> <code>interval_in_minutes</code> <code>int</code> Interval length that the timestamp refers to. <code>15</code> <code>window_boundary</code> <code>str</code> Defines alignment of <code>dt</code> (<code>begin</code>, <code>center</code>, or <code>end</code>). <code>end</code>"},{"location":"solar_power_forecast/push_pv_curtailments/#example-code-to-push-curtailments","title":"Example Code to Push Curtailments","text":"<p>Use the <code>/solar/curtailments/add/</code> endpoint to submit data.</p> python requestsalitiq-py SDKcURL <pre><code>import requests\n\nurl = \"https://api.alitiq.com/solar/curtailments/add/\"\n\npayload = [\n    {\n        \"location_id\": \"SP001\",\n        \"dt\": \"2024-06-10T10:00:00.000\",\n        \"level\": 1,\n        \"interval_in_minutes\": 15,\n        \"timezone\": \"UTC\",\n        \"window_boundary\": \"end\"\n    },\n    {\n        \"location_id\": \"SP001\",\n        \"dt\": \"2024-06-10T10:15:00.000\",\n        \"level\": 1.0,\n        \"interval_in_minutes\": 15,\n        \"timezone\": \"UTC\",\n        \"window_boundary\": \"end\"\n    }\n]\nheaders = {\"Content-Type\": \"application/json\", \"x-api-key\": \"{your-api-key}\"}\n\nresponse = requests.post(url, json=payload, headers=headers)\nprint(response.text)\n</code></pre> <pre><code>from datetime import datetime\nfrom alitiq import alitiqSolarAPI, CurtailmentForm\n\n# Initialize API client\nsolar_api = alitiqSolarAPI(api_key=\"your-api-key\")\n\n# Create curtailment records\ncurtailments = [\n    CurtailmentForm(\n        location_id=\"SP001\",\n        dt=datetime(2024, 6, 10, 10, 0).isoformat(),\n        level=1.0,\n        interval_in_minutes=15,\n        timezone=\"UTC\",\n        window_boundary=\"end\",\n    ),\n    CurtailmentForm(\n        location_id=\"SP001\",\n        dt=datetime(2024, 6, 10, 10, 15).isoformat(),\n        level=1.0,\n        interval_in_minutes=15,\n        timezone=\"UTC\",\n        window_boundary=\"end\",\n    ),\n]\n\n# Post to the API\nresponse = solar_api.post_curtailments(curtailments)\nprint(\"API Response:\", response)\n</code></pre> <pre><code>curl --request POST \\\n--url https://api.alitiq.com/solar/curtailments/add/ \\\n--header 'Content-Type: application/json' \\\n--header 'x-api-key: {your-api-key}' \\\n--data '[\n    {\n        \"location_id\": \"SP001\",\n        \"dt\": \"2024-06-10T10:00:00.000\",\n        \"level\": 1.0,\n        \"interval_in_minutes\": 15,\n        \"timezone\": \"UTC\",\n        \"window_boundary\": \"end\"\n    },\n    {\n        \"location_id\": \"SP001\",\n        \"dt\": \"2024-06-10T10:15:00.000\",\n        \"level\": 1.0,\n        \"interval_in_minutes\": 15,\n        \"timezone\": \"UTC\",\n        \"window_boundary\": \"end\"\n    }\n]'\n</code></pre> <p>Note</p> <p>You can push up to 10,000 curtailment records in one call. It is recommended to batch data by month per system.</p>"},{"location":"solar_power_forecast/push_pv_curtailments/#api-response","title":"API Response","text":"<ul> <li>\u2705 Success: The API returns an HTML confirmation indicating the curtailments were saved.  </li> <li>\u274c Error: If there's invalid input (e.g., invalid <code>window_boundary</code>), you'll receive a detailed HTTP error response.</li> </ul>"},{"location":"solar_power_forecast/push_pv_curtailments/#inspecting-curtailments","title":"Inspecting Curtailments","text":"<p>You can view stored curtailments using the <code>/solar/curtailments/inspect/</code> endpoint. Supported formats: - <code>json</code> (default) - <code>csv</code> - <code>html</code> (generates a timeseries plot)</p>"},{"location":"solar_power_forecast/push_pv_curtailments/#query-parameters","title":"Query Parameters:","text":"Parameter Type Description <code>location_id</code> <code>str</code> External ID of the location. <code>start_date</code> <code>str</code> Optional ISO date string. <code>end_date</code> <code>str</code> Optional ISO date string. <code>response_format</code> <code>str</code> One of <code>json</code>, <code>csv</code>, <code>html</code>."},{"location":"solar_power_forecast/push_pv_curtailments/#notes-on-best-practices","title":"Notes on Best Practices","text":"<ul> <li>Use <code>UTC</code> whenever possible to ensure consistency.  </li> <li>Window Alignment:<ul> <li><code>begin</code>: <code>dt</code> marks the start of the curtailment window  </li> <li><code>center</code>: <code>dt</code> is the center of the interval  </li> <li><code>end</code>: <code>dt</code> marks the end of the curtailment window  </li> </ul> </li> <li>Validation: Use the SDK's <code>CurtailmentForm</code> for safer and structured inputs.  </li> </ul>"},{"location":"solar_power_forecast/push_pv_curtailments/#contact","title":"Contact","text":"<p>For help or onboarding assistance, contact: support@alitiq.com \ud83d\udcac</p>"},{"location":"solar_power_forecast/push_pv_measurement/","title":"Pushing Measurements to the alitiq Solar API \ud83d\udcca","text":"<p>This guide explains how to push measurements from a Solar PV power plant to the alitiq Solar API. Measurements are critical for enhancing forecast accuracy and for monitoring performance.  </p>"},{"location":"solar_power_forecast/push_pv_measurement/#overview","title":"Overview","text":"<p>The alitiq Solar API allows you to submit real-time or historical measurement data from your Solar PV systems. Each measurement includes details about the time of recording, power output, and additional optional information like irradiance.  </p>"},{"location":"solar_power_forecast/push_pv_measurement/#key-features","title":"Key Features \u2728","text":"<ul> <li>Real-time Measurements: Submit live data for improved forecast accuracy.  </li> <li>Historical Measurements: Push past data for performance analysis and enhanced forecasting.  </li> <li>Optimized Forecasting: With historical measurement data of up to 90 days, the API provides highly optimized forecasts tailored to your PV system.  </li> <li>Flexible Time Intervals: Define custom intervals for measurements (e.g., 15 minutes).  </li> </ul>"},{"location":"solar_power_forecast/push_pv_measurement/#required-measurement-data","title":"Required Measurement Data","text":"<p>When pushing measurements, you need to include the following information:  </p> Field Type Description Default <code>location_id</code> <code>str</code> Unique ID of the location where the measurement was recorded. None <code>dt</code> <code>datetime</code> Timestamp of the measurement (ISO 8601 format). None <code>power</code> <code>float</code> Power output recorded (in specified unit). None <code>irradiance</code> <code>float</code> (Optional) Irradiance value in W/m\u00b2. <code>-1.0</code> <code>power_measure</code> <code>str</code> Unit of power measurement (<code>kW</code>, <code>W</code>, etc.). <code>kW</code> <code>timezone</code> <code>str</code> Timezone of the measurement timestamp. Available timezones can be found here <code>UTC</code> <code>interval_in_minutes</code> <code>int</code> Interval between measurements (in minutes). <code>15</code> <code>window_boundary</code> <code>str</code> Defines the interval's alignment (<code>begin</code>, <code>center</code>, or <code>end</code>). <code>end</code>"},{"location":"solar_power_forecast/push_pv_measurement/#note-on-historical-measurements","title":"Note on Historical Measurements","text":"<p>To provide highly optimized forecasts, the API requires at least 90 days of historical measurement data for a given Solar PV system. This data enables the system to fine-tune forecasts to match the unique characteristics of your setup.  This data needs to updated once per day for the last 24 hours. In case of diurnal updates, alitiq will adapt the forecast tot the latest observations every 15 minutes. </p>"},{"location":"solar_power_forecast/push_pv_measurement/#example-code-to-push-measurements","title":"Example Code to Push Measurements","text":"<p>Here\u2019s an example demonstrating how to submit measurement data using the <code>measurement/add</code> endpoint and the python-SDK method <code>post_measurements</code>:</p> python requestsalitiq-pycURL <pre><code>import requests\n\nurl = \"https://api.alitiq.com/solar/measurement/add/\"\n\npayload = [\n    {\n        \"location_id\": \"2\",\n        \"dt\": \"2022-03-06T09:45:00.000\",\n        \"power\": 201,\n        \"irradiance\": -1,\n        \"interval_in_minutes\": 15,\n        \"timezone\": \"UTC\",\n        \"window_boundary\": \"end\",\n        \"power_measure\": \"kW\"\n    },\n    {\n        \"location_id\": \"2\",\n        \"dt\": \"2022-03-06T10:00:00.000\",\n        \"power\": 213,\n        \"irradiance\": -1,\n        \"interval_in_minutes\": 15,\n        \"timezone\": \"UTC\",\n        \"window_boundary\": \"end\",\n        \"power_measure\": \"kW\"\n    },\n    {\n        \"location_id\": \"2\",\n        \"dt\": \"2022-03-06T10:15:00.000\",\n        \"power\": 242,\n        \"irradiance\": -1,\n        \"interval_in_minutes\": 15,\n        \"timezone\": \"UTC\",\n        \"window_boundary\": \"end\",\n        \"power_measure\": \"kW\"\n    },\n    {\n        \"location_id\": \"2\",\n        \"dt\": \"2022-03-06T10:30:00.000\",\n        \"power\": 270,\n        \"irradiance\": 234,\n        \"interval_in_minutes\": 15,\n        \"timezone\": \"UTC\",\n        \"window_boundary\": \"end\",\n        \"power_measure\": \"kW\"\n    },\n    {\n        \"location_id\": \"2\",\n        \"dt\": \"2022-03-06T10:45:00.000\",\n        \"power\": 320,\n        \"irradiance\": -1,\n        \"interval_in_minutes\": 15,\n        \"timezone\": \"UTC\",\n        \"window_boundary\": \"end\",\n        \"power_measure\": \"kW\"\n    },\n    {\n        \"location_id\": \"2\",\n        \"dt\": \"2022-03-06T11:00:00.000\",\n        \"power\": 397,\n        \"irradiance\": -1,\n        \"interval_in_minutes\": 15,\n        \"timezone\": \"UTC\",\n        \"window_boundary\": \"end\",\n        \"power_measure\": \"kW\"\n    }\n]\nheaders = {\"Content-Type\": \"application/json\", \"x-api-key\": {api-key}}\n\nresponse = requests.request(\"POST\", url, json=payload, headers=headers)\n\nprint(response.text)\n</code></pre> <pre><code>from datetime import datetime\nfrom alitiq import alitiqSolarAPI, PvMeasurementForm\n\n# Initialize the API client\nsolar_api = alitiqSolarAPI(api_key=\"your-api-key\")\n\n# Create measurement data\npv_measurements = [\n    PvMeasurementForm(\n        location_id=\"SP123\",\n        dt=datetime(2024, 6, 10, 10).isoformat(),\n        power=120.5,\n        power_measure=\"kW\",\n        timezone=\"UTC\",\n        interval_in_minutes=15,\n        window_boundary=\"end\",\n    ),\n    PvMeasurementForm(\n        location_id=\"SP123\",\n        dt=datetime(2024, 6, 10, 10, 15).isoformat(),\n        power=90.8,\n        power_measure=\"kW\",\n        timezone=\"UTC\",\n        interval_in_minutes=15,\n        window_boundary=\"end\",\n    ),\n    PvMeasurementForm(\n        location_id=\"SP123\",\n        dt=datetime(2024, 6, 10, 10, 30).isoformat(),\n        power=150.0,\n        power_measure=\"kW\",\n        timezone=\"UTC\",\n        interval_in_minutes=15,\n        window_boundary=\"end\",\n    ),\n]\n\n# Push measurements to the API\nresponse = solar_api.post_measurements(pv_measurements)\n\n# Print the API response\nprint(\"API Response:\", response)\n</code></pre> <pre><code>curl --request POST \\\n  --url https://api.alitiq.com/solar/measurement/add/ \\\n  --header 'Content-Type: application/json' \\\n  --header 'x-api-key: {api-key}' \\\n  --data '[\n    {\n        \"location_id\": \"2\",\n        \"dt\": \"2022-03-06T09:45:00.000\",\n        \"power\": 201.0,\n        \"irradiance\": -1,\n        \"interval_in_minutes\": 15,\n        \"timezone\": \"UTC\",\n        \"window_boundary\": \"end\",\n        \"power_measure\": \"kW\"\n    },\n    {\n        \"location_id\": \"2\",\n        \"dt\": \"2022-03-06T10:00:00.000\",\n        \"power\": 213.0,\n        \"irradiance\": -1,\n        \"interval_in_minutes\": 15,\n        \"timezone\": \"UTC\",\n        \"window_boundary\": \"end\",\n        \"power_measure\": \"kW\"\n    },\n    {\n        \"location_id\": \"2\",\n        \"dt\": \"2022-03-06T10:15:00.000\",\n        \"power\": 242.0,\n        \"irradiance\": -1,\n        \"interval_in_minutes\": 15,\n        \"timezone\": \"UTC\",\n        \"window_boundary\": \"end\",\n        \"power_measure\": \"kW\"\n    },\n    {\n        \"location_id\": \"2\",\n        \"dt\": \"2022-03-06T10:30:00.000\",\n        \"power\": 270.0,\n        \"irradiance\": 234.0,\n        \"interval_in_minutes\": 15,\n        \"timezone\": \"UTC\",\n        \"window_boundary\": \"end\",\n        \"power_measure\": \"kW\"\n    },\n    {\n        \"location_id\": \"2\",\n        \"dt\": \"2022-03-06T10:45:00.000\",\n        \"power\": 320,\n        \"irradiance\": -1,\n        \"interval_in_minutes\": 15,\n        \"timezone\": \"UTC\",\n        \"window_boundary\": \"end\",\n        \"power_measure\": \"kW\"\n    },\n    {\n        \"location_id\": \"2\",\n        \"dt\": \"2022-03-06T11:00:00.000\",\n        \"power\": 397,\n        \"irradiance\": -1,\n        \"interval_in_minutes\": 15,\n        \"timezone\": \"UTC\",\n        \"window_boundary\": \"end\",\n        \"power_measure\": \"kW\"\n    }\n]'\n</code></pre> <p>Note</p> <p>Only up to 10000 samples are allowed to push at one call. We recommend to batch the data into monthly slices for each system.</p>"},{"location":"solar_power_forecast/push_pv_measurement/#api-response","title":"API Response","text":"<ul> <li>A successful request will return a confirmation message indicating the data was received and processed.  </li> <li>If there are validation errors (e.g., missing fields, incorrect formats), the API will return an error message with details.  </li> </ul>"},{"location":"solar_power_forecast/push_pv_measurement/#notes","title":"Notes","text":""},{"location":"solar_power_forecast/push_pv_measurement/#best-practices","title":"Best Practices","text":"<ul> <li>Batch Submissions: Push multiple measurements in a single API call for efficiency.  </li> <li>Time Synchronization: Ensure timestamps (<code>dt</code>) are accurate and in the correct timezone. By defining <code>timezone</code>, <code>interval_in_minutes</code> and <code>window_boundary</code> we ask you to deal with it. </li> <li>Historical Data: Provide at least 90 days of measurements to unlock optimized forecasting.  </li> <li>Validation: Use the SDK's <code>PvMeasurementForm</code> for automatic data validation.  </li> </ul>"},{"location":"solar_power_forecast/push_pv_measurement/#interval-in-minutes","title":"Interval in minutes","text":"<p>The interval is important for measure transform into power (kW is default in alitiq's internal databases). Please take care that your data is aligned with the interval that you configure. </p>"},{"location":"solar_power_forecast/push_pv_measurement/#window-boundary","title":"Window - boundary","text":"<p>It is important that you know where your timestamp is bounded. It can make a huge difference and will lead to timeshifts in the forecast.  You maybe more familiar with pandas timestamp labels, so here we have mapping and a further explaination. In the future we will maybe allow for both. The examples refer to a quarter-hourly time interval:</p> <ul> <li><code>begin</code> : <code>left</code> -&gt; Timestamp 16:00 represents data from 16:00 to 16:15</li> <li><code>center</code> : <code>center</code> -&gt; Timestamp 16:07:30 represents data from 16:00 to 16:15</li> <li><code>end</code> : <code>right</code> -&gt; Timestamp 16:15 represents data from 16:00 to 16:15 (default in alitiq's databases)</li> </ul> <p>For further assistance, please reach out to support@alitiq.com. \ud83c\udf1f  </p>"},{"location":"solar_power_forecast/pv_solar_power_forecast/","title":"Accessing Forecasts with the alitiq Solar API","text":"<p>The alitiq Solar API provides robust and flexible forecasting capabilities for individual Solar PV systems and entire portfolios. This guide walks you through retrieving forecasts and explains the parameters that allow you to tailor the output to your specific needs.</p>"},{"location":"solar_power_forecast/pv_solar_power_forecast/#features","title":"Features \ud83c\udf1f","text":"<ul> <li>Flexibility in Forecasting: Customize forecasts using parameters such as time zone, interval, and power measurement.  </li> <li>System-Level Forecasting: Retrieve precise forecasts for individual Solar PV systems.  </li> <li>Portfolio-Level Forecasting: Aggregate forecasts for your entire portfolio in one request.  </li> <li>Time-Specific Forecasts: Fetch forecasts calculated at specific times (<code>dt_calc</code>) for advanced planning.  </li> <li>Easy Access &amp; Integration: By using your own location identifier it is easy to access the right forecasts and  integrate it into your system</li> </ul>"},{"location":"solar_power_forecast/pv_solar_power_forecast/#forecasting-for-a-single-solar-pv-system","title":"Forecasting for a Single Solar PV System","text":"<p>To access a forecast for a specific Solar PV system, use the <code>forecast/single/</code> endpoint from the API or the <code>get_forecast</code> method from the SDK.</p>"},{"location":"solar_power_forecast/pv_solar_power_forecast/#example","title":"Example","text":"python requestsalitiq-pycURL <pre><code>import requests\n\nurl = \"https://api.alitiq.com/solar/forecast/single/\"\n\nquerystring = {\"location_id\":\"123\",\"response_format\":\"html\",\"weather_model\":\"icon_eu\",\"timezone\":\"UTC\",\"power_measure\":\"kW\",\"interval_in_minutes\":\"15\"}\n\npayload = \"\"\nheaders = {\"x-api-key\": \"your-api-key\"}\n\nresponse = requests.request(\"GET\", url, data=payload, headers=headers, params=querystring)\n\nprint(response.text)\n</code></pre> <pre><code>from datetime import datetime\nfrom alitiq import alitiqSolarAPI\n\n# Initialize the Solar API client\nsolar_api = alitiqSolarAPI(api_key=\"your-api-key\")\n\n# Retrieve forecast for a specific Solar PV system\nforecast = solar_api.get_forecast(\n    location_id=\"SP123\",  # Replace with your system's location ID\n    dt_calc=datetime(2024, 6, 15, 12),  # Optional: specify the calculation timestamp\n    power_measure=\"kW\",  # Specify the power measurement unit\n    timezone=\"UTC\",  # Set the timezone\n    interval_in_minutes=15,  # Set the forecast interval\n    window_boundary=\"end\"  # Define how intervals are calculated\n)\n\n# Display the forecast\nprint(forecast)\n</code></pre> <pre><code>curl --request GET \\\n  --url 'https://api.alitiq.com/solar/forecast/single/?location_id=123&amp;response_format=json&amp;weather_model=icon_eu&amp;timezone=UTC&amp;power_measure=kW&amp;interval_in_minutes=15' \\\n  --header 'x-api-key: your-api-key'\n</code></pre>"},{"location":"solar_power_forecast/pv_solar_power_forecast/#forecasting-for-an-entire-portfolio","title":"Forecasting for an Entire Portfolio","text":"<p>To access a forecast for your whole portfolio of PV systems, use the <code>forecast/portfolio/</code> endpoint from the API or the <code>get_forecast_portfolio</code> method from the SDK.</p>"},{"location":"solar_power_forecast/pv_solar_power_forecast/#example_1","title":"Example","text":"python requestsalitiq-pycURL <pre><code>import requests\n\nurl = \"https://api.alitiq.com/solar/forecast/portfolio/\"\n\nquerystring = {\"response_format\":\"html\",\"weather_model\":\"icon_eu\",\"timezone\":\"UTC\",\"power_measure\":\"kW\",\"interval_in_minutes\":\"15\", \"portfolio_sum_column\":\"False\"}\n\npayload = \"\"\nheaders = {\"x-api-key\": \"your-api-key\"}\n\nresponse = requests.request(\"GET\", url, data=payload, headers=headers, params=querystring)\n\nprint(response.text)\n</code></pre> <pre><code>from datetime import datetime\nfrom alitiq import alitiqSolarAPI\n\n# Initialize the Solar API client\nsolar_api = alitiqSolarAPI(api_key=\"your-api-key\")\n\n# Retrieve portfolio-wide forecast\nportfolio_forecast = solar_api.get_forecast_portfolio(\n    dt_calc=datetime(2024, 6, 15, 12),  # Optional: specify the calculation timestamp\n    power_measure=\"kW\",  # Specify the power measurement unit\n    timezone=\"UTC\",  # Set the timezone\n    interval_in_minutes=15,  # Set the forecast interval\n    window_boundary=\"end\",  # Define how intervals are calculated\n    portfolio_sum_column=True  # Optionally include a column summing all systems\n)\n\n# Display the portfolio forecast\nprint(portfolio_forecast)\n</code></pre> <pre><code>curl --request GET \\\n  --url 'https://api.alitiq.com/solar/forecast/portfolio/?response_format=html&amp;weather_model=icon_eu&amp;timezone=UTC&amp;power_measure=kW&amp;interval_in_minutes=15' \\\n  --header 'x-api-key: your-api-key'\n</code></pre>"},{"location":"solar_power_forecast/pv_solar_power_forecast/#understanding-forecast-parameters","title":"Understanding Forecast Parameters","text":"<p>The following parameters offer you flexibility when generating forecasts:  </p> Parameter Description Default Value <code>location_id</code> Unique identifier for the Solar PV system. Required for system-level forecasts. This is your defined identifer. None <code>dt_calc</code> Timestamp for forecast calculation. Useful for time-specific forecasts, and access historic ones. Latest available <code>power_measure</code> Unit of power measurement (<code>kW</code>, <code>MW</code>, etc.). <code>\"kW\"</code> <code>timezone</code> Timezone for the forecast timestanps. Available timezones can be found here <code>\"UTC\"</code> <code>interval_in_minutes</code> Forecast interval (e.g., <code>15</code> for 15-minute intervals). Important for retieviing Energy instead of Power <code>15</code> <code>window_boundary</code> Defines interval boundaries (<code>begin</code>, <code>center</code>, or <code>end</code>). <code>\"end\"</code> <code>portfolio_sum_column</code> Adds a column summing forecasts for all systems in the portfolio. <code>True</code>"},{"location":"solar_power_forecast/pv_solar_power_forecast/#flexibility-as-a-feature","title":"Flexibility as a Feature","text":"<p>The flexibility to define parameters ensures that the API adapts to various use cases, whether you need:  </p> <ul> <li>Forecasts for specific systems.  </li> <li>Aggregated data for an entire portfolio.  </li> <li>Customized intervals and time zones.  </li> <li>Tailored outputs based on specific power measurement units.  </li> <li>Easy integration by using your own identifiers</li> </ul> <p>This adaptability makes the alitiq Solar API a powerful tool for energy planning and decision-making.  </p>"},{"location":"solar_power_forecast/pv_solar_power_forecast/#support","title":"Support","text":"<p>For further assistance, contact support@alitiq.com. \ud83c\udf1e  </p>"},{"location":"solar_power_forecast/setup_pv_portfolio_forecast/","title":"Solar-PV power forecasting locations","text":"<p>Welcome to the alitiq Solar Power Forecasting API! This guide explains how to create a location for a PV power plant, including subsystems for each unique combination of azimuth and tilt.  </p>"},{"location":"solar_power_forecast/setup_pv_portfolio_forecast/#key-concepts","title":"Key Concepts \ud83d\udcda","text":"<p>In the alitiq Solar API, a PV power plant is represented as a location with one or more subsystems. Each subsystem corresponds to a unique configuration of azimuth and tilt of the PV modules. By defining these subsystems, the API ensures precise forecasting for the entire power plant.  </p>"},{"location":"solar_power_forecast/setup_pv_portfolio_forecast/#subsystems","title":"Subsystems","text":"<ul> <li>A subsystem is defined by:  </li> <li>Azimuth: Orientation of the module relative to true north (in degrees, South 180\u00b0).  </li> <li>Tilt: Angle of the module from the horizontal plane (in degrees).  </li> <li>Power Capacity: Installed capacity of the modules in the subsystem (in kW).  </li> <li>installed_power: The capacity of all modules per subsystem in the power plant.  </li> <li> <p>inverter_power: The capacity of the inverters per subsystem in the power plant.  </p> </li> <li> <p>Each unique combination of azimuth and tilt requires a separate subsystem for accurate forecasting.  </p> </li> </ul>"},{"location":"solar_power_forecast/setup_pv_portfolio_forecast/#add-a-new-pv-systems-to-your-portfolio","title":"Add a new PV systems to your portfolio \ud83d\ude80","text":"<p>To add a new location to your portfolio, you have to use the <code>pv_systems/add/</code> endpoint.</p> python requestsalitiq-pycURL <pre><code>import requests\n\nurl = \"https://api.alitiq.com/solar/pv_systems/add/\"\n\npayload = [\n    {\n        \"location_id\": \"12\",\n        \"site_name\": \"test_2\",\n        \"latitude\": 48.9,\n        \"longitude\": 10.3,\n        \"installed_power\": 320,\n        \"installed_power_inverter\": 300,\n        \"azimuth\": 180,\n        \"tilt\": 13,\n        \"temp_factor\": 0.033,\n        \"mover\": 1\n    },\n    {\n        \"location_id\": \"12\",\n        \"site_name\": \"test_2\",\n        \"latitude\": 48.9,\n        \"longitude\": 10.3,\n        \"installed_power\": 320,\n        \"installed_power_inverter\": 300,\n        \"azimuth\": 180,\n        \"tilt\": 15,\n        \"temp_factor\": 0.033,\n        \"mover\": 1\n    }\n]\nheaders = {\"Content-Type\": \"application/json\", \"x-api-key\": {api-key}}\n\nresponse = requests.request(\"POST\", url, json=payload, headers=headers)\n\nprint(response.text)\n</code></pre> <pre><code>from alitiq import alitiqSolarAPI, SolarPowerPlantModel\n\n# Initialize the API client\nsolar_api = alitiqSolarAPI(api_key=\"your-api-key\")\n\n# Define the PV power plant with subsystems\nplant = SolarPowerPlantModel(\n    site_name=\"My Solar Plant\",\n    location_id=\"SP123\",\n    latitude=48.160170,\n    longitude=10.55907,\n    installed_power=1000.0,\n    installed_power_inverter=950.0,\n    azimuth=180.0,\n    tilt=25.0,\n)\n\n# Create the location\nresponse = solar_api.create_location(plant)\nprint(\"Location created:\", response)\n</code></pre> <pre><code>curl --request POST \\\n  --url https://api.alitiq.com/solar/pv_systems/add/ \\\n  --header 'Content-Type: application/json' \\\n  --header 'x-api-key: {api-key}' \\\n  --data '[\n    {\n        \"location_id\": \"12\",\n        \"site_name\": \"test_2\",\n        \"latitude\": 48.9,\n        \"longitude\": 10.3,\n        \"installed_power\": 320,\n        \"installed_power_inverter\": 300,\n        \"azimuth\": 180,\n        \"tilt\": 13,\n        \"temp_factor\": 0.033,\n        \"mover\": 0\n    },\n    {\n        \"location_id\": \"12\",\n        \"site_name\": \"test_2\",\n        \"latitude\": 48.9,\n        \"longitude\": 10.3,\n        \"installed_power\": 320,\n        \"installed_power_inverter\": 300,\n        \"azimuth\": 180,\n        \"tilt\": 15,\n        \"temp_factor\": 0.033,\n        \"mover\": 0\n    }\n]'\n</code></pre> <p>Note</p> <p>After you have created your first or new pv system, it takes up to 6 hours to receive a first forecast under <code>optimized</code>. When you do not provide measurement data, the <code>optimized</code> is just a baseline forecast. No optimisation was done int htat case. Baseline forecast under <code>icon_eu</code> or <code>icon_global</code> is available with a delay of 5 minutes after creation. Optimized forecast are available the next day in case you have provided measurement data from the system.</p>"},{"location":"solar_power_forecast/setup_pv_portfolio_forecast/#tracking-system","title":"Tracking system","text":"<p>Tracking systems are more advanced components in PV system modeling and require additional configuration details to accurately simulate system behavior.</p> <p>The supported tracking types are:</p> <ul> <li>No Tracking: <code>0</code> or <code>1</code></li> <li>Single Axis Tracking (Vertical Axis): <code>2</code> (Note: This is very rare and currently not supported.)</li> <li>Single Axis Tracking (Horizontal Axis): <code>3</code> (This is the most common type.)</li> <li>Dual Axis Tracking: <code>4</code> (Rare, but supported.)</li> </ul>"},{"location":"solar_power_forecast/setup_pv_portfolio_forecast/#dual-axis-tracking","title":"Dual Axis Tracking","text":"<p>For dual-axis systems, no additional geometric parameters are needed. The modules follow the sun's position in both azimuth and zenith, offering optimal irradiance capture throughout the day.</p>"},{"location":"solar_power_forecast/setup_pv_portfolio_forecast/#single-axis-tracking","title":"Single Axis Tracking","text":"<p>For horizontal single-axis tracking systems (type <code>3</code>), the following parameters must be provided:</p> <ul> <li> <p><code>table_length</code>: Length of the PV table (in meters)</p> </li> <li> <p><code>height</code>: Height of the rotation axis of the pv table (in metres)</p> </li> <li> <p><code>row_distance</code>: Distance between adjacent tracker rows (in meters)   These two parameters are used to calculate the Ground Coverage Ratio (GCR).</p> </li> <li> <p><code>do_backtracking</code>: Boolean flag indicating whether backtracking is enabled   (Backtracking reduces shading between rows during early morning and late afternoon.)</p> </li> <li> <p><code>max_rotation_angle</code>: The maximum rotation angle (in degrees) allowed for the tracker</p> </li> </ul>"},{"location":"solar_power_forecast/setup_pv_portfolio_forecast/#system-alignment-notes","title":"System Alignment Notes","text":"<p>Adapt the following parameters based on your system configuration:</p> <ul> <li>If your tracker rows are aligned north-south (most common), set the <code>azimuth</code> or <code>orientation</code> to 180\u00b0</li> <li>For systems installed on flat ground, set the <code>tilt</code> to 0\u00b0</li> </ul>"},{"location":"solar_power_forecast/setup_pv_portfolio_forecast/#inspect-your-portfolio","title":"Inspect your portfolio","text":"<p>After setting up your portfolio or to check out existing locations, you can use the <code>pv_systems/list/</code> endpoint.</p> python requestsalitiq-pycURL <pre><code>import requests\n\nurl = \"https://api.alitiq.com/solar/pv_systems/list/\"\n\nquerystring = {\"response_format\":\"html\"}\n\npayload = \"\"\nheaders = {\"x-api-key\": {api-key}}\nresponse = requests.request(\"GET\", url, data=payload, params=querystring, headers=headers)\n\nprint(response.text)\n</code></pre> <pre><code>from alitiq import alitiqSolarAPI\n\n# Initialize the API client\nsolar_api = alitiqSolarAPI(api_key=\"your-api-key\")\n\n# return the location as a pd.DataFrame\nresponse = solar_api.list_locations()\nprint(\"Locations:\", response)\n</code></pre> <pre><code>curl --request GET \\\n  --url 'https://api.alitiq.com/solar/pv_systems/list/?response_format=json' \\\n  --header 'x-api-key: api-key'\n</code></pre> <p>Example response json:  <pre><code>{\n  \"columns\": [\n    \"location_id\",\n    \"altitude\",\n    \"latitude\",\n    \"longitude\",\n    \"site_name\",\n    \"zip_code\",\n    \"country\",\n    \"do_backtracking\",\n    \"row_distance\",\n    \"tso_area\",\n    \"subsystem_id\",\n    \"installed_power\",\n    \"installed_power_inverter\",\n    \"temp_factor\",\n    \"azimuth\",\n    \"tilt\",\n    \"mover\",\n    \"height\",\n    \"table_length\",\n    \"max_rotation_angle\"\n  ],\n  \"index\": [\n    0,\n    1,\n    2,\n    3\n  ],\n  \"data\": [\n    [\n      \"1\",\n      126.95,\n      50.06,\n      8.83,\n      \"Obertshausen\",\n      \"63179\",\n      \"DE\",\n      false,\n      null,\n      \"Amprion\",\n      5599,\n      709.3,\n      636.0,\n      0.03,\n      195.0,\n      10.0,\n      1,\n      null,\n      null,\n      null\n    ],\n    [\n      \"1\",\n      126.95,\n      50.06,\n      8.83,\n      \"Obertshausen\",\n      \"63179\",\n      \"DE\",\n      false,\n      null,\n      \"Amprion\",\n      5759,\n      999.38,\n      480.0,\n      0.03,\n      180.0,\n      15.0,\n      1,\n      null,\n      null,\n      null\n    ],\n    [\n      \"4507\",\n      557.75,\n      48.9,\n      10.3,\n      \"test_2\",\n      null,\n      null,\n      null,\n      null,\n      null,\n      5796,\n      320.0,\n      300.0,\n      0.03,\n      50.0,\n      15.0,\n      1,\n      null,\n      null,\n      null\n    ]\n  ]\n}\n</code></pre></p> <p>In the response of your portfolio you might find additional information that you have not defined e.g. the TSO-Area or a ZIP Code. These information are defined by alitiq.</p> <p>In case you use the html- Response of the API the systems will be shown in a table like this: </p> <p></p>"},{"location":"solar_power_forecast/setup_pv_portfolio_forecast/#delete-system-from-your-portfolio","title":"Delete system from your portfolio","text":"<p>In case you want to delete a pv-system from your portfolio, you can simply use a POST request to the endpoint <code>pv_systems/delete/</code> it. Please use your individually defined location_id to delete the system: </p> python requestsalitiq-pycURL <pre><code>import requests\n\nurl = \"https://api.alitiq.com/solar/pv_systems/delete/\"\n\nquerystring = {\"location_id\": \"your-location-id-to-delete\"}\n\npayload = \"\"\nheaders = {\"x-api-key\": {api-key}}\nresponse = requests.request(\"POST\", url, data=payload, params=querystring, headers=headers)\n\nprint(response.text)\n</code></pre> <pre><code>from alitiq import alitiqSolarAPI\n\n# Initialize the API client\nsolar_api = alitiqSolarAPI(api_key=\"your-api-key\")\n\n# delete location \nresponse = solar_api.delete_location(\"your-location-id-to_delete\")\nprint(response.text)\n</code></pre> <pre><code>curl --request POST \\\n  --url 'https://api.alitiq.com/solar/pv_systems/delete/?location_id=your-location-id-to_delete' \\\n  --header 'x-api-key: api-key'\n</code></pre>"},{"location":"solar_power_forecast/setup_pv_portfolio_forecast/#faqs","title":"FAQs \u2753","text":""},{"location":"solar_power_forecast/setup_pv_portfolio_forecast/#which-temp_factor-should-i-use","title":"Which temp_factor should I use?","text":"<p>The temperature factor (temp_factor) accounts for the temperature-related efficiency loss of PV systems. Use the appropriate value based on the type of mounting for accurate forecasting.  </p> System Type Description Temp Factor (temp_factor) Free-Mounted Systems Modules mounted on open frames with good ventilation <code>0.03</code> Roof-Mounted Systems Modules mounted on roofs with moderate ventilation <code>0.035</code> Roof-Integrated Systems Modules integrated into the roof with limited ventilation <code>0.05</code>"},{"location":"solar_power_forecast/setup_pv_portfolio_forecast/#what-if-my-power-plant-has-only-one-subsystem","title":"What if my power plant has only one subsystem?","text":"<p>You can omit the <code>subsystems</code> field and define the azimuth, tilt, and installed_power at the plant level.  </p>"},{"location":"solar_power_forecast/setup_pv_portfolio_forecast/#can-i-update-the-location-later","title":"Can I update the location later?","text":"<p>Currently not, this feature is under development. Please <code>delete</code> the system and re-configure it.</p>"},{"location":"solar_power_forecast/setup_pv_portfolio_forecast/#support-feedback","title":"Support &amp; Feedback \ud83d\udcac","text":"<ul> <li>Contact Support: support@alitiq.com </li> </ul> <p>\ud83c\udf1f Start forecasting smarter with alitiq today! \ud83c\udf1f  </p>"},{"location":"utils/timezones/","title":"Available timezones","text":"<p>Submitting the correct timezone is key for a working forecasting solution. In the following lines we show you the available timezones. By design we do not ask for a timezone aware timestamp as we want you to deal with the question. This is why the <code>timezone</code>parameter is mandatory in the measurement and curtailment endpoints. For the forecasting endpoints this feature is optional. </p>"},{"location":"utils/timezones/#backend","title":"Backend","text":"<p>In the backend, we are running nearly a 100% on python. So we orientate at the <code>pytz</code> package. </p>"},{"location":"utils/timezones/#inspect-timezones","title":"Inspect timezones:","text":"pythonList of timezones <pre><code>import pytz\npytz.all_timzones\n</code></pre> <pre><code>Africa/Abidjan\nAfrica/Accra\nAfrica/Addis_Ababa\nAfrica/Algiers\nAfrica/Asmara\nAfrica/Asmera\nAfrica/Bamako\nAfrica/Bangui\nAfrica/Banjul\nAfrica/Bissau\nAfrica/Blantyre\nAfrica/Brazzaville\nAfrica/Bujumbura\nAfrica/Cairo\nAfrica/Casablanca\nAfrica/Ceuta\nAfrica/Conakry\nAfrica/Dakar\nAfrica/Dar_es_Salaam\nAfrica/Djibouti\nAfrica/Douala\nAfrica/El_Aaiun\nAfrica/Freetown\nAfrica/Gaborone\nAfrica/Harare\nAfrica/Johannesburg\nAfrica/Juba\nAfrica/Kampala\nAfrica/Khartoum\nAfrica/Kigali\nAfrica/Kinshasa\nAfrica/Lagos\nAfrica/Libreville\nAfrica/Lome\nAfrica/Luanda\nAfrica/Lubumbashi\nAfrica/Lusaka\nAfrica/Malabo\nAfrica/Maputo\nAfrica/Maseru\nAfrica/Mbabane\nAfrica/Mogadishu\nAfrica/Monrovia\nAfrica/Nairobi\nAfrica/Ndjamena\nAfrica/Niamey\nAfrica/Nouakchott\nAfrica/Ouagadougou\nAfrica/Porto-Novo\nAfrica/Sao_Tome\nAfrica/Timbuktu\nAfrica/Tripoli\nAfrica/Tunis\nAfrica/Windhoek\nAmerica/Adak\nAmerica/Anchorage\nAmerica/Anguilla\nAmerica/Antigua\nAmerica/Araguaina\nAmerica/Argentina/Buenos_Aires\nAmerica/Argentina/Catamarca\nAmerica/Argentina/ComodRivadavia\nAmerica/Argentina/Cordoba\nAmerica/Argentina/Jujuy\nAmerica/Argentina/La_Rioja\nAmerica/Argentina/Mendoza\nAmerica/Argentina/Rio_Gallegos\nAmerica/Argentina/Salta\nAmerica/Argentina/San_Juan\nAmerica/Argentina/San_Luis\nAmerica/Argentina/Tucuman\nAmerica/Argentina/Ushuaia\nAmerica/Aruba\nAmerica/Asuncion\nAmerica/Atikokan\nAmerica/Atka\nAmerica/Bahia\nAmerica/Bahia_Banderas\nAmerica/Barbados\nAmerica/Belem\nAmerica/Belize\nAmerica/Blanc-Sablon\nAmerica/Boa_Vista\nAmerica/Bogota\nAmerica/Boise\nAmerica/Buenos_Aires\nAmerica/Cambridge_Bay\nAmerica/Campo_Grande\nAmerica/Cancun\nAmerica/Caracas\nAmerica/Catamarca\nAmerica/Cayenne\nAmerica/Cayman\nAmerica/Chicago\nAmerica/Chihuahua\nAmerica/Ciudad_Juarez\nAmerica/Coral_Harbour\nAmerica/Cordoba\nAmerica/Costa_Rica\nAmerica/Coyhaique\nAmerica/Creston\nAmerica/Cuiaba\nAmerica/Curacao\nAmerica/Danmarkshavn\nAmerica/Dawson\nAmerica/Dawson_Creek\nAmerica/Denver\nAmerica/Detroit\nAmerica/Dominica\nAmerica/Edmonton\nAmerica/Eirunepe\nAmerica/El_Salvador\nAmerica/Ensenada\nAmerica/Fort_Nelson\nAmerica/Fort_Wayne\nAmerica/Fortaleza\nAmerica/Glace_Bay\nAmerica/Godthab\nAmerica/Goose_Bay\nAmerica/Grand_Turk\nAmerica/Grenada\nAmerica/Guadeloupe\nAmerica/Guatemala\nAmerica/Guayaquil\nAmerica/Guyana\nAmerica/Halifax\nAmerica/Havana\nAmerica/Hermosillo\nAmerica/Indiana/Indianapolis\nAmerica/Indiana/Knox\nAmerica/Indiana/Marengo\nAmerica/Indiana/Petersburg\nAmerica/Indiana/Tell_City\nAmerica/Indiana/Vevay\nAmerica/Indiana/Vincennes\nAmerica/Indiana/Winamac\nAmerica/Indianapolis\nAmerica/Inuvik\nAmerica/Iqaluit\nAmerica/Jamaica\nAmerica/Jujuy\nAmerica/Juneau\nAmerica/Kentucky/Louisville\nAmerica/Kentucky/Monticello\nAmerica/Knox_IN\nAmerica/Kralendijk\nAmerica/La_Paz\nAmerica/Lima\nAmerica/Los_Angeles\nAmerica/Louisville\nAmerica/Lower_Princes\nAmerica/Maceio\nAmerica/Managua\nAmerica/Manaus\nAmerica/Marigot\nAmerica/Martinique\nAmerica/Matamoros\nAmerica/Mazatlan\nAmerica/Mendoza\nAmerica/Menominee\nAmerica/Merida\nAmerica/Metlakatla\nAmerica/Mexico_City\nAmerica/Miquelon\nAmerica/Moncton\nAmerica/Monterrey\nAmerica/Montevideo\nAmerica/Montreal\nAmerica/Montserrat\nAmerica/Nassau\nAmerica/New_York\nAmerica/Nipigon\nAmerica/Nome\nAmerica/Noronha\nAmerica/North_Dakota/Beulah\nAmerica/North_Dakota/Center\nAmerica/North_Dakota/New_Salem\nAmerica/Nuuk\nAmerica/Ojinaga\nAmerica/Panama\nAmerica/Pangnirtung\nAmerica/Paramaribo\nAmerica/Phoenix\nAmerica/Port-au-Prince\nAmerica/Port_of_Spain\nAmerica/Porto_Acre\nAmerica/Porto_Velho\nAmerica/Puerto_Rico\nAmerica/Punta_Arenas\nAmerica/Rainy_River\nAmerica/Rankin_Inlet\nAmerica/Recife\nAmerica/Regina\nAmerica/Resolute\nAmerica/Rio_Branco\nAmerica/Rosario\nAmerica/Santa_Isabel\nAmerica/Santarem\nAmerica/Santiago\nAmerica/Santo_Domingo\nAmerica/Sao_Paulo\nAmerica/Scoresbysund\nAmerica/Shiprock\nAmerica/Sitka\nAmerica/St_Barthelemy\nAmerica/St_Johns\nAmerica/St_Kitts\nAmerica/St_Lucia\nAmerica/St_Thomas\nAmerica/St_Vincent\nAmerica/Swift_Current\nAmerica/Tegucigalpa\nAmerica/Thule\nAmerica/Thunder_Bay\nAmerica/Tijuana\nAmerica/Toronto\nAmerica/Tortola\nAmerica/Vancouver\nAmerica/Virgin\nAmerica/Whitehorse\nAmerica/Winnipeg\nAmerica/Yakutat\nAmerica/Yellowknife\nAntarctica/Casey\nAntarctica/Davis\nAntarctica/DumontDUrville\nAntarctica/Macquarie\nAntarctica/Mawson\nAntarctica/McMurdo\nAntarctica/Palmer\nAntarctica/Rothera\nAntarctica/South_Pole\nAntarctica/Syowa\nAntarctica/Troll\nAntarctica/Vostok\nArctic/Longyearbyen\nAsia/Aden\nAsia/Almaty\nAsia/Amman\nAsia/Anadyr\nAsia/Aqtau\nAsia/Aqtobe\nAsia/Ashgabat\nAsia/Ashkhabad\nAsia/Atyrau\nAsia/Baghdad\nAsia/Bahrain\nAsia/Baku\nAsia/Bangkok\nAsia/Barnaul\nAsia/Beirut\nAsia/Bishkek\nAsia/Brunei\nAsia/Calcutta\nAsia/Chita\nAsia/Choibalsan\nAsia/Chongqing\nAsia/Chungking\nAsia/Colombo\nAsia/Dacca\nAsia/Damascus\nAsia/Dhaka\nAsia/Dili\nAsia/Dubai\nAsia/Dushanbe\nAsia/Famagusta\nAsia/Gaza\nAsia/Harbin\nAsia/Hebron\nAsia/Ho_Chi_Minh\nAsia/Hong_Kong\nAsia/Hovd\nAsia/Irkutsk\nAsia/Istanbul\nAsia/Jakarta\nAsia/Jayapura\nAsia/Jerusalem\nAsia/Kabul\nAsia/Kamchatka\nAsia/Karachi\nAsia/Kashgar\nAsia/Kathmandu\nAsia/Katmandu\nAsia/Khandyga\nAsia/Kolkata\nAsia/Krasnoyarsk\nAsia/Kuala_Lumpur\nAsia/Kuching\nAsia/Kuwait\nAsia/Macao\nAsia/Macau\nAsia/Magadan\nAsia/Makassar\nAsia/Manila\nAsia/Muscat\nAsia/Nicosia\nAsia/Novokuznetsk\nAsia/Novosibirsk\nAsia/Omsk\nAsia/Oral\nAsia/Phnom_Penh\nAsia/Pontianak\nAsia/Pyongyang\nAsia/Qatar\nAsia/Qostanay\nAsia/Qyzylorda\nAsia/Rangoon\nAsia/Riyadh\nAsia/Saigon\nAsia/Sakhalin\nAsia/Samarkand\nAsia/Seoul\nAsia/Shanghai\nAsia/Singapore\nAsia/Srednekolymsk\nAsia/Taipei\nAsia/Tashkent\nAsia/Tbilisi\nAsia/Tehran\nAsia/Tel_Aviv\nAsia/Thimbu\nAsia/Thimphu\nAsia/Tokyo\nAsia/Tomsk\nAsia/Ujung_Pandang\nAsia/Ulaanbaatar\nAsia/Ulan_Bator\nAsia/Urumqi\nAsia/Ust-Nera\nAsia/Vientiane\nAsia/Vladivostok\nAsia/Yakutsk\nAsia/Yangon\nAsia/Yekaterinburg\nAsia/Yerevan\nAtlantic/Azores\nAtlantic/Bermuda\nAtlantic/Canary\nAtlantic/Cape_Verde\nAtlantic/Faeroe\nAtlantic/Faroe\nAtlantic/Jan_Mayen\nAtlantic/Madeira\nAtlantic/Reykjavik\nAtlantic/South_Georgia\nAtlantic/St_Helena\nAtlantic/Stanley\nAustralia/ACT\nAustralia/Adelaide\nAustralia/Brisbane\nAustralia/Broken_Hill\nAustralia/Canberra\nAustralia/Currie\nAustralia/Darwin\nAustralia/Eucla\nAustralia/Hobart\nAustralia/LHI\nAustralia/Lindeman\nAustralia/Lord_Howe\nAustralia/Melbourne\nAustralia/NSW\nAustralia/North\nAustralia/Perth\nAustralia/Queensland\nAustralia/South\nAustralia/Sydney\nAustralia/Tasmania\nAustralia/Victoria\nAustralia/West\nAustralia/Yancowinna\nBrazil/Acre\nBrazil/DeNoronha\nBrazil/East\nBrazil/West\nCET\nCST6CDT\nCanada/Atlantic\nCanada/Central\nCanada/Eastern\nCanada/Mountain\nCanada/Newfoundland\nCanada/Pacific\nCanada/Saskatchewan\nCanada/Yukon\nChile/Continental\nChile/EasterIsland\nCuba\nEET\nEST\nEST5EDT\nEgypt\nEire\nEtc/GMT\nEtc/GMT+0\nEtc/GMT+1\nEtc/GMT+10\nEtc/GMT+11\nEtc/GMT+12\nEtc/GMT+2\nEtc/GMT+3\nEtc/GMT+4\nEtc/GMT+5\nEtc/GMT+6\nEtc/GMT+7\nEtc/GMT+8\nEtc/GMT+9\nEtc/GMT-0\nEtc/GMT-1\nEtc/GMT-10\nEtc/GMT-11\nEtc/GMT-12\nEtc/GMT-13\nEtc/GMT-14\nEtc/GMT-2\nEtc/GMT-3\nEtc/GMT-4\nEtc/GMT-5\nEtc/GMT-6\nEtc/GMT-7\nEtc/GMT-8\nEtc/GMT-9\nEtc/GMT0\nEtc/Greenwich\nEtc/UCT\nEtc/UTC\nEtc/Universal\nEtc/Zulu\nEurope/Amsterdam\nEurope/Andorra\nEurope/Astrakhan\nEurope/Athens\nEurope/Belfast\nEurope/Belgrade\nEurope/Berlin\nEurope/Bratislava\nEurope/Brussels\nEurope/Bucharest\nEurope/Budapest\nEurope/Busingen\nEurope/Chisinau\nEurope/Copenhagen\nEurope/Dublin\nEurope/Gibraltar\nEurope/Guernsey\nEurope/Helsinki\nEurope/Isle_of_Man\nEurope/Istanbul\nEurope/Jersey\nEurope/Kaliningrad\nEurope/Kiev\nEurope/Kirov\nEurope/Kyiv\nEurope/Lisbon\nEurope/Ljubljana\nEurope/London\nEurope/Luxembourg\nEurope/Madrid\nEurope/Malta\nEurope/Mariehamn\nEurope/Minsk\nEurope/Monaco\nEurope/Moscow\nEurope/Nicosia\nEurope/Oslo\nEurope/Paris\nEurope/Podgorica\nEurope/Prague\nEurope/Riga\nEurope/Rome\nEurope/Samara\nEurope/San_Marino\nEurope/Sarajevo\nEurope/Saratov\nEurope/Simferopol\nEurope/Skopje\nEurope/Sofia\nEurope/Stockholm\nEurope/Tallinn\nEurope/Tirane\nEurope/Tiraspol\nEurope/Ulyanovsk\nEurope/Uzhgorod\nEurope/Vaduz\nEurope/Vatican\nEurope/Vienna\nEurope/Vilnius\nEurope/Volgograd\nEurope/Warsaw\nEurope/Zagreb\nEurope/Zaporozhye\nEurope/Zurich\nGB\nGB-Eire\nGMT\nGMT+0\nGMT-0\nGMT0\nGreenwich\nHST\nHongkong\nIceland\nIndian/Antananarivo\nIndian/Chagos\nIndian/Christmas\nIndian/Cocos\nIndian/Comoro\nIndian/Kerguelen\nIndian/Mahe\nIndian/Maldives\nIndian/Mauritius\nIndian/Mayotte\nIndian/Reunion\nIran\nIsrael\nJamaica\nJapan\nKwajalein\nLibya\nMET\nMST\nMST7MDT\nMexico/BajaNorte\nMexico/BajaSur\nMexico/General\nNZ\nNZ-CHAT\nNavajo\nPRC\nPST8PDT\nPacific/Apia\nPacific/Auckland\nPacific/Bougainville\nPacific/Chatham\nPacific/Chuuk\nPacific/Easter\nPacific/Efate\nPacific/Enderbury\nPacific/Fakaofo\nPacific/Fiji\nPacific/Funafuti\nPacific/Galapagos\nPacific/Gambier\nPacific/Guadalcanal\nPacific/Guam\nPacific/Honolulu\nPacific/Johnston\nPacific/Kanton\nPacific/Kiritimati\nPacific/Kosrae\nPacific/Kwajalein\nPacific/Majuro\nPacific/Marquesas\nPacific/Midway\nPacific/Nauru\nPacific/Niue\nPacific/Norfolk\nPacific/Noumea\nPacific/Pago_Pago\nPacific/Palau\nPacific/Pitcairn\nPacific/Pohnpei\nPacific/Ponape\nPacific/Port_Moresby\nPacific/Rarotonga\nPacific/Saipan\nPacific/Samoa\nPacific/Tahiti\nPacific/Tarawa\nPacific/Tongatapu\nPacific/Truk\nPacific/Wake\nPacific/Wallis\nPacific/Yap\nPoland\nPortugal\nROC\nROK\nSingapore\nTurkey\nUCT\nUS/Alaska\nUS/Aleutian\nUS/Arizona\nUS/Central\nUS/East-Indiana\nUS/Eastern\nUS/Hawaii\nUS/Indiana-Starke\nUS/Michigan\nUS/Mountain\nUS/Pacific\nUS/Samoa\nUTC\nUniversal\nW-SU\nWET\nZulu\n</code></pre>"},{"location":"utils/timezones/#need-help","title":"Need Help? \ud83e\udd14","text":"<p>For further assistance: - Contact us at support@alitiq.com for technical queries.  </p>"},{"location":"weather_forecast/access_weather_observations/","title":"Weather Observations \ud83c\udf21\ufe0f","text":"<p>The endpoint for querying weather observations is <code>observation</code> or <code>observation_global</code>, with service tiers such as <code>daily</code>, <code>hourly</code>, and <code>search</code>.</p>"},{"location":"weather_forecast/access_weather_observations/#endpoints","title":"Endpoints:","text":"<ul> <li><code>https://api.alitiq.com/weather/observation/?</code></li> <li><code>https://api.alitiq.com/weather/observation_global/&lt;service&gt;/?</code></li> </ul>"},{"location":"weather_forecast/access_weather_observations/#endpoint-observation","title":"Endpoint: Observation","text":"<p><code>https://api.alitiq.com/weather/observation/?</code></p> <p>This endpoint allows you to request measurement data from the German Weather Service (DWD) and other weather services with a 10-minute resolution. The following regions are supported:</p> <ul> <li>Germany  </li> <li>Switzerland  </li> <li>Austria  </li> <li>Denmark  </li> <li>Netherlands  </li> <li>France  </li> <li>Italy  </li> <li>Spain  </li> <li>Greece  </li> </ul> <p>\u2139\ufe0f Note: Not all weather parameters are available at a 10-minute resolution (some are only reported hourly). If a parameter is unavailable at a 10-minute resolution, the return value will be <code>-9999</code>. For a broader selection of weather parameters, use the <code>observation_global</code> endpoint with hourly/daily resolution.</p> <p>Weather observations can be queried using station names or coordinates. If you provide coordinates or a postal code, the nearest weather station will be determined, and its data will be returned.</p>"},{"location":"weather_forecast/access_weather_observations/#available-parameters","title":"Available Parameters","text":"Parameter Description Type station_name Optional. Name of the station, as specified in the station list. string response_format Format of the response: <code>csv</code>, <code>json</code>, or <code>html</code>. CSV and JSON are standard pandas DataFrame outputs. string latitude Optional. WGS84 coordinates in the north-south direction (e.g., Google Maps coordinates). float longitude Optional. WGS84 coordinates in the east-west direction (e.g., Google Maps coordinates). float zip_code Optional. German postal code. The geographic center of the postal code area is used as the reference point for data retrieval. Example: <code>86153</code>. string city_name Optional. City or location name in English. Ensure correct spelling for successful geolocation. Example: <code>Munich</code>, <code>Berlin</code>, <code>London</code>. string start_date Optional. Start of the query interval in UTC format <code>YYYY-MM-DDTHH:mm:SS</code>. Example: <code>2019-12-09T00:00:00</code>. string end_date Optional. End of the query interval in UTC format <code>YYYY-MM-DDTHH:mm:SS</code>. Example: <code>2019-12-09T23:59:59</code>. string <p>Default Behavior: If <code>start_date</code> and <code>end_date</code> are not specified, the data for the last 24 hours will be returned.</p>"},{"location":"weather_forecast/access_weather_observations/#location-requirements","title":"Location Requirements","text":"<p>To specify the location, you must provide one of the following combinations: 1. <code>zip_code</code> 2. <code>latitude</code> and <code>longitude</code> 3. <code>station_name</code> </p>"},{"location":"weather_forecast/access_weather_observations/#example-request","title":"Example Request:","text":"<pre><code>https://api.alitiq.com/weather/observation/?station_name=Augsburg&amp;response_format=html\n</code></pre>"},{"location":"weather_forecast/access_weather_observations/#example-html-response-plot","title":"Example html response Plot","text":""},{"location":"weather_forecast/intro/","title":"\ud83c\udf24\ufe0f alitiq Weather Forecast API \ud83c\udf24\ufe0f","text":"<p>The Alitiq Weather API provides access to current weather information and forecasts for any location worldwide. Weather data can be retrieved using geographic coordinates (WGS84) or a German postal code. Depending on the product, the data is interpolated to the nearest location or grid point of a forecasting product. Selected services also allow queries using a station ID. All API requests are secured via a HEADER authentication method.</p> <p>Access restrictions are determined by the rules outlined in your contract. These restrictions may include limits on requests per second and per month. However, there are no limitations on the content retrieved.</p> <p>alitiq reserves the right to make future changes to access permissions, including disabling specific API endpoints. This is especially relevant for API extensions.</p>"},{"location":"weather_forecast/intro/#registration","title":"Registration \ud83d\udcc3","text":"<p>To use the alitiq Weather API, you will receive credentials from alitiq, consisting of a secret key (<code>x-api-key</code>). This secret key must not be shared with third parties and must be included in the header of every request.</p>"},{"location":"weather_forecast/intro/#authentication","title":"Authentication","text":"<p>Authentication is performed using the <code>x-api-key</code> parameter in the request header. Below is an example of a request using the command-line tool cURL:</p>"},{"location":"weather_forecast/intro/#example-header","title":"Example Header:","text":"<pre><code>curl -X GET 'https://api.alitiq.com/weather/weather_forecast/?latitude=49.356&amp;longitude=11.904&amp;response_format=json&amp;weather_model=icon_eu' \\\n-H 'x-api-key: &lt;your-api-key&gt;'\n</code></pre>"},{"location":"weather_forecast/intro/#available-api-endpoints","title":"Available API Endpoints","text":"<p>alitiq provides various API endpoints for accessing weather data:</p> <ul> <li>Weather Forecasts: <code>/weather/weather_forecast/</code></li> <li>Weather Observations: <code>/weather/observation/</code> and <code>/weather/observation_global/</code></li> <li>Solar Position: <code>/weather/solar/</code></li> <li>Nowcast (+2h Precipitation Forecast): <code>/weather/nowcast/precipitation/</code></li> <li>Nowcast (Current Precipitation): <code>/weather/nowcast/gridded_precipitation/</code></li> </ul>"},{"location":"weather_forecast/intro/#time-format","title":"Time Format","text":"<p>All timestamps in the data index are provided in UTC and follow the ISO 8601 format, e.g., <code>2022-03-30T07:00:00.000Z</code>.</p>"},{"location":"weather_forecast/irradiance_data/","title":"\u2600\ufe0f Irradiance Observations API","text":"<p>This API provides solar irradiance observations derived from the MSG satellite (Meteosat Second Generation), covering Europe and Africa (full disk view).</p> <p>It allows you to query irradiance time series for a given point location, either by coordinates, city name, or zip code, over a specified time range.</p>"},{"location":"weather_forecast/irradiance_data/#spatial-coverage","title":"\ud83c\udf0d Spatial Coverage","text":"<ul> <li>Source: EUMETSAT CM-SAF data processed and delivered by DWD</li> <li>Coverage: Europe, Africa, and the surrounding MSG full-disk view</li> <li>Resolution: Point location queried from satellite gridded irradiance data</li> </ul>"},{"location":"weather_forecast/irradiance_data/#api-endpoint","title":"\ud83d\udce5 API Endpoint","text":"<p><code>GET https://api.alitiq.com/weather/irradiance</code></p>"},{"location":"weather_forecast/irradiance_data/#query-parameters","title":"\ud83d\udd11 Query Parameters","text":"Parameter Type Description <code>latitude</code> float Latitude of the point (optional if city or zip provided) <code>longitude</code> float Longitude of the point (optional if city or zip provided) <code>zip_code</code> string Optional zip code (used if coordinates not provided) <code>city_name</code> string Optional city name (used if coordinates not provided) <code>start_date</code> string Start datetime (ISO format, e.g., <code>2024-05-01T00:00</code>) <code>end_date</code> string End datetime (ISO format, e.g., <code>2024-05-01T03:00</code>) <code>response_format</code> string <code>json</code>, <code>csv</code>, or <code>html</code> (default: <code>json</code>)"},{"location":"weather_forecast/irradiance_data/#returned-data","title":"\ud83d\udce6 Returned Data","text":"<ul> <li>Variable:   <code>global_horizontal_irradiance</code> \u2192 measured in W/m\u00b2</li> <li>Interval: ~15-minute values over the requested time period</li> <li>Output format: JSON, CSV, or HTML time series plot</li> </ul>"},{"location":"weather_forecast/irradiance_data/#important-notes","title":"\u26a0\ufe0f Important Notes","text":"<p>\u2705 Data is based on satellite-derived estimates, not ground station measurements \u2705 Only available for locations within the MSG satellite full-disk view (Europe, Africa) \u2705 If using <code>zip_code</code> or <code>city_name</code>, the service will geocode the location to coordinates</p>"},{"location":"weather_forecast/irradiance_data/#example-request","title":"\ud83d\udd27 Example Request","text":"python requestscURL <pre><code>import requests\nimport pandas as pd\nfrom io import BytesIO\n\nurl = \"https://api.alitiq.com/weather/irradiance/\"\n\nquerystring = {\"latitude\":47.99444,\"longitude\":10.692917,\"response_format\":\"json\"}\npayload = \"\"\nheaders = {\"x-api-key\": \"your-api-key\"}\n\nresponse = requests.request(\"GET\", url, data=payload, headers=headers, params=querystring)\ndata = pd.read_json(BytesIO(response.content), orient='split')\n</code></pre> <pre><code>curl --request GET \\\n  --header 'x-api-key: {api-key}' \\\n  --url 'https://api.alitiq.com/weather/irradiance?latitude=48.8566&amp;longitude=2.3522&amp;start_date=2025-05-01T06:00&amp;end_date=2025-05-01T12:00&amp;response_format=json'\n</code></pre>"},{"location":"weather_forecast/precipitation_data/","title":"\ud83c\udf27\ufe0f Precipitation data API","text":"<p>This API provides access to precipitation observation data (at 10-minute intervals) using the RADOLAN \"RW\" product. You can query by coordinates, zip code, or city name and retrieve data in JSON, CSV, or HTML formats.</p>"},{"location":"weather_forecast/precipitation_data/#base-url","title":"\ud83d\udd17 Base URL","text":"<pre><code>https://api.alitiq.com/weather/precipitation\n</code></pre>"},{"location":"weather_forecast/precipitation_data/#description","title":"\ud83e\uddfe Description","text":"<p>This API returns a short-term precipitation forecast at 10-minute intervals for a specified location and date range. Internally, it fetches hourly precipitation data from RADOLAN and derives instant 10-minute precipitation sums by differencing.</p> <ul> <li>Data unit: millimeters (mm) precipitation per 10-minute interval</li> <li>Coverage: entire Germany, based on the RADOLAN grid provided by the German Weather Service (DWD)</li> </ul>"},{"location":"weather_forecast/precipitation_data/#query-parameters","title":"\ud83d\udce5 Query Parameters","text":"Parameter Type Required Description <code>latitude</code> <code>float</code> Optional Latitude of the location <code>longitude</code> <code>float</code> Optional Longitude of the location <code>zip_code</code> <code>string</code> Optional ZIP code for location-based geocoding <code>city_name</code> <code>string</code> Optional City name for location-based geocoding <code>start_date</code> <code>string</code> Optional Start date (<code>YYYY-MM-DD</code>) or datetime (<code>YYYY-MM-DDTHH:MM</code>) <code>end_date</code> <code>string</code> Optional End date (<code>YYYY-MM-DD</code>) or datetime (<code>YYYY-MM-DDTHH:MM</code>) <code>response_format</code> <code>string</code> Optional Format of response: <code>json</code>, <code>csv</code>, or <code>html</code> <p>Note</p> <p>\u26a0:  If <code>latitude</code> and <code>longitude</code> are not provided, you must provide either <code>zip_code</code> or <code>city_name</code>. They are available for Germany at the moment</p>"},{"location":"weather_forecast/precipitation_data/#data-details","title":"\ud83c\udf0d Data Details","text":"<ul> <li>Spatial coverage: Germany, following the official RADOLAN radar grid (provided by DWD)</li> <li>Temporal resolution: 10-minute intervals</li> <li>Value: precipitation sum over each 10-minute period, measured in millimeters (mm)</li> </ul>"},{"location":"weather_forecast/precipitation_data/#example-requests","title":"\ud83e\uddea Example Requests","text":""},{"location":"weather_forecast/precipitation_data/#example-1-using-coordinates","title":"Example 1: Using Coordinates","text":"python requestscURL <pre><code>import requests\nimport pandas as pd\nfrom io import BytesIO\n\nurl = \"https://api.alitiq.com/weather/precipitation\"\n\nquerystring = {\"latitude\":47.99444,\"longitude\":10.692917,\"response_format\":\"json\"}\npayload = \"\"\nheaders = {\"x-api-key\": \"your-api-key\"}\n\nresponse = requests.request(\"GET\", url, data=payload, headers=headers, params=querystring)\ndata = pd.read_json(BytesIO(response.content), orient='split')\n</code></pre> <pre><code>curl --request GET \\\n--header 'x-api-key: {api-key}' \\\n--url 'https://api.alitiq.com/weather/precipitation?latitude=52.52&amp;longitude=13.405&amp;start_date=2024-05-01T00:00&amp;end_date=2024-05-01T03:00&amp;response_format=json'\n</code></pre>"},{"location":"weather_forecast/precipitation_data/#response-formats","title":"\ud83e\uddfe Response Formats","text":"<ul> <li>JSON \u2192 Structured time series of 10-minute precipitation sums.</li> <li>CSV \u2192 Downloadable table for further data analysis.</li> <li>HTML \u2192 Visual plot showing precipitation over time.</li> </ul>"},{"location":"weather_forecast/precipitation_data/#important-notes","title":"\u26a0\ufe0f Important Notes","text":"<ul> <li>The system converts hourly RADOLAN sums into 10-minute precipitation sums by differencing.</li> <li>The most recent data has a ~30-minute delay due to radar processing.</li> <li>The RADOLAN grid provides high-resolution, radar-based precipitation data over Germany.</li> </ul>"},{"location":"weather_forecast/precipitation_data/#authentication","title":"\ud83d\udd12 Authentication","text":"<p>Currently, the endpoint returns:</p> <ul> <li><code>401 Unauthorized</code> \u2192 if coordinates or response format are invalid.</li> </ul> <p>No user token or API key is required unless integrated separately.</p>"},{"location":"weather_forecast/retrieve_weather_forecast/","title":"Retrieving Weather Forecasts \ud83c\udf24\ufe0f","text":"<p>The endpoint for retrieving weather forecasts is:</p> <pre><code>https://api.alitiq.com/weather/weather_forecast/\n</code></pre> <p>This endpoint requires the following parameters:</p> Parameter Description Type latitude Optional. WGS84 coordinates in the north-south direction (e.g., Google Maps coordinates). float longitude Optional. WGS84 coordinates in the east-west direction (e.g., Google Maps coordinates). float zip_code Optional. Postal code within Germany. The geographic center of the respective postal code area will be used as the reference point for data retrieval. Example: <code>86153</code> string city_name Optional. City or location names in English. Ensure correct spelling for successful geolocation. Examples: <code>Munich</code>, <code>Augsburg</code>, <code>Berlin</code>, <code>London</code>, <code>Paris</code>. string response_format The output format. Options are <code>html</code>, <code>csv</code>, <code>json</code>. CSV and JSON follow standard pandas DataFrame formats. string"},{"location":"weather_forecast/retrieve_weather_forecast/#optional-selecting-the-weather-forecast-model","title":"Optional: Selecting the Weather Forecast Model","text":"Parameter Description Type weather_model Specifies which weather forecast model to use. Options are: <code>icon_d2</code>, <code>icon_eu</code>, <code>icon</code>, <code>icon_global</code>, <code>harmonie_knmi</code>, <code>mos_mix</code>. Default value: <code>mos_mix</code>. string <p>Note: The <code>icon</code> model is a combination of the high-resolution forecast model <code>icon_d2</code> (forecast horizon: 48 hours) and the broader <code>icon_eu</code> model (forecast horizon: 120 hours).</p> <ul> <li>The first 48 hours are provided by <code>icon_d2</code>.  </li> <li>For the remaining 72 hours, the <code>icon_eu</code> model is used, ensuring a seamless forecast period of up to 120 hours.</li> </ul>"},{"location":"weather_forecast/retrieve_weather_forecast/#time-aggregated-forecasts","title":"Time Aggregated Forecasts","text":"<p>For presenting forecasts on a daily basis or at other intervals, another endpoint is available:</p> <pre><code>https://api.alitiq.com/weather/weather_forecast/aggregation/\n</code></pre> <p>This endpoint requires an additional parameter:</p> Parameter Description Type freq Specifies the frequency (interval) of the forecast. string Examples: - For daily forecasts: <code>1D</code> - For 3-hour forecasts: <code>3H</code>"},{"location":"weather_forecast/retrieve_weather_forecast/#example-request","title":"Example Request:","text":"<pre><code>https://api.alitiq.com/weather/weather_forecast/aggregation/?latitude=51.2288286&amp;longitude=6.7734849&amp;freq=1D\n</code></pre>"},{"location":"weather_forecast/retrieve_weather_forecast/#explanation-of-weather_synop_code","title":"Explanation of <code>weather_synop_code</code>","text":"<p>We have translated the synoptic coding <code>weather_synop_code</code>, which represents the current weather condition, into more comprehensible terms. The return value of <code>weather_synop_code_icons</code> corresponds to weather icons, which you can find here.  </p> <p>These are based on the <code>weather_synop_code</code> from the WMO (World Meteorological Organization). You can find a detailed mapping of the significant weather codes here.</p>"},{"location":"weather_forecast/retrieve_weather_forecast/#behavior-of-the-api-according-to-your-location-specification","title":"Behavior of the API according to your location specification","text":"<p>For requests, the API determines the nearest location (<code>mos_mix</code>) or the closest grid point (for other models) based on the provided coordinates. All available data for the selected model is always returned.</p>"},{"location":"weather_forecast/retrieve_weather_forecast/#example-request_1","title":"Example Request:","text":"<pre><code>https://api.alitiq.com/weather/weather_forecast/?latitude=48.356&amp;longitude=10.904&amp;response_format=json&amp;weather_model=mos_mix\n</code></pre>"},{"location":"weather_forecast/retrieve_weather_forecast/#example-html-response-plot","title":"Example html response Plot","text":""},{"location":"wind_power_forecast/available_turbine_types/","title":"Available turbine types for wind power forecast","text":""},{"location":"wind_power_forecast/available_turbine_types/#wind-turbine-specifications-list","title":"Wind Turbine Specifications List","text":"Model Rotor Diameter (m) Rated Power (kW) Manufacturer E-141/4200 141 4200 Enercon E-138-N/4200 138 4200 Enercon E-138/3400 138 3400 Enercon E-126/4200 126 4200 Enercon E-126/7500 126 7500 Enercon E-126/3500 126 3500 Enercon E-115/3200 115 3200 Enercon E-115/3000 115 3000 Enercon E-101/3500 101 3500 Enercon E-101/3050 101 3050 Enercon E-92/2350 92 2350 Enercon E-82/3000 82 3000 Enercon E-82/2350 82 2350 Enercon E-82/2300 82 2300 Enercon E-82/2000 82 2000 Enercon E-70/2300 70 2300 Enercon E-70/2000 70 2000 Enercon E-66/20.70 66 2070 Enercon E-66/18.70 66 1870 Enercon E-66/18.66 66 1866 Enercon E-66/15.70 66 1570 Enercon E-66/15.66 66 1566 Enercon E-58/10.58 58 1058 Enercon E-53/800 53 800 Enercon E-48/800 48 800 Enercon E-40/5.40 40 540 Enercon E-40/6.44 40 644 Enercon E-32-N/300 32 300 Enercon E-30/300 30 300 Enercon AD116/5000 116 5000 Adwen GE/1.5sl 77 1500 General Electric GE/1.5s 77 1500 General Electric GE158/5300 158 5300 General Electric GE137/3600 137 3600 General Electric GE137/3400 137 3400 General Electric GE130/3200 130 3200 General Electric GE120/2750 120 2750 General Electric GE120/2500 120 2500 General Electric GE103/2750 103 2750 General Electric GE102/2780 102 2780 General Electric GE100/2500 100 2500 General Electric ENO126/4800 126 4800 Eno ENO126/4000 126 4000 Eno ENO126/3500 126 3500 Eno ENO114/4000 114 4000 Eno ENO114/3500 114 3500 Eno ENO100/2200 100 2200 Eno ENO92/2200 92 2200 Eno ENO82/2050 82 2050 Eno SCD168/8000 168 8000 Aerodyn N149n/5700 149 5700 Nordex N149/4500 149 4500 Nordex N131/3600 131 3600 Nordex N131/3300 131 3300 Nordex N131/3000 131 3000 Nordex N117/3600 117 3600 Nordex N117/3000 117 3000 Nordex N117/2400 117 2400 Nordex N100/2500 100 2500 Nordex N90/2500 90 2500 Nordex N90/2300 90 2300 Nordex N80/2500 80 2500 Nordex N77/1500 77 1500 Nordex N62/1300 62 1300 Nordex N60/1300 60 1300 Nordex N54/1000 54 1000 Nordex N50/800 50 800 Nordex N43/600 43 600 Nordex N29/250 29 250 Nordex N27/250 27 250 Nordex S152/6330 152 6330 Senvion S140/4200 140 4200 Senvion S140/3600 140 3600 Senvion S140/3400 140 3400 Senvion S126/6150 126 6150 Senvion S122/3000 122 3000 Senvion S122/3200 122 3200 Senvion S114/3200 114 3200 Senvion S114/3400 114 3400 Senvion S104/3400 104 3400 Senvion S77/1500 77 1500 Senvion S70/1500 70 1500 Senvion S46/750 46 750 Senvion SG167/8000 167 8000 Siemens Gamesa SWT155/6600 155 6600 Siemens Gamesa SWT155/6000 155 6000 Siemens Gamesa SWT154/7000 154 7000 Siemens Gamesa SWT142/3150 142 3150 Siemens Gamesa SWT130/3600 130 3600 Siemens Gamesa SWT130/3300 130 3300 Siemens Gamesa SWT120/3600 120 3600 Siemens Gamesa SWT113/3200 113 3200 Siemens Gamesa SWT113/2300 113 2300 Siemens Gamesa SWT107/3600 107 3600 Siemens Gamesa SWT101/3000 101 3000 Siemens Gamesa SWT101/2300 101 2300 Siemens Gamesa SWT93/2300 93 2300 Siemens Gamesa SWT62/1300 62 1300 Siemens Gamesa V164/8000 164 8000 Vestas V164/9500 164 9500 Vestas V150/4200 150 4200 Vestas V136/4200 136 4200 Vestas V136/3450 136 3450 Vestas V126/3450 126 3450 Vestas V126/3300 126 3300 Vestas V126/3000 126 3000 Vestas V117/3600 117 3600 Vestas V117/3450 117 3450 Vestas V117/3300 117 3300 Vestas V112/3450 112 3450 Vestas V112/3300 112 3300 Vestas V112/3075 112 3075 Vestas V112/3000 112 3000 Vestas V100/1800 100 1800 Vestas V100/1800/GS 100 1800 Vestas V90/3000 90 3000 Vestas V90/2000 90 2000 Vestas V80/2000 80 2000 Vestas V90/GS/2000 90 2000 Vestas V66/1650 66 1650 Vestas V52/850 52 850 Vestas V47/660 47 660 Vestas V44/600 44 600 Vestas V39/500 39 500 Vestas Bonus B62/1300 62 1300 AN Bonus Bonus B76/2000 76 2000 AN Bonus Bonus B82/2300 82 2300 AN Bonus Bonus B54/1000 54 1000 AN Bonus Bonus B41/600 41 600 AN Bonus Bonus B44/600 44 600 AN Bonus Bonus B37/450 37 450 AN Bonus NTK31/300 31 300 NTK NTK37/500 37 500 NTK NTK41/500 41 500 NTK NTK43-N/600 43 600 NTK NTK-1500/60 1500 60 NTK TW/500 - 500 Tacke TW/600e - 600 Tacke TW 1.5s/1500 - 1500 Tacke G128/4500 128 4500 Gamesa G114/2500 114 2500 Gamesa G90/2000 90 2000 Gamesa G87/2000 87 2000 Gamesa G80/2000 80 2000 Gamesa G58/850 58 850 Gamesa G52/850 52 850 Gamesa NM 52/900 52 900 NEG Micon NM 82/1500 82 1500 NEG Micon NM 82/1650 82 1650 NEG Micon NM 72C/1500 72 1500 NEG Micon NM 60/1000 60 1000 NEG Micon NM 64c/1500 64 1500 NEG Micon NM 48/600 48 600 NEG Micon VS136/3500 136 3500 Vensys VS120/3000 120 3000 Vensys VS112/2500 112 2500 Vensys VS100/2500 100 2500 Vensys VS82/1500 82 1500 Vensys VS77/1500 77 1500 Vensys MD77/1500 77 1500 MD MD70/1500 70 1500 MD M1500/600 1500 600 Micon 5M/5000 - 5000 REpower M152/6200 152 6200 Senvion M144/3700 144 3700 Senvion M140/4200 140 4200 Senvion M140/3600 140 3600 Senvion M140/3400 140 3400 Senvion M126/6000 126 6000 Senvion M122/3400 122 3400 Senvion M122/3200 122 3200 Senvion M122/3000 122 3000 Senvion M118/4200 118 4200 Senvion M114/3600 114 3600 Senvion M114/3400 114 3400 Senvion M114/3200 114 3200 Senvion M104/3300 104 3300 Senvion MM100/2000 100 2000 Multibrid MM92/2050 92 2050 Multibrid MM82/2050 82 2050 Multibrid 3XM/3300 - 3300 XEMC K82/2000 82 2000 Kenersys K100/2500 100 2500 Kenersys K110/2400 110 2400 Kenersys K120/2300 120 2300 Kenersys D4/600 - 600 Dewind D6/1250 - 1250 Dewind D6/1000 - 1000 Dewind FL100/2500 100 2500 Fuhrl\u00e4nder FL54/1000 54 1000 Fuhrl\u00e4nder W2E-93/2000 93 2000 Wind to Energy SZ82/1500 82 1500 Suzlon"},{"location":"wind_power_forecast/check_available_runs/","title":"How to Check Available Runs with the alitiq Windpower API \ud83c\udf24\ufe0f","text":"<p>The alitiq Wind API allows you to check available forecast runs for your Windpark. This endpoint provides flexibility in choosing a weather model and forecast data, ensuring your needs are met while emphasizing the OPTIMIZED weather model for the most accurate predictions.  </p>"},{"location":"wind_power_forecast/check_available_runs/#overview","title":"Overview","text":"<p>Forecast runs represent the calculations of wind energy production based on various weather models. You can query which runs are available for a specific Windpark and select the model that best suits your application.  </p>"},{"location":"wind_power_forecast/check_available_runs/#why-multiple-weather-models","title":"Why Multiple Weather Models? \ud83e\udd14","text":"<p>alitiq offers several weather models to provide users with options tailored to their specific use cases. These models are sourced from leading global meteorological agencies, each with unique strengths for different geographical regions and forecast requirements.  </p>"},{"location":"wind_power_forecast/check_available_runs/#supported-weather-models","title":"Supported Weather Models","text":"Weather Model Provider Description arpege MeteoFrance (FR) ARPEGE, a regional weather model from France with a focus on European regions. harmonie_dini DMI (Denmark) HARMONIE-AROME, a high-resolution weather model tailored for Europe. icon_d2 DWD (Germany) ICON-D2, a high-resolution short-term forecast model for central Europe. icon_eu DWD (Germany) ICON-EU, a regional weather model offering enhanced resolution for Europe. icon_global DWD (Germany) ICON Global, the global version of the ICON model offering comprehensive coverage. optimized alitiq (Default) Proprietary model combining strengths of various weather sources with historical performance."},{"location":"wind_power_forecast/check_available_runs/#why-use-the-optimized-weather-model","title":"Why Use the OPTIMIZED Weather Model?","text":"<p>The OPTIMIZED weather model combines the strengths of various sources and integrates localized performance data, making it our recommended option. It represents our best estimate for accurate and reliable wind power forecasting.  </p>"},{"location":"wind_power_forecast/check_available_runs/#required-parameters","title":"Required Parameters","text":"<p>To check available forecast runs, provide the following:  </p> Parameter Type Description Default <code>location_id</code> <code>str</code> Unique identifier of the location. None <code>weather_model</code> <code>str</code> (Optional) Name of the weather model (e.g., <code>optimized</code>, <code>icon_eu</code>, <code>arpege</code>). OPTIMIZED"},{"location":"wind_power_forecast/check_available_runs/#example-check-available-runs","title":"Example: Check Available Runs","text":"<p>Here\u2019s how to check available forecast runs using the <code>forecast/check/</code> endpoint or the <code>check_available_runs</code> method of the python SDK:</p> python requestsalitiq-pycURL <pre><code>import requests\n\nurl = \"https://api.alitiq.com/wind/forecast/check/\"\n\nquerystring = {\"weather_model\":\"icon_eu\", \"location_id\": \"WP123\", \"number_of_runs\": 10}\n\npayload = \"\"\nheaders = {\"x-api-key\": \"api-key\"}\n\nresponse = requests.request(\"GET\", url, data=payload, headers=headers, params=querystring)\n\nprint(response.text)\n</code></pre> <pre><code>from alitiq import alitiqWindAPI\n\n# Initialize the API client\nwind_api = alitiqWindAPI(api_key=\"your-api-key\")\n\n# Define the location ID and optional weather model\nlocation_id = \"WP123\"\n\n# Check available forecast runs\navailable_runs = wind_api.check_available_runs(location_id=location_id, weather_model=\"optimized\")\n\n# Print the available runs\nprint(\"Available forecast runs:\")\nprint(available_runs)\n</code></pre> <pre><code>curl --request GET \\\n  --url 'https://api.alitiq.com/wind/forecast/check/?weather_model=icon_eu&amp;location_id=WP123&amp;number_of_runs=10' \\\n  --header 'x-api-key: api-key'\n</code></pre>"},{"location":"wind_power_forecast/check_available_runs/#api-response","title":"API Response","text":"<p>The response includes the list of available forecast runs:  </p> <pre><code>{\n    \"weather_model\": \"icon_eu\",\n    \"time\": \"2025-02-18T05:47:24.347131\",\n    \"dt_calcs\": [\n        \"2024-12-02T06:00:00\",\n        \"2024-12-02T00:00:00\",\n        \"2024-12-01T18:00:00\",\n        \"2024-12-01T12:00:00\",\n        \"2024-12-01T06:00:00\",\n        \"2024-12-01T00:00:00\",\n        \"2024-11-30T18:00:00\",\n        \"2024-11-30T12:00:00\",\n        \"2024-11-30T06:00:00\",\n        \"2024-11-30T00:00:00\"\n    ],\n    \"location_id\": [\n        \"EP_Serbitz\",\n        \"EP_Serbitz\",\n        \"EP_Serbitz\",\n        \"EP_Serbitz\",\n        \"EP_Serbitz\",\n        \"EP_Serbitz\",\n        \"EP_Serbitz\",\n        \"EP_Serbitz\",\n        \"EP_Serbitz\",\n        \"EP_Serbitz\"\n    ]\n} \n</code></pre>"},{"location":"wind_power_forecast/check_available_runs/#best-practices","title":"Best Practices","text":"<ul> <li>Choose the OPTIMIZED Model: While other models may suit specific needs, we strongly recommend the OPTIMIZED model for its superior accuracy.  </li> <li>Verify Run Availability: Always check the available runs before attempting to retrieve forecast data to ensure data freshness.  </li> <li>Use Recent Runs: For better accuracy, use the most recent run available.  </li> </ul>"},{"location":"wind_power_forecast/check_available_runs/#notes","title":"Notes","text":"<ul> <li>Custom Weather Models: Specify other models like <code>arpege</code> or <code>icon-global</code> if needed for specific comparisons or analyses.  </li> <li>Data Freshness: New runs are typically generated at regular intervals; check often for updates.  </li> <li>Optimized Performance: The API is designed to handle large portfolios, ensuring that checking runs for multiple locations is efficient.  </li> </ul> <p>For further assistance, reach out to support@alitiq.com. \ud83c\udf1f  </p>"},{"location":"wind_power_forecast/inspect_wind_park_measurement/","title":"How to Inspect Measurement Data with the alitiq Windpower API \ud83d\udd0d","text":"<p>The alitiq Wind API provides powerful tools to inspect and analyze the historical measurement data for your Windpark. This feature allows you to validate submitted data, track windpark performance, and gain insights into your portfolio.  </p>"},{"location":"wind_power_forecast/inspect_wind_park_measurement/#overview","title":"Overview","text":"<p>Inspecting data involves retrieving historical measurement records stored in the alitiq database for a specific Windpark (aka location). You can define a time range, customize the output format, and perform detailed analysis on the retrieved data.</p>"},{"location":"wind_power_forecast/inspect_wind_park_measurement/#key-features","title":"Key Features \u2728","text":"<ul> <li>Flexible Time Ranges: Retrieve data for any specified date range.  </li> <li>Detailed Records: Includes power output, timestamps, and optional irradiance values.  </li> <li>Analysis Ready: Data is returned in a format suitable for direct analysis using tools like pandas.  </li> </ul> <p>Data displayed as it is in alitiq's database</p> <p>The data in our database is in timezone UTC, with end timestamp in kW power. </p>"},{"location":"wind_power_forecast/inspect_wind_park_measurement/#required-parameters","title":"Required Parameters","text":"<p>To inspect data, provide the following information:  </p> Parameter Type Description Default <code>location_id</code> <code>str</code> Unique identifier of the location whose data you want to inspect. None <code>start_date</code> <code>datetime</code> (Optional) Start date for the inspection range. 2 days before today <code>end_date</code> <code>datetime</code> (Optional) End date for the inspection range. Today"},{"location":"wind_power_forecast/inspect_wind_park_measurement/#example-inspect-data","title":"Example: Inspect Data","text":"<p>Below is an example of how to use the <code>measurement/inspect/</code> endpoint to inspect data and the method <code>get_measurements</code>:  </p> python requestsalitiq-pycURL <pre><code>import requests\n\nurl = \"https://api.alitiq.com/wind/measurement/inspect/\"\n\nquerystring = {\"location_id\":\"WP123\",\"response_format\":\"json\"}\n\npayload = \"\"\nheaders = {\"x-api-key\": \"api-key\"}\n\nresponse = requests.request(\"GET\", url, data=payload, headers=headers, params=querystring)\n\nprint(response.text)\n</code></pre> <pre><code>from datetime import datetime, timedelta\nfrom alitiq import alitiqWindAPI\n\n# Initialize the API client\nwind_api = alitiqWindAPI(api_key=\"your-api-key\")\n\n# Define the location and date range\nlocation_id = \"WP123\"\nstart_date = datetime.now() - timedelta(days=7)  # 7 days ago\nend_date = datetime.now()  # Today\n\n# Inspect measurement data\ndata = wind_api.get_measurements(\n    location_id=location_id, \n    start_date=start_date, \n    end_date=end_date\n)\n\n# Print the retrieved data\nprint(data)\n</code></pre> <pre><code>curl --request GET \\\n  --url 'https://api.alitiq.com/wind/measurement/inspect/?location_id=123&amp;response_format=json' \\\n  --header 'x-api-key: api-key'\n</code></pre>"},{"location":"wind_power_forecast/inspect_wind_park_measurement/#api-response","title":"API Response","text":"<p>The API returns the measurement data in a pandas-compatible format (e.g., JSON), which can be directly loaded into a DataFrame for further analysis:  </p> <pre><code>|       dt        |   power   |  \n|-----------------|-----------|\n| 2024-06-10 10:00|  2120.5    | \n| 2024-06-10 10:15|  2090.8    | \n| 2024-06-10 10:30|  2150.0    |\n</code></pre>"},{"location":"wind_power_forecast/inspect_wind_park_measurement/#best-practices","title":"Best Practices","text":"<ul> <li>Validate Data: Regularly inspect your measurement data to ensure it is accurate and complete.  </li> <li>Batch Analysis: Retrieve data in chunks for longer periods to avoid API response size limitations.  </li> <li>Timezone Awareness: Ensure the <code>timezone</code> is consistent across measurements for accurate analysis.  </li> </ul>"},{"location":"wind_power_forecast/inspect_wind_park_measurement/#advanced-use-case-data-visualization","title":"Advanced Use Case: Data Visualization","text":"<p>You can use tools like <code>matplotlib</code> or <code>seaborn</code> to visualize the data for insights:  </p> <pre><code>import matplotlib.pyplot as plt\n\n# Visualize power output over time\ndata.plot(x='dt', y='power', title=\"Power Output Over Time\", figsize=(10, 6))\nplt.show()\n</code></pre>"},{"location":"wind_power_forecast/inspect_wind_park_measurement/#notes","title":"Notes","text":"<ul> <li>Performance: For large datasets, limit the date range to improve response time.  </li> <li>Missing Data: If any data points are missing, double-check your measurement submissions.  </li> <li>Data Validation: The SDK validates data upon submission to minimize errors during inspection.  </li> </ul> <p>For further questions or issues, contact support@alitiq.com. \ud83c\udf1f  </p>"},{"location":"wind_power_forecast/push_wind_park_curtailments/","title":"Managing Unavailability via the alitiq Windpower API \u26a1","text":"<p>This guide explains how to push curtailments to the alitiq Wind API for wind parks. Curtailments represent reduced power production due to grid constraints, maintenance, or market-driven limitations.</p>"},{"location":"wind_power_forecast/push_wind_park_curtailments/#overview","title":"Overview","text":"<p>The alitiq Wind API allows you to submit and inspect curtailment/unavailability data from your windparks. This data is crucial for evaluating lost production potential and improving forecasting accuracy.</p>"},{"location":"wind_power_forecast/push_wind_park_curtailments/#key-features","title":"Key Features \u2728","text":"<ul> <li>Real-time Curtailments/unavailability: Push live curtailment events.  </li> <li>Historical Curtailments/unavailability: Submit past curtailment records for analysis.  </li> <li>Forecast Refinement: Curtailment/unavailability awareness improves forecast realism.  </li> <li>Flexible Time Windows: Define how time intervals align to your curtailment records.  </li> </ul>"},{"location":"wind_power_forecast/push_wind_park_curtailments/#required-curtailment-data","title":"Required Curtailment Data","text":"<p>When submitting curtailment data, include the following fields:</p> Field Type Description Default <code>location_id</code> <code>str</code> Unique ID of the wind park where the curtailment occurred. None <code>dt</code> <code>datetime</code> or <code>pandas.Timestamp</code> Timestamp representing the curtailment's time window. None <code>level</code> <code>float</code> Magnitude of curtailment (values between 0 and 1 ). None <code>timezone</code> <code>str</code> Timezone of the timestamp. Available timezones can be found here <code>UTC</code> <code>interval_in_minutes</code> <code>int</code> Interval length that the timestamp refers to. <code>15</code> <code>window_boundary</code> <code>str</code> Defines alignment of <code>dt</code> (<code>begin</code>, <code>center</code>, or <code>end</code>). <code>end</code>"},{"location":"wind_power_forecast/push_wind_park_curtailments/#example-code-to-push-curtailments","title":"Example Code to Push Curtailments","text":"<p>Use the <code>/wind/curtailments/add/</code> endpoint to submit data.</p> python requestsalitiq-py SDKcURL <pre><code>import requests\n\nurl = \"https://api.alitiq.com/wind/curtailments/add/\"\n\npayload = [\n    {\n        \"location_id\": \"WP001\",\n        \"dt\": \"2024-06-10T10:00:00.000\",\n        \"level\": 1.0,\n        \"interval_in_minutes\": 15,\n        \"timezone\": \"UTC\",\n        \"window_boundary\": \"end\"\n    },\n    {\n        \"location_id\": \"WP001\",\n        \"dt\": \"2024-06-10T10:15:00.000\",\n        \"level\": 1.0,\n        \"interval_in_minutes\": 15,\n        \"timezone\": \"UTC\",\n        \"window_boundary\": \"end\"\n    }\n]\nheaders = {\"Content-Type\": \"application/json\", \"x-api-key\": \"{your-api-key}\"}\n\nresponse = requests.post(url, json=payload, headers=headers)\nprint(response.text)\n</code></pre> <pre><code>from datetime import datetime\nfrom alitiq import alitiqWindAPI, CurtailmentForm\n\n# Initialize API client\nwind_api = alitiqWindAPI(api_key=\"your-api-key\")\n\n# Create curtailment records\ncurtailments = [\n    CurtailmentForm(\n        location_id=\"WP001\",\n        dt=datetime(2024, 6, 10, 10, 0).isoformat(),\n        level=1.0,\n        interval_in_minutes=15,\n        timezone=\"UTC\",\n        window_boundary=\"end\",\n    ),\n    CurtailmentForm(\n        location_id=\"WP001\",\n        dt=datetime(2024, 6, 10, 10, 15).isoformat(),\n        level=1.0,\n        interval_in_minutes=15,\n        timezone=\"UTC\",\n        window_boundary=\"end\",\n    ),\n]\n\n# Post to the API\nresponse = wind_api.post_curtailments(curtailments)\nprint(\"API Response:\", response)\n</code></pre> <pre><code>curl --request POST \\\n--url https://api.alitiq.com/wind/curtailments/add/ \\\n--header 'Content-Type: application/json' \\\n--header 'x-api-key: {your-api-key}' \\\n--data '[\n    {\n        \"location_id\": \"WP001\",\n        \"dt\": \"2024-06-10T10:00:00.000\",\n        \"level\": 1.0,\n        \"interval_in_minutes\": 15,\n        \"timezone\": \"UTC\",\n        \"window_boundary\": \"end\"\n    },\n    {\n        \"location_id\": \"WP001\",\n        \"dt\": \"2024-06-10T10:15:00.000\",\n        \"level\": 1.0,\n        \"interval_in_minutes\": 15,\n        \"timezone\": \"UTC\",\n        \"window_boundary\": \"end\"\n    }\n]'\n</code></pre> <p>Note</p> <p>You can push up to 10,000 curtailment records in one call. It is recommended to batch data by month per system.</p>"},{"location":"wind_power_forecast/push_wind_park_curtailments/#api-response","title":"API Response","text":"<ul> <li>\u2705 Success: The API returns an HTML confirmation indicating the curtailments were saved.  </li> <li>\u274c Error: If there's invalid input (e.g., invalid <code>window_boundary</code>), you'll receive a detailed HTTP error response.</li> </ul>"},{"location":"wind_power_forecast/push_wind_park_curtailments/#inspecting-curtailments","title":"Inspecting Curtailments","text":"<p>You can view stored curtailments using the <code>/wind/curtailments/inspect/</code> endpoint. Supported formats: - <code>json</code> (default) - <code>csv</code> - <code>html</code> (generates a timeseries plot)</p>"},{"location":"wind_power_forecast/push_wind_park_curtailments/#query-parameters","title":"Query Parameters:","text":"Parameter Type Description <code>location_id</code> <code>str</code> External ID of the location. <code>start_date</code> <code>str</code> Optional ISO date string. <code>end_date</code> <code>str</code> Optional ISO date string. <code>response_format</code> <code>str</code> One of <code>json</code>, <code>csv</code>, <code>html</code>."},{"location":"wind_power_forecast/push_wind_park_curtailments/#notes-on-best-practices","title":"Notes on Best Practices","text":"<ul> <li> <p>Mapping: Your <code>location_id</code> must be known to alitiq\u2014retrieved via the <code>get_id_locations_for_external_ids()</code> mapping.</p> </li> <li> <p>Use <code>UTC</code> whenever possible to ensure consistency.  </p> </li> <li>Window Alignment:<ul> <li><code>begin</code>: <code>dt</code> marks the start of the curtailment window  </li> <li><code>center</code>: <code>dt</code> is the center of the interval  </li> <li><code>end</code>: <code>dt</code> marks the end of the curtailment window  </li> </ul> </li> <li>Validation: Use the SDK's <code>CurtailmentForm</code> for safer and structured inputs.  </li> </ul>"},{"location":"wind_power_forecast/push_wind_park_curtailments/#contact","title":"Contact","text":"<p>For help or onboarding assistance, contact: support@alitiq.com \ud83d\udcac</p>"},{"location":"wind_power_forecast/push_wind_park_measurement/","title":"Pushing Measurements to the alitiq Windpower API \ud83d\udcca","text":"<p>This guide explains how to push measurements from a Windpark to the alitiq Wind API. Measurements are critical for enhancing forecast accuracy and for monitoring performance.  </p>"},{"location":"wind_power_forecast/push_wind_park_measurement/#overview","title":"Overview","text":"<p>The alitiq Wind API allows you to submit real-time or historical measurement data from your Windpark (aka location). Each measurement includes details about the time of recording and power output.</p>"},{"location":"wind_power_forecast/push_wind_park_measurement/#key-features","title":"Key Features \u2728","text":"<ul> <li>Real-time Measurements: Submit live data for improved forecast accuracy.  </li> <li>Historical Measurements: Push past data for performance analysis and enhanced forecasting.  </li> <li>Optimized Forecasting: With historical measurement data of up to 90 days, the API provides highly optimized forecasts tailored to your PV system.  </li> <li>Flexible Time Intervals: Define custom intervals for measurements (e.g., 15 minutes).  </li> </ul>"},{"location":"wind_power_forecast/push_wind_park_measurement/#required-measurement-data","title":"Required Measurement Data","text":"<p>When pushing measurements, you need to include the following information:  </p> Field Type Description Default <code>location_id</code> <code>str</code> Unique ID of the location where the measurement was recorded. None <code>dt</code> <code>datetime</code> Timestamp of the measurement (ISO 8601 format). None <code>power</code> <code>float</code> Power output recorded (in specified unit). None <code>power_measure</code> <code>str</code> Unit of power measurement (<code>kW</code>, <code>W</code>, etc.). <code>kW</code> <code>timezone</code> <code>str</code> Timezone of the measurement timestamp. Available timezones can be found here <code>UTC</code> <code>interval_in_minutes</code> <code>int</code> Interval between measurements (in minutes). <code>15</code> <code>window_boundary</code> <code>str</code> Defines the interval's alignment (<code>begin</code>, <code>center</code>, or <code>end</code>). <code>end</code>"},{"location":"wind_power_forecast/push_wind_park_measurement/#note-on-historical-measurements","title":"Note on Historical Measurements","text":"<p>To provide highly optimized forecasts, the API requires at least 90 days of historical measurement data for a given Windpark. This data enables the system to fine-tune forecasts to match the unique characteristics of your setup.  This data needs to updated once per day for the last 24 hours. In case of diurnal updates, alitiq will adapt the forecast tot the latest observations every 15 minutes. </p>"},{"location":"wind_power_forecast/push_wind_park_measurement/#example-code-to-push-measurements","title":"Example Code to Push Measurements","text":"<p>Here\u2019s an example demonstrating how to submit measurement data using the <code>measurement/add</code> endpoint and the python-SDK method <code>post_measurements</code>:</p> python requestsalitiq-pycURL <pre><code>import requests\n\nurl = \"https://api.alitiq.com/wind/measurement/add/\"\n\npayload = [\n    {\n        \"location_id\": \"2\",\n        \"dt\": \"2022-03-06T09:45:00.000\",\n        \"power\": 201,\n        \"interval_in_minutes\": 15,\n        \"timezone\": \"UTC\",\n        \"window_boundary\": \"end\",\n        \"power_measure\": \"kW\"\n    },\n    {\n        \"location_id\": \"2\",\n        \"dt\": \"2022-03-06T10:00:00.000\",\n        \"power\": 213,\n        \"interval_in_minutes\": 15,\n        \"timezone\": \"UTC\",\n        \"window_boundary\": \"end\",\n        \"power_measure\": \"kW\"\n    },\n    {\n        \"location_id\": \"2\",\n        \"dt\": \"2022-03-06T10:15:00.000\",\n        \"power\": 242,\n        \"interval_in_minutes\": 15,\n        \"timezone\": \"UTC\",\n        \"window_boundary\": \"end\",\n        \"power_measure\": \"kW\"\n    },\n    {\n        \"location_id\": \"2\",\n        \"dt\": \"2022-03-06T10:30:00.000\",\n        \"power\": 270,\n        \"interval_in_minutes\": 15,\n        \"timezone\": \"UTC\",\n        \"window_boundary\": \"end\",\n        \"power_measure\": \"kW\"\n    },\n    {\n        \"location_id\": \"2\",\n        \"dt\": \"2022-03-06T10:45:00.000\",\n        \"power\": 320,\n        \"interval_in_minutes\": 15,\n        \"timezone\": \"UTC\",\n        \"window_boundary\": \"end\",\n        \"power_measure\": \"kW\"\n    },\n    {\n        \"location_id\": \"2\",\n        \"dt\": \"2022-03-06T11:00:00.000\",\n        \"power\": 397,\n        \"interval_in_minutes\": 15,\n        \"timezone\": \"UTC\",\n        \"window_boundary\": \"end\",\n        \"power_measure\": \"kW\"\n    }\n]\nheaders = {\"Content-Type\": \"application/json\", \"x-api-key\": {api-key}}\n\nresponse = requests.request(\"POST\", url, json=payload, headers=headers)\n\nprint(response.text)\n</code></pre> <pre><code>from datetime import datetime\nfrom alitiq import alitiqWindAPI, WindPowerMeasurementForm\n\n# Initialize the API client\nwind_api = alitiqWindAPI(api_key=\"your-api-key\")\n\n# Create measurement data\nwind_power_measurement = [\n    WindPowerMeasurementForm(\n        location_id=\"WP123\",\n        dt=datetime(2024, 6, 10, 10).isoformat(),\n        power=120.5,\n        power_measure=\"kW\",\n        timezone=\"UTC\",\n        interval_in_minutes=15,\n        window_boundary=\"end\",\n    ),\n    WindPowerMeasurementForm(\n        location_id=\"WP123\",\n        dt=datetime(2024, 6, 10, 10, 15).isoformat(),\n        power=90.8,\n        power_measure=\"kW\",\n        timezone=\"UTC\",\n        interval_in_minutes=15,\n        window_boundary=\"end\",\n    ),\n    WindPowerMeasurementForm(\n        location_id=\"WP123\",\n        dt=datetime(2024, 6, 10, 10, 30).isoformat(),\n        power=150.0,\n        power_measure=\"kW\",\n        timezone=\"UTC\",\n        interval_in_minutes=15,\n        window_boundary=\"end\",\n    ),\n]\n\n# Push measurements to the API\nresponse = wind_api.post_measurements(wind_power_measurement)\n\n# Print the API response\nprint(\"API Response:\", response)\n</code></pre> <pre><code>curl --request POST \\\n  --url https://api.alitiq.com/wind/measurement/add/ \\\n  --header 'Content-Type: application/json' \\\n  --header 'x-api-key: {api-key}' \\\n  --data '[\n    {\n        \"location_id\": \"WP123\",\n        \"dt\": \"2022-03-06T09:45:00.000\",\n        \"power\": 201.0,\n        \"interval_in_minutes\": 15,\n        \"timezone\": \"UTC\",\n        \"window_boundary\": \"end\",\n        \"power_measure\": \"kW\"\n    },\n    {\n        \"location_id\": \"WP123\",\n        \"dt\": \"2022-03-06T10:00:00.000\",\n        \"power\": 213.0,\n        \"interval_in_minutes\": 15,\n        \"timezone\": \"UTC\",\n        \"window_boundary\": \"end\",\n        \"power_measure\": \"kW\"\n    },\n    {\n        \"location_id\": \"WP123\",\n        \"dt\": \"2022-03-06T10:15:00.000\",\n        \"power\": 242.0,\n        \"interval_in_minutes\": 15,\n        \"timezone\": \"UTC\",\n        \"window_boundary\": \"end\",\n        \"power_measure\": \"kW\"\n    },\n    {\n        \"location_id\": \"WP123\",\n        \"dt\": \"2022-03-06T10:30:00.000\",\n        \"power\": 270.0,\n        \"interval_in_minutes\": 15,\n        \"timezone\": \"UTC\",\n        \"window_boundary\": \"end\",\n        \"power_measure\": \"kW\"\n    },\n    {\n        \"location_id\": \"WP123\",\n        \"dt\": \"2022-03-06T10:45:00.000\",\n        \"power\": 320,\n        \"interval_in_minutes\": 15,\n        \"timezone\": \"UTC\",\n        \"window_boundary\": \"end\",\n        \"power_measure\": \"kW\"\n    },\n    {\n        \"location_id\": \"WP123\",\n        \"dt\": \"2022-03-06T11:00:00.000\",\n        \"power\": 397,\n        \"interval_in_minutes\": 15,\n        \"timezone\": \"UTC\",\n        \"window_boundary\": \"end\",\n        \"power_measure\": \"kW\"\n    }\n]'\n</code></pre> <p>Note</p> <p>Only up to 10000 samples are allowed to push at one call. We recommend to batch the data into monthly slices for each system.</p>"},{"location":"wind_power_forecast/push_wind_park_measurement/#api-response","title":"API Response","text":"<ul> <li>A successful request will return a confirmation message indicating the data was received and processed.  </li> <li>If there are validation errors (e.g., missing fields, incorrect formats), the API will return an error message with details.  </li> </ul>"},{"location":"wind_power_forecast/push_wind_park_measurement/#notes","title":"Notes","text":""},{"location":"wind_power_forecast/push_wind_park_measurement/#best-practices","title":"Best practices","text":"<ul> <li>Batch Submissions: Push multiple measurements in a single API call for efficiency.  </li> <li>Time Synchronization: Ensure timestamps (<code>dt</code>) are accurate and in the correct timezone.  By defining <code>timezone</code>, <code>interval_in_minutes</code> and <code>window_boundary</code> we ask you to deal with it. </li> <li>Historical Data: Provide at least 90 days of measurements to unlock optimized forecasting.  </li> <li>Validation: Use the SDK's <code>WindPowerMeasurementForm</code> for automatic data validation.  </li> </ul>"},{"location":"wind_power_forecast/push_wind_park_measurement/#interval-in-minutes","title":"Interval in minutes","text":"<p>The interval is important for measure transform into power (MW is default in alitiq's internal databases). Please take care that your data is aligned with the interval that you configure. </p>"},{"location":"wind_power_forecast/push_wind_park_measurement/#window-boundary","title":"Window - boundary","text":"<p>It is important that you know where your timestamp is bounded. It can make a huge difference and will lead to timeshifts in the forecast.  You maybe more familiar with pandas timestamp labels, so here we have mapping and a further explaination. In the future we will maybe allow for both. The examples refer to a quarter-hourly time interval:</p> <ul> <li><code>begin</code> : <code>left</code> -&gt; Timestamp 16:00 represents data from 16:00 to 16:15</li> <li><code>center</code> : <code>center</code> -&gt; Timestamp 16:07:30 represents data from 16:00 to 16:15</li> <li><code>end</code> : <code>right</code> -&gt; Timestamp 16:15 represents data from 16:00 to 16:15 (default in alitiq's databases)</li> </ul> <p>For further assistance, please reach out to support@alitiq.com. \ud83c\udf1f  </p>"},{"location":"wind_power_forecast/setup_wind_power_portfolio_forecast/","title":"Wind power forecasting locations","text":"<p>Welcome to the alitiq Wind Power Forecasting API! This guide explains how to create a location for a WindPark including an individual amount of turbines for your WindPark location.  </p>"},{"location":"wind_power_forecast/setup_wind_power_portfolio_forecast/#key-concepts","title":"Key Concepts \ud83d\udcda","text":"<p>In the alitiq Wind API, a WindPark is represented as a location with one or more wind turbines. Forecasts are generated for an entire WindPark, not for individual turbines.  </p> <p>A list of available wind turbines can be found here.  </p>"},{"location":"wind_power_forecast/setup_wind_power_portfolio_forecast/#windturbineschema","title":"WindTurbineSchema","text":"<p>A WindTurbine is defined by the following parameters:  </p> <ul> <li>Hub Height: The height from the ground to the center of the turbine\u2019s rotor (in meters).  </li> <li>Rotor Diameter: The total diameter of the turbine\u2019s rotor blades (in meters) [Optional].  </li> <li>Turbine Type: The specific model or manufacturer identifier for the wind turbine.  </li> <li>Installed Power: The maximum rated power output of the turbine (in kilowatts) Required in case you decided to use \"DEFAULT\" turbine type.  </li> </ul>"},{"location":"wind_power_forecast/setup_wind_power_portfolio_forecast/#add-a-new-windpark-to-your-portfolio","title":"Add a new WindPark to your portfolio \ud83d\ude80","text":"<p>To add a new location to your portfolio, you have to use the <code>wind_parks/add/</code> endpoint.</p> python requestsalitiq-pycURL <pre><code>import requests\n\nurl = \"https://api.alitiq.com/wind/wind_parks/add/\"\npayload = {\n  \"location_id\": \"WP123\",\n  \"latitude\": 51.52079,\n  \"longitude\": 7.75955194036,\n  \"site_name\": \"Test-site\",\n  #\"zip_code\": \"59423\",\n  #\"country\": \"DE\",\n  #\"tso_area\": \"Tennet\",\n  #\"nighttime_curtailment\": True,\n  #\"start_nighttime_curtailment\": \"22:00:00\",\n  #\"end_nighttime_curtailment\": \"06:00:00\",\n  #\"curtailment_level\": 0.3,\n  #\"time_zone_curtailment\": \"CET\",\n  \"wind_turbines\": [\n      {\n          \"hub_height\": 110.0,\n          \"rotor_diameter\": 136.0,\n          \"turbine_type\": \"VS136/3500\",\n          \"installed_power\": 3500.0\n      },\n      {\n          \"hub_height\": 110.0,\n          \"rotor_diameter\": 136.0,\n          \"turbine_type\": \"VS136/3500\",\n          \"installed_power\": 3500.0\n      }\n  ]\n}\nheaders = {\"Content-Type\": \"application/json\", \"x-api-key\": {api-key}}\n\nresponse = requests.request(\"POST\", url, json=payload, headers=headers)\n\nprint(response.text)\n</code></pre> <pre><code>from alitiq import alitiqWindAPI, WindParkModel\n\n# Initialize the API client\nwind_api = alitiqWindAPI(api_key=\"your-api-key\")\n\n# Define the WindPark\nwind_park_data = {\n  \"location_id\": \"WP123\",\n  \"latitude\": 51.52079,\n  \"longitude\": 7.75955194036,\n  \"site_name\": \"Test-site\",\n  #\"zip_code\": \"59423\",\n  #\"country\": \"DE\",\n  #\"tso_area\": \"Tennet\",\n  #\"nighttime_curtailment\": True,\n  #\"start_nighttime_curtailment\": \"22:00:00\",\n  #\"end_nighttime_curtailment\": \"06:00:00\",\n  #\"curtailment_level\": 0.3,\n  #\"time_zone_curtailment\": \"CET\",\n  \"wind_turbines\": [\n      {\n          \"hub_height\": 110.0,\n          \"rotor_diameter\": 136.0,\n          \"turbine_type\": \"VS136/3500\",\n          \"installed_power\": 3500.0\n      },\n      {\n          \"hub_height\": 110.0,\n          \"rotor_diameter\": 136.0,\n          \"turbine_type\": \"VS136/3500\",\n          \"installed_power\": 3500.0\n      }\n  ]\n}\n\n# Create the location\nresponse = wind_api.create_location(WindParkModel(**wind_park_data))\nprint(\"Location created:\", response)\n</code></pre> <pre><code>curl --request POST \\\n  --url https://api.alitiq.com/wind/wind_parks/add/ \\\n  --header 'Content-Type: application/json' \\\n  --header 'x-api-key: {api-key}' \\\n  --data '{\n    \"location_id\": \"WP123\",\n    \"latitude\": 51.52079,\n    \"longitude\": 7.75955194036,\n    \"site_name\": \"Test-site\",\n    \"wind_turbines\": [\n        {\n            \"hub_height\": 110.0,\n            \"rotor_diameter\": 136.0,\n            \"turbine_type\": \"VS136/3500\",\n            \"installed_power\": 3500.0\n        },\n        {\n            \"hub_height\": 110.0,\n            \"rotor_diameter\": 136.0,\n            \"turbine_type\": \"VS136/3500\",\n            \"installed_power\": 3500.0\n        }\n    ]\n  }'\n</code></pre> <p>Note</p> <p>After you have created your first or new pv system, it takes up to 6 hours to receive a first forecast under <code>optimized</code>. When you do not provide measurement data, the <code>optimized</code> is just a baseline forecast. No optimisation was done int htat case. Baseline forecast under <code>icon_eu</code> or <code>icon_global</code> is available with a delay of 5 minutes after creation. Optimized forecast are available the next day in case you have provided measurement data from the system.</p>"},{"location":"wind_power_forecast/setup_wind_power_portfolio_forecast/#inspect-your-portfolio","title":"Inspect your portfolio","text":"<p>After setting up your portfolio or to check out existing locations, you can use the <code>wind_parks/list/</code> endpoint.</p> python requestsalitiq-pycURL <pre><code>import requests\n\nurl = \"https://api.alitiq.com/wind/wind_parks/list/\"\n\nquerystring = {\"response_format\":\"html\"}\n\npayload = \"\"\nheaders = {\"x-api-key\": {api-key}}\nresponse = requests.request(\"GET\", url, data=payload, params=querystring, headers=headers)\n\nprint(response.text)\n</code></pre> <pre><code>from alitiq import alitiqWindAPI\n\n# Initialize the API client\nwind_api = alitiqWindAPI(api_key=\"your-api-key\")\n\n# return the location as a pd.DataFrame\nresponse = wind_api.list_locations()\nprint(\"Locations:\", response)\n</code></pre> <pre><code>curl --request GET \\\n  --url 'https://api.alitiq.com/wind/wind_parks/list/?response_format=json' \\\n  --header 'x-api-key: api-key'\n</code></pre> <p>Example response json:  <pre><code>{\n  \"columns\":\n  [\n    \"location_id\",\n    \"altitude\",\n    \"latitude\",\n    \"longitude\",\n    \"site_name\",\n    \"zip_code\",\n    \"country\",\n    \"tso_area\",\n    \"nighttime_curtailment\",\n    \"start_nighttime_curtailment\",\n    \"end_nighttime_curtailment\",\n    \"curtailment_level\",\n    \"time_zone_curtailment\",\n    \"mrl_power\",\n    \"eeg_key\",\n    \"turbine_id\",\n    \"hub_height\",\n    \"rotor_diameter\",\n    \"turbine_type\",\n    \"installed_power\"\n  ],\"index\":[0,1],\n  \"data\":[\n    [\"WP123\",176.6,51.52,7.76,\"Test-site\",null,null,null,null,null,null,null,null,null,null,658,110.0,136.0,\"VS136/3500\",3500.0],\n    [\"WP123\",176.6,51.52,7.76,\"Test-site\",null,null,null,null,null,null,null,null,null,null,659,110.0,136.0,\"VS136/3500\",3500.0]]\n}\n</code></pre></p> <p>In the response of your portfolio you might find additional information that you have not defined e.g. the TSO-Area or a ZIP Code. These information are defined by alitiq.</p> <p>In case you use the html- Response of the API the systems will be shown in a table like this: </p> <p></p>"},{"location":"wind_power_forecast/setup_wind_power_portfolio_forecast/#delete-system-from-your-portfolio","title":"Delete system from your portfolio","text":"<p>In case you want to delete a pv-system from your portfolio, you can simply use a POST request to the endpoint <code>wind_parks/delete/</code> it. Please use your individually defined location_id to delete the system: </p> python requestsalitiq-pycURL <pre><code>import requests\n\nurl = \"https://api.alitiq.com/wind/wind_parks/delete/\"\n\nquerystring = {\"location_id\": \"your-location-id-to-delete\"}\n\npayload = \"\"\nheaders = {\"x-api-key\": {api-key}}\nresponse = requests.request(\"POST\", url, data=payload, params=querystring, headers=headers)\n\nprint(response.text)\n</code></pre> <pre><code>from alitiq import alitiqWindAPI\n\n# Initialize the API client\nwind_api = alitiqWindAPI(api_key=\"your-api-key\")\n\n# delete location \nresponse = wind_api.delete_location(\"your-location-id-to_delete\")\nprint(response.text)\n</code></pre> <pre><code>curl --request POST \\\n  --url 'https://api.alitiq.com/solar/pv_systems/delete/?location_id=your-location-id-to_delete' \\\n  --header 'x-api-key: api-key'\n</code></pre>"},{"location":"wind_power_forecast/setup_wind_power_portfolio_forecast/#faqs","title":"FAQs \u2753","text":""},{"location":"wind_power_forecast/setup_wind_power_portfolio_forecast/#my-turbine-is-not-listed","title":"My turbine is not listed?","text":"<p>Feel free to contact us as support@alitiq.com  . In the meantime, you can choose <code>DEFAULT</code> as turbine type, and submit an installed power. </p>"},{"location":"wind_power_forecast/setup_wind_power_portfolio_forecast/#can-i-update-the-location-later","title":"Can I update the location later?","text":"<p>Currently not, this feature is under development. Please <code>delete</code> the WindPark and re-configure it.</p>"},{"location":"wind_power_forecast/setup_wind_power_portfolio_forecast/#support-feedback","title":"Support &amp; Feedback \ud83d\udcac","text":"<ul> <li>Contact Support: support@alitiq.com </li> </ul> <p>\ud83c\udf1f Start forecasting smarter with alitiq today! \ud83c\udf1f  </p>"},{"location":"wind_power_forecast/wind_power_forecast/","title":"Accessing Forecasts with the alitiq Windpower API","text":"<p>The alitiq Wind API provides robust and flexible forecasting capabilities for individual Windparks and entire portfolios. This guide walks you through retrieving forecasts and explains the parameters that allow you to tailor the output to your specific needs.</p>"},{"location":"wind_power_forecast/wind_power_forecast/#features","title":"Features \ud83c\udf1f","text":"<ul> <li>Flexibility in Forecasting: Customize forecasts using parameters such as timezone (<code>tz</code>), interval, and power measurement.  </li> <li>System-Level Forecasting: Retrieve precise forecasts for individual Windparks ( aka. locations).  </li> <li>Portfolio-Level Forecasting: Aggregate forecasts for your entire portfolio in one request.  </li> <li>Time-Specific Forecasts: Fetch forecasts calculated at specific times (<code>dt_calc</code>) for advanced planning.  </li> <li>Easy Access &amp; Integration: By using your own location identifier it is easy to access the right forecasts and  integrate it into your system</li> </ul>"},{"location":"wind_power_forecast/wind_power_forecast/#forecasting-for-a-single-windpark","title":"Forecasting for a Single Windpark","text":"<p>To access a forecast for a specific Windpark, use the <code>forecast/single/</code> endpoint from the API or the <code>get_forecast</code> method from the SDK.</p>"},{"location":"wind_power_forecast/wind_power_forecast/#example","title":"Example","text":"python requestsalitiq-pycURL <pre><code>import requests\n\nurl = \"https://api.alitiq.com/wind/forecast/single/\"\n\nquerystring = {\"location_id\":\"WP123\",\"response_format\":\"html\",\"weather_model\":\"icon_eu\",\"timezone\":\"UTC\",\"power_measure\":\"kW\",\"interval_in_minutes\":\"15\"}\n\npayload = \"\"\nheaders = {\"x-api-key\": \"your-api-key\"}\n\nresponse = requests.request(\"GET\", url, data=payload, headers=headers, params=querystring)\n\nprint(response.text)\n</code></pre> <pre><code>from datetime import datetime\nfrom alitiq import alitiqWindAPI\n\n# Initialize the Wind API client\nwind_api = alitiqWindAPI(api_key=\"your-api-key\")\n\n# Retrieve forecast for a specific WindPark\nforecast = wind_api.get_forecast(\n    location_id=\"WP123\",  # Replace with your system's location ID\n    dt_calc=datetime(2024, 6, 15, 12),  # Optional: specify the calculation timestamp\n    power_measure=\"kW\",  # Specify the power measurement unit\n    timezone=\"UTC\",  # Set the timezone\n    interval_in_minutes=15,  # Set the forecast interval\n    window_boundary=\"end\"  # Define how intervals are calculated\n)\n\n# Display the forecast\nprint(forecast)\n</code></pre> <pre><code>curl --request GET \\\n  --url 'https://api.alitiq.com/wind/forecast/single/?location_id=123&amp;response_format=json&amp;weather_model=icon_eu&amp;timezone=UTC&amp;power_measure=kW&amp;interval_in_minutes=15' \\\n  --header 'x-api-key: your-api-key'\n</code></pre>"},{"location":"wind_power_forecast/wind_power_forecast/#forecasting-for-an-entire-portfolio","title":"Forecasting for an Entire Portfolio","text":"<p>To access a forecast for your whole portfolio of PV systems, use the <code>forecast/portfolio/</code> endpoint from the API or the <code>get_forecast_portfolio</code> method from the SDK.</p>"},{"location":"wind_power_forecast/wind_power_forecast/#example_1","title":"Example","text":"python requestsalitiq-pycURL <pre><code>import requests\n\nurl = \"https://api.alitiq.com/wind/forecast/portfolio/\"\n\nquerystring = {\"response_format\":\"html\",\"weather_model\":\"icon_eu\",\"timezone\":\"UTC\",\"power_measure\":\"kW\",\"interval_in_minutes\":\"15\", \"portfolio_sum_column\":\"False\"}\n\npayload = \"\"\nheaders = {\"x-api-key\": \"your-api-key\"}\n\nresponse = requests.request(\"GET\", url, data=payload, headers=headers, params=querystring)\n\nprint(response.text)\n</code></pre> <pre><code>from datetime import datetime\nfrom alitiq import alitiqWindAPI\n\n# Initialize the Wind API client\nwind_api = alitiqWindAPI(api_key=\"your-api-key\")\n\n# Retrieve portfolio-wide forecast\nportfolio_forecast = wind_api.get_forecast_portfolio(\n    dt_calc=datetime(2024, 6, 15, 12),  # Optional: specify the calculation timestamp\n    power_measure=\"kW\",  # Specify the power measurement unit\n    timezone=\"UTC\",  # Set the timezone\n    interval_in_minutes=15,  # Set the forecast interval\n    window_boundary=\"end\",  # Define how intervals are calculated\n    portfolio_sum_column=True  # Optionally include a column summing all systems\n)\n\n# Display the portfolio forecast\nprint(portfolio_forecast)\n</code></pre> <pre><code>curl --request GET \\\n  --url 'https://api.alitiq.com/wind/forecast/portfolio/?response_format=csv&amp;weather_model=icon_eu&amp;timezone=UTC&amp;power_measure=kW&amp;interval_in_minutes=15' \\\n  --header 'x-api-key: your-api-key'\n</code></pre>"},{"location":"wind_power_forecast/wind_power_forecast/#understanding-forecast-parameters","title":"Understanding Forecast Parameters","text":"<p>The following parameters offer you flexibility when generating forecasts:  </p> Parameter Description Default Value <code>location_id</code> Unique identifier for the WindPark. Required for system-level forecasts. This is your defined identifer. None <code>dt_calc</code> Timestamp for forecast calculation. Useful for time-specific forecasts, and access historic ones. Latest available <code>power_measure</code> Unit of power measurement (<code>kW</code>, <code>MW</code>, etc.). <code>\"kW\"</code> <code>timezone</code> Timezone for the forecast timestamps. Available timezones can be found here <code>\"UTC\"</code> <code>interval_in_minutes</code> Forecast interval (e.g., <code>15</code> for 15-minute intervals). Important for retieviing Energy instead of Power <code>15</code> <code>window_boundary</code> Defines interval boundaries (<code>begin</code>, <code>center</code>, or <code>end</code>). <code>\"end\"</code> <code>portfolio_sum_column</code> Adds a column summing forecasts for all systems in the portfolio. <code>True</code>"},{"location":"wind_power_forecast/wind_power_forecast/#flexibility-as-a-feature","title":"Flexibility as a Feature","text":"<p>The flexibility to define parameters ensures that the API adapts to various use cases, whether you need:  </p> <ul> <li>Forecasts for specific systems.  </li> <li>Aggregated data for an entire portfolio.  </li> <li>Customized intervals and time zones.  </li> <li>Tailored outputs based on specific power measurement units.  </li> <li>Easy integration by using your own identifiers</li> </ul> <p>This adaptability makes the alitiq Wind API a powerful tool for energy planning and decision-making.  </p>"},{"location":"wind_power_forecast/wind_power_forecast/#support","title":"Support","text":"<p>For further assistance, contact support@alitiq.com. \ud83c\udf1e  </p>"},{"location":"knowledge/archive/2025/","title":"2025","text":""},{"location":"knowledge/archive/2024/","title":"2024","text":""},{"location":"knowledge/category/load/","title":"Load","text":""},{"location":"knowledge/category/io/","title":"IO","text":""},{"location":"knowledge/category/solar-app/","title":"Solar-APP","text":""},{"location":"knowledge/category/evaluation/","title":"Evaluation","text":""}]}